<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaGuang</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-07-28T06:06:30.034Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>DaGuang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>概念补充知识</title>
    <link href="http://example.com/2023/07/27/Linux/%E6%A6%82%E5%BF%B5%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2023/07/27/Linux/%E6%A6%82%E5%BF%B5%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/</id>
    <published>2023-07-27T09:31:59.000Z</published>
    <updated>2023-07-28T06:06:30.034Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg">  </p><span id="more"></span><h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><h2 id="用户态与内核态"><a href="#用户态与内核态" class="headerlink" title="用户态与内核态"></a>用户态与内核态</h2><p>用户态和内核态是两种不同的特权级别，用于区分进程执行时的权限和资源访问的范围，这是操作系统的核心概念之一，有助于保护系统的稳定性和安全性。  </p><h3 id="用户态"><a href="#用户态" class="headerlink" title="用户态"></a>用户态</h3><p>用户态是进程执行时的一种受限状态，进程在用户态下运行时，只能访问受限的资源和执行受限的操作。在用户态下，进程不能直接访问操作系统的底层资源，如内存管理单元，硬件设备、中断处理等。如果进程需要执行需要更高权限的操作或访问受限资源，它必须通过系统调用来请求内核的帮助。<br>在用户态下，进程运行的代码通常是应用程序代码，如用户编写的应用程序或库。用户态的代码执行速度较快，但受到操作系统的限制，无法直接操作硬件设备或访问核心资源。   </p><h3 id="内核态"><a href="#内核态" class="headerlink" title="内核态"></a>内核态</h3><p>内核态是进程执行时的特权状态，进程在内核态下拥有访问操作系统核心资源和执行特权操作的权限。在内核态下，进程可以执行任意指令，包括访问所有硬件设备、执行特权指令、直接操作内存等。内核态的代码通常是操作系统内核代码。  </p><h2 id="软中断与硬中断"><a href="#软中断与硬中断" class="headerlink" title="软中断与硬中断"></a>软中断与硬中断</h2><p><strong>中断</strong>指当出现需要时，CPU暂时停止当前程序的执行转而执行处理新情况的程序和执行过程。即在程序运行过程中，系统出现了一个必须由CPU立即处理的情况，此时，CPU暂时中止程序的执行转而处理这个新的情况的过程就叫做中断。  </p><h3 id="硬中断"><a href="#硬中断" class="headerlink" title="硬中断"></a>硬中断</h3><p>硬中断是由计算机硬件发出的中断信号，用于向处理器通知某个特定事件的发生，如外部设备请求处理、定时器中断、硬件故障等。硬件中断是异步的，即发生中断的时间点是不可预测的，处理器必须立即中止当前正在执行的任务并跳转到中断服务例程来处理中断请求。硬中断使用硬件中断向量来识别和处理不同类型的中断。<br>硬中断的触发可以由外部设备、CPU内部的定时器或其他硬件组件引起。处理器在接收到硬中断信号后，会根据硬件中断向量找到对应的中断处理程序，并在处理完中断后返回到被中断的程序。  </p><h3 id="软中断"><a href="#软中断" class="headerlink" title="软中断"></a>软中断</h3><p>软中断是由计算机软件（通常是运行在用户空间的程序或操作系统内核代码）主动触发的中断。软中断是通过特定的指令来引发的，例如在x86架构的CPU中，使用INT指令产生软中断。软中断通常用于实现系统调用（System Call）和在用户空间和内核空间之间传递消息或请求。<br>软中断是同步的，即由程序主动发起，因此它们不会像硬中断那样随机发生。软中断的使用可以在用户态和内核态之间切换，并允许用户程序请求操作系统的服务和资源。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="补充知识" scheme="http://example.com/tags/%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透</title>
    <link href="http://example.com/2023/07/11/Linux/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>http://example.com/2023/07/11/Linux/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</id>
    <published>2023-07-11T02:52:41.000Z</published>
    <updated>2023-07-25T10:00:07.215Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/07/11/K52GWMsvbiNehtX.jpg">  </p><span id="more"></span><h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><p>内网穿透是一种技术，它允许在局域网中的计算机或设备可以通过公共网络进行访问</p><h2 id="Ngrok"><a href="#Ngrok" class="headerlink" title="Ngrok"></a>Ngrok</h2><p>官网：<a href="https://ngrok.com/download">https://ngrok.com/download</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从官网下载安装包</span></span><br><span class="line">wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz</span><br><span class="line"></span><br><span class="line">tar xvzf ngrok-v3-stable-linux-amd64.tgz -C /usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line">ngrok config add-authtoken &lt;token&gt;  <span class="comment">#注册账号，补充为自己的token</span></span><br><span class="line">Authtoken saved to configuration file: /root/.config/ngrok/ngrok.yml</span><br><span class="line"></span><br><span class="line">ngrok http 80   <span class="comment">#将本地80端口转发</span></span><br><span class="line">ngrok tcp 22    <span class="comment">#将本地22端口转发，其他使用--help进行查看</span></span><br></pre></td></tr></table></figure><h2 id="natapp"><a href="#natapp" class="headerlink" title="natapp"></a>natapp</h2><p>natapp是基于ngrok的国内高速内网穿透专业服务商<br>官网：<a href="https://natapp.cn/">https://natapp.cn/</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从官网下载安装包  </span></span><br><span class="line">wget https://cdn.natapp.cn/assets/downloads/clients/2_3_9/natapp_linux_amd64/natapp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在官网注册账号，可以使用免费的TCP隧道，取得免费隧道的token</span></span><br><span class="line">natapp -authtoken=XXXXXXXXXX</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行后就会获得一个远程的链接</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/07/11/K52GWMsvbiNehtX.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="内网穿透" scheme="http://example.com/categories/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>文件传输利器Croc</title>
    <link href="http://example.com/2023/04/12/Linux/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%88%A9%E5%99%A8Croc/"/>
    <id>http://example.com/2023/04/12/Linux/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%88%A9%E5%99%A8Croc/</id>
    <published>2023-04-12T07:32:54.000Z</published>
    <updated>2023-06-12T07:24:57.104Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/04/12/sbYWUPAVv9o6uyn.jpg" alt="croc.jpg">  </p><span id="more"></span><h1 id="Croc"><a href="#Croc" class="headerlink" title="Croc"></a>Croc</h1><p><a href="https://gitee.com/weidong1987/croc/">https://gitee.com/weidong1987/croc/</a><br>Croc是允许任意两台计算机简单安全的传输文件和文件夹的工具，由于此工具是通过 relay server 方式来进行传送，所以指令会预设连到官方所搭建的服务器  </p><h2 id="安装以及使用"><a href="#安装以及使用" class="headerlink" title="安装以及使用"></a>安装以及使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> linux中安装</span></span><br><span class="line">curl https://getcroc.schollz.com | bash</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发送端：注意不要关闭进程，等待文件接收端接受，接收完毕后自动关闭</span></span><br><span class="line"><span class="meta">~]#</span><span class="bash"> croc send <span class="built_in">test</span></span> </span><br><span class="line">Sending &#x27;test&#x27; (0 B)             </span><br><span class="line">Code is: 7042-solo-sharp-flex</span><br><span class="line">On the other computer run</span><br><span class="line"></span><br><span class="line">croc 7042-solo-sharp-flex   #文件接收命令</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">接收端</span></span><br><span class="line"><span class="meta">~]#</span><span class="bash"> croc 7042-solo-sharp-flex</span></span><br><span class="line">Accept &#x27;test&#x27; (0 B)? (Y/n) y</span><br><span class="line"></span><br><span class="line">Receiving (&lt;-127.0.0.1:43692)</span><br><span class="line">test 100% |████████████████████| ( 0/ 1 B)</span><br></pre></td></tr></table></figure><h2 id="本地部署Relay-Server"><a href="#本地部署Relay-Server" class="headerlink" title="本地部署Relay Server"></a>本地部署Relay Server</h2><p>执行croc relay，会在当前主机多个端口启动TCP server。可指定单一Port：croc relay –ports 3001</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">croc relay --ports 3001  #指定单一端口3001</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 传输文件</span></span><br><span class="line"><span class="meta">~]#</span><span class="bash"> croc --relay 127.0.0.1:3001 send <span class="built_in">test</span></span></span><br><span class="line">Sending &#x27;test&#x27; (0 B)             </span><br><span class="line">Code is: 6067-diesel-filter-sample</span><br><span class="line">On the other computer run</span><br><span class="line"></span><br><span class="line">croc --relay 127.0.0.1:3001 6067-diesel-filter-sample  #文件接收命令，在其他终端中使用时需要将IP修改为发送者的IP</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/04/12/sbYWUPAVv9o6uyn.jpg&quot; alt=&quot;croc.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="croc" scheme="http://example.com/tags/croc/"/>
    
  </entry>
  
  <entry>
    <title>CUDA</title>
    <link href="http://example.com/2023/03/31/Linux/CUDA/"/>
    <id>http://example.com/2023/03/31/Linux/CUDA/</id>
    <published>2023-03-31T03:57:05.000Z</published>
    <updated>2023-07-28T05:42:09.904Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/03/31/ZCIbAMtS4Xnd5jU.png">  </p><span id="more"></span>  <h1 id="CUDA是什么"><a href="#CUDA是什么" class="headerlink" title="CUDA是什么"></a>CUDA是什么</h1><p>CUDA是NVIDIA公司开发的一种并行计算平台和编程模型，可以将大量的计算任务分配到GPU上，以便加速计算速度，使用在科学计算、深度学习、图形处理和其他需要大量计算的领域。CUDA已经成为GPU计算的主要平台之一，许多高性能计算应用程序都使用CUDA来实现加速。  </p><h1 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h1><p><a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA下载</a>、<a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html">CUDA安装指南</a>  </p><h2 id="安装前操作"><a href="#安装前操作" class="headerlink" title="安装前操作"></a>安装前操作</h2><ol><li><p>查看操作系统对CUDA版本是否支持<br>在<a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html">CUDA安装指南</a>中查看操作系统是否支持CUDA。  </p></li><li><p>验证是否有支持CUDA的GPU  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -i nvidia </span><br></pre></td></tr></table></figure><p>若没有，可以使用<code>update-pciids</code>更新PCI数据库的信息，重新进行查找</p></li><li><p>验证是否安装GCC  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装CUDA-1"><a href="#安装CUDA-1" class="headerlink" title="安装CUDA"></a>安装CUDA</h2><p>按照下载界面提供的安装方式进行安装  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/12.1.0/local_installers/cuda_12.1.0_530.30.02_linux.run</span><br><span class="line">sudo sh cuda_12.1.0_530.30.02_linux.run</span><br></pre></td></tr></table></figure><p>修改环境变量  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export PATH=/usr/local/cuda-12.0/bin$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda-12.0/lib64$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>source ~/.bashrc</code>之后通过<code>nvcc -V</code>查看是否安装成功<br><code>nvidia-smi</code>中可以查看GPU相关信息，包括使用率、内存使用情况、温度、进程信息等  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Fri Jul 28 10:44:43 2023       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 510.85.02    Driver Version: 510.85.02    CUDA Version: 11.6     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  NVIDIA A100-PCI...  Off  | 00000000:18:00.0 Off |                    0 |</span><br><span class="line">| N/A   30C    P0    33W / 250W |      0MiB / 40960MiB |      0%      Default |</span><br><span class="line">|                               |                      |             Disabled |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   1  NVIDIA A100-PCI...  Off  | 00000000:AF:00.0 Off |                    0 |</span><br><span class="line">| N/A   30C    P0    31W / 250W |      0MiB / 40960MiB |      0%      Default |</span><br><span class="line">|                               |                      |             Disabled |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line"><span class="comment"># NVIDIA-SMI 510.85.02：工具版本号</span></span><br><span class="line"><span class="comment"># Driver Version: 510.85.02：驱动版本号</span></span><br><span class="line"><span class="comment"># CUDA Version: 11.6：CUDA版本号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 表格对应</span></span><br><span class="line"><span class="comment"># GPU &lt;--&gt; 0：GPU编号  </span></span><br><span class="line"><span class="comment"># Persistence-M &lt;--&gt; off：持续性模式，默认关闭，开启该模式能够让GPU更快响应任务，但会增加待机功耗</span></span><br><span class="line"><span class="comment"># Bus-Id &lt;--&gt; 00000000:18:00.0：显卡总线ID，标识显卡在系统中的位置</span></span><br><span class="line"><span class="comment"># Disp.A &lt;--&gt; Off：是否被用于显示输出</span></span><br><span class="line"><span class="comment"># Volatile Uncorr. ECC &lt;--&gt; 0：显卡显存的错误纠正码（ECC）情况。N/A 表示当前未开启 ECC 或不支持 ECC。</span></span><br><span class="line"><span class="comment"># Fan &lt;--&gt; N/A:显卡风扇转速  </span></span><br><span class="line"><span class="comment"># Temp &lt;--&gt; 30C：显卡温度</span></span><br><span class="line"><span class="comment"># Perf &lt;--&gt; ：显卡性能状态，P0-P15、P32。P0表示最大性能状态，P15表示最小性能状态，P32表示状态未知。</span></span><br><span class="line"><span class="comment"># Pwr:Usage/Cap &lt;--&gt; 33W / 250W：功耗，当前功耗/最大功耗</span></span><br><span class="line"><span class="comment"># Memory-Usage &lt;--&gt; 0MiB / 40960MiB：显存使用情况</span></span><br><span class="line"><span class="comment"># GPU-Util &lt;--&gt; 0%：GPU利用率</span></span><br><span class="line"><span class="comment"># Compute M. &lt;--&gt; Default：显卡计算模式，三种类型：GFLOPS，TMUs和ROPs，Default为GFLOPS模式</span></span><br><span class="line"><span class="comment"># MIG M. &lt;--&gt; Disabled：MIG是一种GPU技术，这里表示是否开启使用该技术</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/03/31/ZCIbAMtS4Xnd5jU.png&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="ipmitool" scheme="http://example.com/tags/ipmitool/"/>
    
  </entry>
  
  <entry>
    <title>ipmitool命令</title>
    <link href="http://example.com/2023/03/31/Linux/ipmitool%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2023/03/31/Linux/ipmitool%E5%91%BD%E4%BB%A4/</id>
    <published>2023-03-31T01:48:34.000Z</published>
    <updated>2023-07-28T06:17:38.869Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2023/03/31/rckvO9SjyoTBpXn.png">  </p><span id="more"></span><h1 id="什么是IPMI"><a href="#什么是IPMI" class="headerlink" title="什么是IPMI"></a>什么是IPMI</h1><p>是一种硬件管理接口，也就是常说的服务器的管理口，提供一种标准化的硬件管理接口，使系统管理员能够远程管理服务器的硬件。  </p><ul><li>功能  </li></ul><ol><li>硬件监控：IPMI可以监控服务器的各种硬件组件，包括CPU、内存、硬盘、电源、风扇、温度、电压等，管理员可以远程监控服务器的硬件状态，及时发现和解决故障。  </li><li>硬件远程管理：IPMI支持远程控制服务器的电源开关、重启、硬件配置等，管理员可以通过网络远程控制服务器的各种硬件操作。  </li><li>事件日志：IPMI可以记录服务器的事件日志，包括服务器硬件发生的错误、警告和事件等，管理员可以远程查看服务器的事件日志，及时发现和解决问题。  </li><li>远程系统维护：IPMI可以让管理员在操作系统出现故障时，通过网络远程进入服务器的BIOS设置，对服务器进行维护和修复。  </li></ol><h1 id="ipmitool"><a href="#ipmitool" class="headerlink" title="ipmitool"></a>ipmitool</h1><p>虽然在BMC web界面中可以查看到大部分的服务器信息以及执行操作，但使用ipmitool可以查看到更加详细的相关数据与操作</p><h2 id="电源控制类"><a href="#电源控制类" class="headerlink" title="电源控制类"></a>电源控制类</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password chassis power off</span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password chassis power on</span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password chassis power reset</span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password chassis power cycle</span><br></pre></td></tr></table></figure><p>cycle会先关闭服务器电源，然后再开启服务器电源，会对服务器进行完全的启动  </p><h2 id="读取信息状态类"><a href="#读取信息状态类" class="headerlink" title="读取信息状态类"></a>读取信息状态类</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password sensor list   # 此命令列出服务器上的所有传感器及其当前的读数。例如，查看CPU温度、风扇速度、电压等信息。</span><br><span class="line">ipmitool sensor get &quot;&lt;Sensor Name&gt;&quot;  #查看指定传感器的读数</span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password sdr list # 此命令列出服务器上的所有传感器，包括其ID、类型、状态和阈值等信息</span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password user list # 此命令列出服务器上的所有BMC用户，包括其ID、用户名、权限等信息。</span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password fru list # 此命令列出服务器的FRU（Field Replaceable Unit）信息，包括制造商、型号、序列号等信息 </span><br><span class="line"></span><br><span class="line">ipmitool -I lanplus -H BMC_IP –U BMC_user –P BMC_password mc info # 此命令用于查看服务器的管理控制器信息，包括版本号、IP地址、固件版本等信息。</span><br></pre></td></tr></table></figure><h2 id="忘记BMC密码后，使用在服务器中使用ipmitool命令修改BMC用户密码"><a href="#忘记BMC密码后，使用在服务器中使用ipmitool命令修改BMC用户密码" class="headerlink" title="忘记BMC密码后，使用在服务器中使用ipmitool命令修改BMC用户密码"></a>忘记BMC密码后，使用在服务器中使用ipmitool命令修改BMC用户密码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipmitool user list  #首先查看需要修改密码的BMC用户对应的ID</span><br><span class="line">ipmitool user set password ID_NUM  #对指定ID的BMC用户修改密码 </span><br></pre></td></tr></table></figure><h2 id="查看BMC-IP、以及修改BMC-IP"><a href="#查看BMC-IP、以及修改BMC-IP" class="headerlink" title="查看BMC IP、以及修改BMC IP"></a>查看BMC IP、以及修改BMC IP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipmitool lan print 1  #查看BMC 配置信息，1表示默认使用的通道号，用于大多数IPMI操作，其他通道可能用于特定用途</span><br><span class="line">ipmitool lan set 1 ipaddr NEW_BMC_IP #为BMC配置新的IP地址</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/03/31/rckvO9SjyoTBpXn.png&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="ipmitool" scheme="http://example.com/tags/ipmitool/"/>
    
  </entry>
  
  <entry>
    <title>eNSP相关问题</title>
    <link href="http://example.com/2023/03/24/%E7%BD%91%E7%BB%9C/eNSP%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2023/03/24/%E7%BD%91%E7%BB%9C/eNSP%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2023-03-24T09:24:49.000Z</published>
    <updated>2023-03-24T09:30:20.741Z</updated>
    
    <content type="html"><![CDATA[<center> eNSP相关问题 </center><span id="more"></span>  <h1 id="在进行交换机实验时，命令行中一直有提示"><a href="#在进行交换机实验时，命令行中一直有提示" class="headerlink" title="在进行交换机实验时，命令行中一直有提示"></a>在进行交换机实验时，命令行中一直有提示</h1><p><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/eNSP%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/%E6%8F%90%E7%A4%BA.png"><br>该提示为交换配置发生变化的正常提示，使用<code>un info en</code> 关闭当前配置信息告警即可  </p>]]></content>
    
    
    <summary type="html">&lt;center&gt; eNSP相关问题 &lt;/center&gt;</summary>
    
    
    
    <category term="eNSP" scheme="http://example.com/categories/eNSP/"/>
    
    
    <category term="eNSP" scheme="http://example.com/tags/eNSP/"/>
    
  </entry>
  
  <entry>
    <title>1-网络基础</title>
    <link href="http://example.com/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</id>
    <published>2023-03-24T02:15:41.000Z</published>
    <updated>2023-03-28T07:58:32.982Z</updated>
    
    <content type="html"><![CDATA[<center> 网络基础知识 </center><span id="more"></span>  # 部分基础知识  由网络位划分网段，子网掩码决定网络位的长度，网关连接不同的网段  IP：192.168.27.1  netmask：255.255.0.0  表示IP地址前两段是网络位  DHCP：自动分配IP地址<h1 id="TCP与UDP的区别"><a href="#TCP与UDP的区别" class="headerlink" title="TCP与UDP的区别"></a>TCP与UDP的区别</h1><p>TCP:可靠服务、完整性高、有连接、对延迟不敏感<br>UDP:无连接、对延迟敏感</p><h1 id="OSI七层模型和TCP-IP四层模型"><a href="#OSI七层模型和TCP-IP四层模型" class="headerlink" title="OSI七层模型和TCP/IP四层模型"></a>OSI七层模型和TCP/IP四层模型</h1><p><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCPIP%E6%A8%A1%E5%9E%8B.png"></p><h1 id="eNSP基础操作"><a href="#eNSP基础操作" class="headerlink" title="eNSP基础操作"></a>eNSP基础操作</h1><p>sysname NAME:修改路由器名<br>eNSP中路由器一般使用AR2220，连接使用AUTO即可  </p><ul><li>路由器配置IP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view    #用户进入系统，可以写作sys</span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]interface GigabitEthernet 0/0/0   #进入端口0/0/0，或者是写作int g0/0/0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]ip address  192.168.1.1 255.255.255.0   #配置IP地址以及子网掩码，可以写作ip add 192.168.1.1 255.255.255.0</span><br><span class="line">Mar 24 2023 13:50:58-08:00 Huawei %%01IFNET/4/LINK_STATE(l)[1]:The line protocol IP on the interface GigabitEthernet0/0/0 has entered the UP state. </span><br><span class="line">[Huawei-GigabitEthernet0/0/0]q  #退出0/0/0端口</span><br><span class="line">[Huawei]q</span><br><span class="line">&lt;Huawei&gt;save #保存配置</span><br></pre></td></tr></table></figure></li><li>路由器开启DHCP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]dhcp enable   #开启DHCP</span><br><span class="line">Info: The operation may take a few seconds. Please wait for a moment.done.</span><br><span class="line">[Huawei]interface GigabitEthernet 0/0/0  </span><br><span class="line">[Huawei-GigabitEthernet0/0/0]dhcp select interface   #指定该接口使用DHCP</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]dhcp server dns-list 192.168.1.99  #添加DNS</span><br></pre></td></tr></table></figure></li><li>查看路由器路由表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]display ip routing-table</span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : 10       Routes : 10       </span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">  100.100.100.0/24  Direct  0    0           D   100.100.100.1   GigabitEthernet</span><br><span class="line">0/0/1</span><br><span class="line">  100.100.100.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet</span><br><span class="line">0/0/1</span><br><span class="line">100.100.100.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet</span><br><span class="line">0/0/1</span><br><span class="line">      127.0.0.0/8   Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">      127.0.0.1/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">127.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line">    192.168.1.0/24  Direct  0    0           D   192.168.1.1     GigabitEthernet</span><br><span class="line">0/0/0</span><br><span class="line">    192.168.1.1/32  Direct  0    0           D   127.0.0.1       GigabitEthernet</span><br><span class="line">0/0/0</span><br><span class="line">  192.168.1.255/32  Direct  0    0           D   127.0.0.1       GigabitEthernet</span><br><span class="line">0/0/0</span><br><span class="line">255.255.255.255/32  Direct  0    0           D   127.0.0.1       InLoopBack0</span><br><span class="line"></span><br><span class="line">[Huawei]display ip routing-table 100.100.100.100  #查看100.100.100.100的路由表</span><br><span class="line">Route Flags: R - relay, D - download to fib</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Routing Table : Public</span><br><span class="line">Summary Count : 1</span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">  100.100.100.0/24  Direct  0    0           D   100.100.100.1   GigabitEthernet</span><br><span class="line">0/0/1</span><br></pre></td></tr></table></figure></li><li>添加静态路由,来回都要添加<br><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1.png">  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[AR1]ip route-static 192.168.3.0 255.255.255.0 192.168.2.10  #添加静态路由，去192.168.3.x 255.255.255.0的通过192.168.2.10为下一跳</span><br><span class="line">[AR2]ip route-static 192.168.1.0 255.255.255.0 192.168.2.1   #回包的路由</span><br></pre></td></tr></table></figure></li></ul><h1 id="vlan"><a href="#vlan" class="headerlink" title="vlan"></a>vlan</h1><p>vlan：虚拟局域网，主要用在交换机中，是一种隔离技术，将物理的lan在逻辑上划分成多个广播域的通信，vlan内的主机可以直接通信，vlan之间不能直接通信<br>vlan 1：是默认的vlan<br>交换机的接口模式：access(连接终端)、trunk(连接其他交换机)<br><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/vlan.png"><br>该例子中两个pc原本可以ping通，分别划入不同的vlan中后则ping不通。  </p><ul><li>创建vlan<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]vlan 10   #创建vlan 10</span><br><span class="line">[Huawei-vlan10]q</span><br><span class="line">[Huawei]vlan 20   #创建vlan 20</span><br><span class="line">[Huawei-vlan20]q  </span><br><span class="line">[Huawei]display vlan </span><br><span class="line">The total number of vlans is : 3</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">U: Up;         D: Down;         TG: Tagged;         UT: Untagged;</span><br><span class="line">MP: Vlan-mapping;               ST: Vlan-stacking;</span><br><span class="line">#: ProtocolTransparent-vlan;    *: Management-vlan;</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">VID  Type    Ports                                                          </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">1    common  UT:GE0/0/1(U)      GE0/0/2(U)      GE0/0/3(D)      GE0/0/4(D)      </span><br><span class="line">                GE0/0/5(D)      GE0/0/6(D)      GE0/0/7(D)      GE0/0/8(D)      </span><br><span class="line">                GE0/0/9(D)      GE0/0/10(D)     GE0/0/11(D)     GE0/0/12(D)     </span><br><span class="line">                GE0/0/13(D)     GE0/0/14(D)     GE0/0/15(D)     GE0/0/16(D)     </span><br><span class="line">                GE0/0/17(D)     GE0/0/18(D)     GE0/0/19(D)     GE0/0/20(D)     </span><br><span class="line">                GE0/0/21(D)     GE0/0/22(D)     GE0/0/23(D)     GE0/0/24(D)     </span><br><span class="line"></span><br><span class="line">10   common  </span><br><span class="line">20   common  </span><br><span class="line"></span><br><span class="line">VID  Status  Property      MAC-LRN Statistics Description      </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">1    enable  default       enable  disable    VLAN 0001                         </span><br><span class="line">10   enable  default       enable  disable    VLAN 0010                         </span><br><span class="line">20   enable  default       enable  disable    VLAN 0020  </span><br></pre></td></tr></table></figure></li><li>配置vlan  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port link-type access # 将接口模式改为access</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port default vlan 10  #将0/0/1接口划分到vlan 10中</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]display vlan</span><br><span class="line">The total number of vlans is : 3</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">U: Up;         D: Down;         TG: Tagged;         UT: Untagged;</span><br><span class="line">MP: Vlan-mapping;               ST: Vlan-stacking;</span><br><span class="line">#: ProtocolTransparent-vlan;    *: Management-vlan;</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">VID  Type    Ports                                                          </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">1    common  UT:GE0/0/2(U)      GE0/0/3(D)      GE0/0/4(D)      GE0/0/5(D)      </span><br><span class="line">                GE0/0/6(D)      GE0/0/7(D)      GE0/0/8(D)      GE0/0/9(D)      </span><br><span class="line">                GE0/0/10(D)     GE0/0/11(D)     GE0/0/12(D)     GE0/0/13(D)     </span><br><span class="line">                GE0/0/14(D)     GE0/0/15(D)     GE0/0/16(D)     GE0/0/17(D)     </span><br><span class="line">                GE0/0/18(D)     GE0/0/19(D)     GE0/0/20(D)     GE0/0/21(D)     </span><br><span class="line">                GE0/0/22(D)     GE0/0/23(D)     GE0/0/24(D)                     </span><br><span class="line"></span><br><span class="line">10   common  UT:GE0/0/1(U)                                                      </span><br><span class="line"></span><br><span class="line">20   common  </span><br><span class="line"></span><br><span class="line">VID  Status  Property      MAC-LRN Statistics Description      </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">1    enable  default       enable  disable    VLAN 0001                         </span><br><span class="line">10   enable  default       enable  disable    VLAN 0010                         </span><br><span class="line">20   enable  default       enable  disable    VLAN 0020   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Huawei-GigabitEthernet0/0/2]port default vlan 20</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]</span><br><span class="line">Mar 24 2023 16:26:45-08:00 Huawei %%01IFNET/4/IF_STATE(l)[2]:Interface Vlanif1 h</span><br><span class="line">as turned into DOWN state.</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]display vlan</span><br><span class="line">The total number of vlans is : 3</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">U: Up;         D: Down;         TG: Tagged;         UT: Untagged;</span><br><span class="line">MP: Vlan-mapping;               ST: Vlan-stacking;</span><br><span class="line">#: ProtocolTransparent-vlan;    *: Management-vlan;</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">VID  Type    Ports                                                          </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">1    common  UT:GE0/0/3(D)      GE0/0/4(D)      GE0/0/5(D)      GE0/0/6(D)      </span><br><span class="line">                GE0/0/7(D)      GE0/0/8(D)      GE0/0/9(D)      GE0/0/10(D)     </span><br><span class="line">                GE0/0/11(D)     GE0/0/12(D)     GE0/0/13(D)     GE0/0/14(D)     </span><br><span class="line">                GE0/0/15(D)     GE0/0/16(D)     GE0/0/17(D)     GE0/0/18(D)     </span><br><span class="line">                GE0/0/19(D)     GE0/0/20(D)     GE0/0/21(D)     GE0/0/22(D)     </span><br><span class="line">                GE0/0/23(D)     GE0/0/24(D)                                     </span><br><span class="line"></span><br><span class="line">10   common  UT:GE0/0/1(U)                                                      </span><br><span class="line"></span><br><span class="line">20   common  UT:GE0/0/2(U)                                                      </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VID  Status  Property      MAC-LRN Statistics Description      </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">1    enable  default       enable  disable    VLAN 0001                         </span><br><span class="line">10   enable  default       enable  disable    VLAN 0010                         </span><br><span class="line">20   enable  default       enable  disable    VLAN 0020</span><br></pre></td></tr></table></figure></li></ul><h2 id="trunk"><a href="#trunk" class="headerlink" title="trunk"></a>trunk</h2><p>连接不同的交换机，数据包之间会打上vlan的标签，用于其他交换机识别属于那个vlan<br><strong>注意两边的交换机都需要将对应的端口修改为trunk</strong><br><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/trunk.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view </span><br><span class="line">Enter system view, return user view with Ctrl+Z.</span><br><span class="line">[Huawei]int g0/0/3</span><br><span class="line">[Huawei-GigabitEthernet0/0/3]port link-type trunk  #将端口类型修改为trunk</span><br><span class="line">[Huawei-GigabitEthernet0/0/3]port trunk allow-pass vlan all #允许哪些vlan可以通过</span><br></pre></td></tr></table></figure><h1 id="三层交换"><a href="#三层交换" class="headerlink" title="三层交换"></a>三层交换</h1><p>三层交换就是将多一层的交换机充当为两个vlan的网关，实现两个vlan之间的互通<br><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2.png">  </p><p>1.将LSW2中，0/0/1端口设置为trunk，并将所有vlan允许通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port link-type trunk </span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port trunk allow-pass vlan all</span><br></pre></td></tr></table></figure><p>2.将0/0/2、0/0/3端口设置为access，并划分如不同的vlan</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Huawei] vlan 10 </span><br><span class="line">[Huawei] vlan 20</span><br><span class="line">[Huawei] int g0/0/2</span><br><span class="line">[Huawei-GigabitEthernet0/0/2] port link-type access</span><br><span class="line">[Huawei-GigabitEthernet0/0/2] portt default vlan 10 </span><br><span class="line">[Huawei] int g0/0/3</span><br><span class="line">[Huawei-GigabitEthernet0/0/3] port link-type access</span><br><span class="line">[Huawei-GigabitEthernet0/0/3] portt default vlan 20 </span><br></pre></td></tr></table></figure><p>3.将LSW1中，0/0/1端口设置为trunk，并将所有vlan允许通过，并配置虚接口pc1与pc2对应的网关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Huawei] vlan 10 </span><br><span class="line">[Huawei] vlan 20</span><br><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port link-type trunk </span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port trunk allow-pass vlan all</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]q</span><br><span class="line">[Huawei]int Vlanif 10</span><br><span class="line">[Huawei-Vlanif10]ip add 1.1.1.254 255.255.255.0  #1.1.1.254为PC1中填写的网关</span><br><span class="line">[Huawei-Vlanif10]q</span><br><span class="line">[Huawei]int Vlanif 20</span><br><span class="line">[Huawei-Vlanif20]ip add 2.2.2.254 255.255.255.0</span><br></pre></td></tr></table></figure><h1 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h1><p>单臂路由就是路由器的一个接口通过配置子接口，实现原来互相隔离的Vlan之间的互联互通。<br><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1.png"><br>1.将交换机LSW1的0/0/2、0/0/3端口划分到vlan  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/2</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]port link-type access</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]port default vlan 10</span><br><span class="line">[Huawei-GigabitEthernet0/0/2]q</span><br><span class="line">[Huawei]int g0/0/3</span><br><span class="line">[Huawei-GigabitEthernet0/0/3]port link-type access</span><br><span class="line">[Huawei-GigabitEthernet0/0/3]port default vlan 20</span><br></pre></td></tr></table></figure><p>2.将换机LSW1的0/0/1接口设置为trunk，并允许多有vlan通过  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port link-type trunk</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port trunk allow-pass vlan all</span><br></pre></td></tr></table></figure><p>3.路由器AR1设置，将路由器的0/0/0端口配置两个子接口，分别对应两个vlan  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/0.10   #子接口0/0/0.10</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.10]dot1q termination vid 10  #子接口与vlan关联</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.10]arp broadcast enable      #允许arp广播</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.10]ip add 1.1.1.254 255.255.255.0   #配置地址作为pc1的网关</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.10]display this    #查看当前视图的配置</span><br><span class="line">[V200R003C00]</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0/0/0.10</span><br><span class="line"> dot1q termination vid 10</span><br><span class="line"> ip address 1.1.1.254 255.255.255.0 </span><br><span class="line"> arp broadcast enable</span><br><span class="line">#</span><br><span class="line">return</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.10]q</span><br><span class="line">[Huawei]int g0/0/0.20  #子接口0/0/0.20</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.20]dot1q termination vid 20</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.20]ip add 2.2.2.254 255.255.255.0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0.20]arp broadcast enable</span><br></pre></td></tr></table></figure><h1 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h1><p>访问控制列表，提供安全访问，防止重要服务器资源被随意访问<br><img src="/2023/03/24/%E7%BD%91%E7%BB%9C/1-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/ACL.png"><br>在三层路由基础上进行操作，实现PC1禁止访问PC3  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]acl name test advance  #创建高级的ACL 名为test</span><br><span class="line">[Huawei-acl-adv-test]rule deny ip source 1.1.1.0 0.255.255.255 destination 3.3.3.0 0.255.255.255    #阻止源1.1.1.0 0.255.255.255到3.3.3.0 0.255.255.255的访问 </span><br><span class="line">[Huawei-acl-adv-test]rule permit ip source any destination any   #允许其他的访问</span><br><span class="line">[Huawei-acl-adv-test]q</span><br><span class="line">[Huawei]int g0/0/1   #0/0/1是访问的毕竟之路，将接口配置上acl规则</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]traffic-filter inbound acl name test </span><br></pre></td></tr></table></figure><h1 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h1>]]></content>
    
    
    <summary type="html">&lt;center&gt; 网络基础知识 &lt;/center&gt;</summary>
    
    
    
    <category term="网络" scheme="http://example.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="网络基础" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>9-nginx缓存</title>
    <link href="http://example.com/2022/12/11/Nginx/9-nginx%E7%BC%93%E5%AD%98/"/>
    <id>http://example.com/2022/12/11/Nginx/9-nginx%E7%BC%93%E5%AD%98/</id>
    <published>2022-12-11T06:28:01.000Z</published>
    <updated>2022-12-19T14:53:44.970Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="nginx缓存机制"><a href="#nginx缓存机制" class="headerlink" title="nginx缓存机制"></a>nginx缓存机制</h1><h1 id="proxy-buffer"><a href="#proxy-buffer" class="headerlink" title="proxy buffer"></a>proxy buffer</h1><p>Proxy Buffer启用以后，Nginx服务器会异步地将被代理服务器的响应数据传递给客户端。<br>Nginx服务器首先尽可能地从被代理服务器那里接收响应数据，放置在Proxy Buffer中，Buffer的大小由proxy_buffer_size指令和proxy_buffers指令决定。如果在接收过程中，发现Buffer没有足够大小来接收一次响应的数据，Nginx服务器会将部分接收到的数据临时存放在磁盘的临时文件中，磁盘上的临时文件路径可以通过proxy_temp_path指令进行设置，临时文件的大小由proxy_max_temp_file_size指令和proxy_temp_file_write_size指令决定。<br>一次响应数据被接收完成或者Buffer已经装满后，Nginx服务器开始向客户端传输数据。每个Proxy Buffer装满数据后，在从开始向客户端发送一直到Proxy Buffer中的数据全部传输给客户端的整个过程中，它都处于BUSY状态，期间对它进行的其他操作都会失败。同时处于BUSY状态的Proxy Buffer总大小由proxy_busy_buffers_size指令限制，不能超过该指令设置的大小。<br>每个Proxy Buffer装满数据后，在从开始向客户端发送一直到Proxy Buffer中的数据全部传输给客户端的整个过程中，它都处于BUSY状态，期间对它进行的其他操作都会失败。同时处于BUSY状态的Proxy Buffer总大小由proxy_busy_buffers_size指令限制，不能超过该指令设置的大小<br><strong>注意：以下配置都是针对每一个请求起作用，也就是对每一个请求来配置自己的buffer</strong></p><h2 id="proxy-buffering"><a href="#proxy-buffering" class="headerlink" title="proxy_buffering"></a>proxy_buffering</h2><p><code>proxy_buffering on|off;</code>该指令用于配置是否启用或者关闭proxy buffer  </p><h2 id="proxy-buffers"><a href="#proxy-buffers" class="headerlink" title="proxy_buffers"></a>proxy_buffers</h2><p><code>proxy_buffers NUMBER SIZE;</code>配置接受一次被代理服务器响应数据的proxy buffer个数和每个buffer的大小，size的大小默认为一个内存页的大小，这里设置的缓冲区大小是针对每个请求连接而言的，对于每一个连接，都会分配 ”number*size“大小的内存缓冲区。  </p><h2 id="proxy-buffer-size"><a href="#proxy-buffer-size" class="headerlink" title="proxy_buffer_size"></a>proxy_buffer_size</h2><p><code>proxy_buffer_size SIZE</code> 设置size用于读取从代理服务器收到的响应的第一部分的缓冲区。这部分通常包含一个小的响应头。默认情况下，缓冲区大小等于一个内存页。这是 4K 或 8K，具体取决于平台。但是，它可以做得更小。  </p><h2 id="proxy-busy-buffers-size"><a href="#proxy-busy-buffers-size" class="headerlink" title="proxy_busy_buffers_size"></a>proxy_busy_buffers_size</h2><p><code>proxy_busy_buffers_size SIZE</code>设置读取从代理服务器收到的响应的第一部分的缓冲区，默认为一个内存页的大小。  </p><h2 id="proxy-temp-path"><a href="#proxy-temp-path" class="headerlink" title="proxy_temp_path"></a>proxy_temp_path</h2><p><code>proxy_temp_path PATH [level1 [level2 [level3]]]</code>,临时存放代理服务器响应数据文件，proxy buffer装满后，响应数据仍没有接收完，响应数据就会被存放在该文件中<br>[level1 [level2 [level3]]]为临时文件的存放目录为几级目录，<code>proxy_temp_path /nginx/temp 1 2</code>则临时文件存放在/nginx/temp/1/10下  </p><h2 id="proxy-max-temp-file-size"><a href="#proxy-max-temp-file-size" class="headerlink" title="proxy_max_temp_file_size"></a>proxy_max_temp_file_size</h2><p><code>proxy_max_temp_file_size SIZE</code> 临时文件的总体积的大小，默认为1024MB。  </p><h2 id="proxy-temp-file-write-size"><a href="#proxy-temp-file-write-size" class="headerlink" title="proxy_temp_file_write_size"></a>proxy_temp_file_write_size</h2><p><code>proxy_temp_file_write_size size</code> 配置<strong>同时写入临时文件的数据量</strong>的大小，避免磁盘IO过大  </p><h1 id="proxy-cache"><a href="#proxy-cache" class="headerlink" title="proxy cache"></a>proxy cache</h1><p>Proxy Cache主要实现Nginx服务器对客户端数据请求的快速响应。Nginx服务器在接收到被代理服务器的响应数据之后，一方面通过Porxy Buffer机制将数据传递给客户端，另一方面根据Proxy Cache的配置将这些数据缓存到本地硬盘上。当客户端下次要访问相同的数据时，Nginx服务器直接从硬盘检索到相应的数据返回给用户，从而减少与被代理服务器交互的时间。<br>Proxy Cache机制依赖于Porxy Buffer机制，只有在Porxy Buffer机制开启的情况下Proxy Cache的配置才发挥作用  </p><h2 id="proxy-cache-1"><a href="#proxy-cache-1" class="headerlink" title="proxy cache"></a>proxy cache</h2><p><code>proxy cache ZONE | off</code> 用于配置一个公共的内存区域的名称，该区域存放缓存的索引。off为关闭proxy_cache功能。  </p><h2 id="proxy-cache-bypass"><a href="#proxy-cache-bypass" class="headerlink" title="proxy_cache_bypass"></a>proxy_cache_bypass</h2><p><code>proxy_cache_bypass string</code> 用于设置向客户端发送数据时，不从缓存中获取的条件。string是条件变量，可以有多个，当有不为空或者不等于0时，相应数据不从缓存读取。  </p><h2 id="proxy-cache-key"><a href="#proxy-cache-key" class="headerlink" title="proxy_cache_key"></a>proxy_cache_key</h2><p><code>proxy_cache_key string</code> 设置在内存中为缓存数据建立索引时使用的关键字。string为设置的关键字，支持变量  </p><h2 id="proxy-cache-lock"><a href="#proxy-cache-lock" class="headerlink" title="proxy_cache_lock"></a>proxy_cache_lock</h2><p><code>proxy_cache_lock on | off</code> 是否开启缓存的锁功能。在缓存中，某些数据可以同时被多个请求返回的数据填充，开启锁后，只能有一个请求填充缓存中的某一数据项，这相当于给该数据项上锁，不允许其他请求操作。其他的请求如果也想填充该项，必须等待该数据项的锁被释放。这个等待时间由proxy_cache_lock_timeout指令配置  </p><h2 id="proxy-cache-lock-timeout"><a href="#proxy-cache-lock-timeout" class="headerlink" title="proxy_cache_lock_timeout"></a>proxy_cache_lock_timeout</h2><p><code>proxy_cache_lock_timeout time</code>设置缓存的锁功能开启以后锁的超时时间，默认为5s。  </p><h2 id="proxy-cache-min-uses"><a href="#proxy-cache-min-uses" class="headerlink" title="proxy_cache_min_uses"></a>proxy_cache_min_uses</h2><p><code>proxy_cache_min_uses NUM</code> 设置客户端请求发送的次数，相同的请求达到该次数时，才对请求的相应数据做缓存。</p><h2 id="proxy-cache-path"><a href="#proxy-cache-path" class="headerlink" title="proxy_cache_path"></a>proxy_cache_path</h2><p><code>proxy_cache_path path [levels=levels] keys_zone=name:size1 [inactive=time1] [max_size=size2] [loader_files=number] [loader_sleep=time2] [loader_threshold=time3];</code> 缓存数据的路径，以及相关内容。<br><strong>[levels=levels]</strong>:levels=1表示一级hash目录，levels=1:2表示二级。<br><strong>keys_zone=name:size1</strong>：表示缓存索引的内存区域名称和大小<br>**[inactive=time1]**：强制更新缓存数据的时间，当缓存数据在设定时间内没有被访问时，缓存就被清除<br>**[max_size=size2]**：硬盘中缓存数据的大小限制，当缓存超过该值时，将会删除最近最少被访问的缓存  </p><h2 id="proxy-cache-use-stale"><a href="#proxy-cache-use-stale" class="headerlink" title="proxy_cache_use_stale"></a>proxy_cache_use_stale</h2><p><code>proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | http_429 | off</code> Nginx在访问被代理服务器过程中出现被代理的服务器无法访问或者访问错误等现象时， Nginx服务器可以使用历史缓存响应客户端的请求，这些数据不一定和被代理服务器上最新的数据相一致，但对于更新频率不高的后端服务器来说，Nginx服务器的该功能在一定程度上能够为客户端提供不间断访问。<br>updating状态,不是指被代理服务器在updating状态，而是指客户端请求的数据在Nginx服务器中正好处于更新状态。  </p><h2 id="proxy-cache-valid"><a href="#proxy-cache-valid" class="headerlink" title="proxy_cache_valid"></a>proxy_cache_valid</h2><p><code>proxy_cache_valid CODE TIME</code> 针对不同的响应状态设置不同的缓存时间<br><code>proxy_cache_valid 200 10s</code>  </p><h2 id="proxy-no-cache"><a href="#proxy-no-cache" class="headerlink" title="proxy_no_cache"></a>proxy_no_cache</h2><p><code>proxy_no_cache string</code> 设置何时不使用cache，string为一个、多个变量，不为空或者不为0时，不启用cache。  </p><h1 id="proxy-store"><a href="#proxy-store" class="headerlink" title="proxy store"></a>proxy store</h1><p>proxy store是另一种缓存方法，不提供缓存过期时间、内存索引建立、不占用内存空间，对静态数据的效果比较好。  </p><h2 id="proxy-store-1"><a href="#proxy-store-1" class="headerlink" title="proxy_store"></a>proxy_store</h2><p><code>proxy_store on|off|string</code> 是否开启store功能，string为自定义混存文件的存放位置，设置后store开启  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx负载均衡" scheme="http://example.com/tags/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>8-nginx负载均衡</title>
    <link href="http://example.com/2022/12/09/Nginx/8-nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://example.com/2022/12/09/Nginx/8-nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2022-12-09T03:26:19.000Z</published>
    <updated>2022-12-15T05:54:02.322Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="服务器组"><a href="#服务器组" class="headerlink" title="服务器组"></a>服务器组</h1><p>upstream设置后端服务器组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">upstream test_team&#123;    #设置服务器组名为test_team</span><br><span class="line">    #ip_hash      #请求按照IP的hash结果分配，每个访客固定访问一个后端服务器，不能与server中的weigth一同使用，并且必须是最前端的服务器，这样才能获取到客户端的IP</span><br><span class="line">    server 192.168.27.11</span><br><span class="line">    server 192.168.27.12 weight=5  # weight=5权重为5，默认为1，越大越优先用于处理请求</span><br><span class="line">    server 192.168.27.13 fail_timeout=10s  max_fails=3 #10秒内连续三次失败，则在随后的10秒内认为服务器是无效的</span><br><span class="line">    server 192.168.27.14 backup  #备用服务器，只有在正常服务器处于down或者busy时才会被使用</span><br><span class="line">    server 192.168.27.15 down   #标记为永久down状态，通常与ip_hash配合使用</span><br><span class="line">    #last_conn  #把请求分派给连接数最少的服务器</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><h2 id="例一-一般轮询规则"><a href="#例一-一般轮询规则" class="headerlink" title="例一:一般轮询规则"></a>例一:一般轮询规则</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream backend&#123;</span><br><span class="line">    server 192.168.27.11:80</span><br><span class="line">    server 192.168.27.12:80</span><br><span class="line">    server 192.168.27.13:80</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80；</span><br><span class="line">    server_name www.test.demo;</span><br><span class="line">    index index.html;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_pass http://backend;</span><br><span class="line">        proxy_set_header HOST $host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例二：加权轮询规则"><a href="#例二：加权轮询规则" class="headerlink" title="例二：加权轮询规则"></a>例二：加权轮询规则</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream backend&#123;</span><br><span class="line">    server 192.168.27.11:80 weight=3</span><br><span class="line">    server 192.168.27.12:80 weight=2</span><br><span class="line">    server 192.168.27.13:80 weight=1</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80；</span><br><span class="line">    server_name www.test.demo;</span><br><span class="line">    index index.html;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_pass http://backend;</span><br><span class="line">        proxy_set_header HOST $host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例三-对特定资源实现负载均衡"><a href="#例三-对特定资源实现负载均衡" class="headerlink" title="例三:对特定资源实现负载均衡"></a>例三:对特定资源实现负载均衡</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">upstream file&#123;</span><br><span class="line">    server 192.168.27.11:80</span><br><span class="line">    server 192.168.27.12:80</span><br><span class="line">    server 192.168.27.13:80</span><br><span class="line">&#125;</span><br><span class="line">upstream video&#123;</span><br><span class="line">    server 192.168.27.11:80</span><br><span class="line">    server 192.168.27.12:80</span><br><span class="line">    server 192.168.27.13:80</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80；</span><br><span class="line">    server_name www.test.demo;</span><br><span class="line">    index index.html;</span><br><span class="line">    location /file/&#123;</span><br><span class="line">        proxy_pass http://file;</span><br><span class="line">    &#125;</span><br><span class="line">    location /video/&#123;</span><br><span class="line">        proxy_pass http://video;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例四：带有URL重写的负载均衡"><a href="#例四：带有URL重写的负载均衡" class="headerlink" title="例四：带有URL重写的负载均衡"></a>例四：带有URL重写的负载均衡</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">upstream backend&#123;</span><br><span class="line">    server 192.168.27.11:80 weight=3</span><br><span class="line">    server 192.168.27.12:80 weight=2</span><br><span class="line">    server 192.168.27.13:80 weight=1</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80；</span><br><span class="line">    server_name www.test.demo;</span><br><span class="line">    index index.html;</span><br><span class="line">    location /backend/&#123;</span><br><span class="line">        rewrite ^(.*) XXX last;</span><br><span class="line">    &#125;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_pass http://backend;</span><br><span class="line">        proxy_set_header HOST $host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx负载均衡" scheme="http://example.com/tags/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>7-nginx代理服务</title>
    <link href="http://example.com/2022/12/06/Nginx/7-nginx%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/"/>
    <id>http://example.com/2022/12/06/Nginx/7-nginx%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/</id>
    <published>2022-12-06T06:21:56.000Z</published>
    <updated>2022-12-09T03:19:45.615Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    resolver 8.8.8.8;    #指定DNS服务器IP地址,默认使用53端口，是必须的指令</span><br><span class="line">    resolver_timout 3s;  #DNS服务器域名解析超时时间</span><br><span class="line">    listen 82;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_pass http://$http_host$request_uri;   #设置的代理服务器协议和地址</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不设置server_name<br>linux中配置代理服务器  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=http://proxy.com:82/</span><br><span class="line">export https_proxy=http://proxy.com:82/</span><br></pre></td></tr></table></figure><h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><h2 id="proxy-pass"><a href="#proxy-pass" class="headerlink" title="proxy_pass"></a>proxy_pass</h2><p>用来设置被代理的服务器的地址，可以使主机名、IP加端口  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass http://www.demo.de/uri</span><br><span class="line">proxy_pass http://localhost:8000/uri</span><br></pre></td></tr></table></figure><p>还可以是一组后端服务器  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">upsteam proxy_team&#123;</span><br><span class="line">    server http://192.168.27.10/uri;</span><br><span class="line">    server http://192.168.27.11/uri;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.demo.de;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_pass proxy_team;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###或者</span><br><span class="line"></span><br><span class="line">upsteam proxy_team&#123;</span><br><span class="line">    server 192.168.27.10/uri;   #此处不加http://,那么proxy_pass中就要加</span><br><span class="line">    server 192.168.27.11/uri;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.demo.de;</span><br><span class="line">    location /&#123;</span><br><span class="line">        proxy_pass http://proxy_team;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>proxy_pass URL参数中不带URI，则不会改变原地址的URI；参数中带有URI，就会改变源地址的URI。（注意在host后的/也算是 URI）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.demo.de;</span><br><span class="line">    location /demo/&#123;</span><br><span class="line">        ....</span><br><span class="line">        proxy_pass http://192.168.27.12；   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#当访问www.demo.de/demo则会转向为http://192.168.27.12/demo</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.demo.de;</span><br><span class="line">    location /demo/&#123;</span><br><span class="line">        ....</span><br><span class="line">        proxy_pass http://192.168.27.12/test；   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#当访问www.demo.de/demo则会转向为http://192.168.27.12/test</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx代理服务" scheme="http://example.com/tags/nginx%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>6-nginx rewrite</title>
    <link href="http://example.com/2022/11/30/Nginx/6-nginx%E4%B9%8Brewrite/"/>
    <id>http://example.com/2022/11/30/Nginx/6-nginx%E4%B9%8Brewrite/</id>
    <published>2022-11-30T07:44:33.000Z</published>
    <updated>2022-12-06T06:20:34.746Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="rewrite"><a href="#rewrite" class="headerlink" title="rewrite"></a>rewrite</h1><p>rewrite用于实现URL的重写以及重定向，例如旧的域名能够跳转到新的域名上，某网页发生改变需要跳转到新的页面等。<br>rewrite指定可以放置在server、location块、if块中，只能对域名后边的出去参数外的字符串起作用，例如：<code>http://192.168.27.11:9090/targets?search=#pool-prometheus</code>，就只对<code>/targets</code>起作用。<br><code>rewrite regex replacement [flag]</code>  </p><ul><li><strong>regex</strong>：正则匹配URL  </li><li><strong>replacement</strong>：跳转后的内容，其中可以使用nginx内置变量，例如$host请求的主机名  </li><li><strong>flag</strong>：标记<br>last :终止继续在本location块中处理接收到的URI，并将此处重写的URI作为一个新的URI，使用各location块进行处理。该标志将重写后的URI重新在server块中执行，为重写后的URI提供了转入到其他location块的机会，一般写在server、if中<br>break :将重写后的地址在当前的location块中继续执行，不会将新的URI转向到其他location块<br>redirect :返回302临时重定向，浏览器地址会显示跳转后的URL地址。<br>permanent :返回301永久重定向，浏览器地址栏会显示跳转后的URL地址。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># rewrite demo,访问 http://nginx_ip/test时，URL会跳转为http://www.testtest.com/test,服务器中访问的文件为/opt/test下的文件</span><br><span class="line">        location /test &#123;</span><br><span class="line">            rewrite ^/(.*)$ http://www.testtest.com/$1;  #$1为rewrite中正则匹配到的内容，</span><br><span class="line">            root /opt;</span><br><span class="line">            index index.html;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="if"><a href="#if" class="headerlink" title="if"></a>if</h1><p><code>if (condition) &#123;&#125;</code>,可以在server块或location块中配置。<br>判断条件</p><ul><li>变量名：变量的值为<code>0开头的字符串</code>或为<code>空</code>，则条件为false  </li><li>变量与字符串是否相等：使用<code>=</code>、<code>!=</code>，判断变量和字符串是否相等（字符串不需要加引号，<code>=</code>、<code>!=</code>前后需要加空格）  </li><li>变量与字符串匹配：变量值中是否含有正则匹配内容,<code>~</code>正则区分大小写、<code>~*</code>正则不区分大小写，<code>!~</code>、<code>!~*</code>为相反  </li><li>判断文件是否存在：<code>-f</code>、<code>!-f</code>，<code>-f FILE</code>当文件存在时为true  </li><li>判断目录是否存在：<code>-d</code>、<code>!-d</code>  </li></ul><h1 id="break"><a href="#break" class="headerlink" title="break"></a>break</h1><p>中断当前作用域中的其他nginx配置，作用域中<code>break</code>前的指令配置生效，之后的不生效。可以在server、location、if中使用  </p><h1 id="return"><a href="#return" class="headerlink" title="return"></a>return</h1><p>用于完成对请求的处理，直接向客户端返回响应状态代码。可以在server、location、if中使用  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">return TEXT</span><br><span class="line">return CODE</span><br><span class="line">return URL</span><br></pre></td></tr></table></figure><h1 id="set"><a href="#set" class="headerlink" title="set"></a>set</h1><p>用于设置一个新的变量<br><code>set $test_name value</code>变量名称需要以<code>$</code>为开头  </p><h1 id="rewrite-log"><a href="#rewrite-log" class="headerlink" title="rewrite_log"></a>rewrite_log</h1><p>是否开启rewrite日志输出功能<br><code>rewrite_log on/off</code>  </p><h1 id="rewrite的使用"><a href="#rewrite的使用" class="headerlink" title="rewrite的使用"></a>rewrite的使用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name old_web.com;</span><br><span class="line">    rewrite ^/ http://www.new_web.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name test1.com test2.com;</span><br><span class="line">    if($host ~ test)&#123;</span><br><span class="line">        rewrite ^(.*) http://www.test3.com/$1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="rewrite" scheme="http://example.com/tags/rewrite/"/>
    
  </entry>
  
  <entry>
    <title>5-nginx Gzip</title>
    <link href="http://example.com/2022/11/29/Nginx/5-nginx%E7%9A%84Gzip%E5%8E%8B%E7%BC%A9/"/>
    <id>http://example.com/2022/11/29/Nginx/5-nginx%E7%9A%84Gzip%E5%8E%8B%E7%BC%A9/</id>
    <published>2022-11-29T06:44:25.000Z</published>
    <updated>2022-12-04T01:17:31.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="Gzip压缩"><a href="#Gzip压缩" class="headerlink" title="Gzip压缩"></a>Gzip压缩</h1><p>Gzip对响应数据在线实时压缩，ngx_http_gzip_module模块，经过压缩后资源可以变为原来的30%左右，经过服务端压缩后传到浏览器并解压解析。会消耗一定的CPU资源，但是会节约出口带宽，可以提高访问速度。  </p><ol><li><p>gzip<br>开启或者关闭gzip<br><code>gzip on | off;</code>  </p></li><li><p>gzip_buffers<br>设置Gzip压缩文件使用缓存空间的大小<br><code>gzip_buffers NUMBER SIZE;</code><br>NUMBER:空间数<br>SIZE：每个缓存空间的大小  </p></li><li><p>gzip_comp_level<br>压缩级别，1-9，1为压缩程度最低，越大压缩程度越大，越费时间，一般使用5<br><code>gzip_comp_level LEVEL</code>  </p></li><li><p>gzip_disable<br>针对不同种类客户端发起的请求，可以选择性地关闭Gzip功能，不同的浏览器有不同的UA字符串，支持正则。<br><code>gzip_disable UA标识</code><br><code>gzip_disable &quot;MSIE [1-6]\.&quot;; </code>  低版本IE不支持，可以关闭gzip压缩  </p></li><li><p>gzip_min_length<br>限制压缩数据的大小，防止很小的数据压缩后变大情况。默认为20，建议设置为1K<br><code>gzip_min_length 1k</code>  </p></li><li><p>gzip_types<br>指定MIME类型压缩，被设置的类型将被压缩。默认为text/html,设置为*，则为所有类型都进行压缩<br><code>gzip_types text/plain application/x-javascript text/css text/html application/xml;</code>  一般设置  </p></li><li><p>gzip_vary<br>发送带有<code>Vary: Accept-Encoding</code>头域的响应头部，告诉接收方数据经过压缩，这对不支持gzip压缩的客户端是有用的。<br><code>gzip_vary on/off</code>  </p></li><li><p>gzip_static<br>实时动态压缩会比较消耗CPU资源，使用静态压缩，提前将数据压缩，直接返回压缩后的数据。需要使用<br><code>gzip_static on/off</code>  </p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="Gzip压缩" scheme="http://example.com/tags/Gzip%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>4-nginx配置优化</title>
    <link href="http://example.com/2022/11/29/Nginx/4-nginx%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/"/>
    <id>http://example.com/2022/11/29/Nginx/4-nginx%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/</id>
    <published>2022-11-29T05:59:07.000Z</published>
    <updated>2022-11-29T06:35:37.010Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="nginx配置优化"><a href="#nginx配置优化" class="headerlink" title="nginx配置优化"></a>nginx配置优化</h1><h2 id="work进程配置"><a href="#work进程配置" class="headerlink" title="work进程配置"></a>work进程配置</h2><ol><li><p>worker_processes<br>设置工作进程的数量，最优配置是设置为与CPU核数相同  </p></li><li><p>worker_cpu_affinity<br>为每个进程分配CPU，该与worker_processes、核数有关  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#两核CPU</span><br><span class="line">worker_processes 2;         # 2两个工作进程</span><br><span class="line">worker_cpu_affinity 01 10;  </span><br><span class="line"></span><br><span class="line">#四核CPU</span><br><span class="line">worker_processes 4; </span><br><span class="line">worker_cpu_affinity 0001 0010 0100 1000;</span><br></pre></td></tr></table></figure></li><li><p>worker_connections<br>一个工作进程同时可处理的最大请求数，nginx服务器最大连接数应为worker_processes*worker_connections</p></li><li><p>worker_rlimit_nofile<br>nginx服务器最大连接数，默认为linux的句柄数，若nginx连接数超过句柄数则会报错”too many opened files”  </p></li><li><p>accept_mutex<br>防止工作进程争抢请求，如果没有激活accept_mutex，那么所有的Worker都会被唤醒并争抢这一个请求，但最后只有一个Worker能获取新连接，其它的Worker会重新进入休眠状态，这就是惊群问题。它使服务器的性能下降，因为所有被唤醒的worker进程在重新进入waiting状态前会占用一段CPU时间，<strong>Nginx默认激活了accept_mutex</strong>，也就是说不会有惊群问题。当服务器连接数不多时，开启这个参数会让负载有一定程度的降低（因为不会唤醒多个worker进程）。<strong>但是当服务器的吞吐量很大时，为了效率，需要关闭这个参数（串行化的方式不然导致影响速度的降低）</strong>  </p></li><li><p>accept_mutex_delay<br>当accept_mutex功能启用后，只有一个持有mutex锁的worker进程会接受并处理请求，其他worker进程等待。accept_mutex_delay指定的时间就是这些worker进程的等待时间，过了等待时间下一个worker进程便取得mutex锁，处理请求。ccept_mutex_delay在events模块中指定，默认的值为500ms。</p></li><li><p>multi_accept<br>让nginx worker进程尽可能多地接受请求。它的作用是让worker进程一次性地接受监听队列里的所有请求，然后处理。如果web服务器面对的是一个持续的请求流，那么启用multi_accept可能会造成worker进程一次接受的请求大于worker_connections指定可以接受的请求数。这就是overflow，这个overflow会造成性能损失，overflow这部分的请求不会受到处理。</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx配置优化" scheme="http://example.com/tags/nginx%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>3-nginx服务配置</title>
    <link href="http://example.com/2022/11/28/Nginx/3-nginx%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/11/28/Nginx/3-nginx%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/</id>
    <published>2022-11-28T06:30:08.000Z</published>
    <updated>2022-12-09T05:56:00.184Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h2 id="主配置文件"><a href="#主配置文件" class="headerlink" title="主配置文件"></a>主配置文件</h2><p>/usr/local/nginx/conf/nginx.conf为主配置文件，主配置文件，配置文件必须以<code>;</code>结尾</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1<span class="comment">;    #全局快</span></span><br><span class="line">events &#123;     <span class="comment"># events块</span></span><br><span class="line">    worker_connections  1024<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">http &#123;     <span class="comment">#http块</span></span><br><span class="line">    include       mime.types<span class="comment">;</span></span><br><span class="line">    default_type  application/octet-stream<span class="comment">;</span></span><br><span class="line">    sendfile        on<span class="comment">;</span></span><br><span class="line">    keepalive_timeout  65<span class="comment">;</span></span><br><span class="line">    server &#123;     <span class="comment"># server块</span></span><br><span class="line">        listen       80<span class="comment">;</span></span><br><span class="line">        server_name  localhost<span class="comment">;</span></span><br><span class="line">        location / &#123;   <span class="comment">#localtion块</span></span><br><span class="line">            root   html<span class="comment">;</span></span><br><span class="line">            index  index.html index.htm<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html<span class="comment">;</span></span><br><span class="line">        <span class="attr">location</span> = /<span class="number">50</span>x.html &#123;     <span class="comment">#localtion块</span></span><br><span class="line">            root   html<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>全局快:配置文件从开始到events块之间的，通常包括worker process数、nginx进程PID的存放路径、日志存放路径  </li><li>events块：主要影响nginx服务器与用户的网络连接，对nginx服务器性能影响对较大。  </li><li>http块：代理、缓存、日志定义等  </li><li>server块：每一个server块相当于一台虚拟主机  </li></ul><p>配置讲解  </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user USER  [GROUP]，配置运行nginx的用户和用户组，注释或者nobody为所有用户都可执行</span></span><br><span class="line"><span class="comment">#只能在全局块中使用</span></span><br><span class="line"><span class="comment">#user  nobody;     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#工作进程的数量，配置的大小与CPU核数相关，可以设置为auto，为nginx进程自动检测</span></span><br><span class="line"><span class="comment">#只能在全局块中使用</span></span><br><span class="line">worker_processes  1<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#错误日志存放路径，可以设置保存的错误日志的级别</span></span><br><span class="line"><span class="comment">#debug | info | notice | warn | error | crit | alert | emerg，设置某一级别后，比这一级别高的日志也会被记录</span></span><br><span class="line"><span class="comment">#可以在全局块、http、server块中使用</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#PID文件存放路径</span></span><br><span class="line"><span class="comment">#只能在全局块中使用</span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    <span class="comment">#单个工作进程可以允许同时建立外部连接的数量</span></span><br><span class="line">    worker_connections  1024<span class="comment">;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#防止多个进程对访问连接的争抢</span></span><br><span class="line">    <span class="comment">#只能在events块中进行设置</span></span><br><span class="line">    <span class="comment">#accept_mutex  on</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#让nginx worker进程尽可能多地接受请求，worker进程一次性地接受监听队列里的所有请求，然后处理</span></span><br><span class="line">    <span class="comment">#multi_accept on/off;    #默认为off</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#选择事件模型进行消息处理</span></span><br><span class="line">    <span class="comment">#method可选择内容有：select、poll、kqueue、epoll（linux下使用）、rtsig</span></span><br><span class="line">    <span class="comment">#use METHOD </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    <span class="comment">#include 表示将其他nginx配置或者第三方模块引用到主配置文件</span></span><br><span class="line">    include       mime.types<span class="comment">;</span></span><br><span class="line">    <span class="comment">#配置用于处理前端请求的MIME类型</span></span><br><span class="line">    default_type  application/octet-stream<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#定义服务日志的格式，并为格式定一个名字</span></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line">    <span class="comment">#自定义服务日志，access_log path [format [buffer=size]]</span></span><br><span class="line">    <span class="comment">#format为log_format中定义的定义好的格式名称，size为临时存放日志的缓存区的大小</span></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置是否允许使用sendfile传输文件</span></span><br><span class="line">    sendfile        on<span class="comment">;</span></span><br><span class="line">    <span class="comment">#每个工作进程每次调用sendfile传输的数据量最大值</span></span><br><span class="line">    <span class="comment">#sendfile_max_chunk SIZE</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive超时时间</span></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65<span class="comment">;</span></span><br><span class="line">    <span class="comment">#限制用户某一连接的请求次数，默认为100</span></span><br><span class="line">    <span class="comment">#keepalive_requests NUMBER;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip压缩功能是够开启，是将网页静态资源压缩后传输到浏览器在进行解压，会消耗一定CPU资源，但会提高访问速度</span></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        <span class="comment">#监听所有IP 80端口</span></span><br><span class="line">        <span class="comment">#listen IP 监听具体IP的80端口、listen PORT 监听所有IP的指定端口</span></span><br><span class="line">        listen       80<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#对外提供的虚拟机；接受请求的域名、IP，由两段或者三段组成，demo.com  www.demo.com</span></span><br><span class="line">        <span class="comment">#可以有多个名，之间用空格隔开，第一个为主名;可以使用通配符*，但是只能在三段的首段或者尾段使用</span></span><br><span class="line">        server_name  localhost<span class="comment">;</span></span><br><span class="line">        </span><br><span class="line">        set $demo </span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># location [=/~/~*/^~/] 请求字符串   </span></span><br><span class="line">        <span class="comment"># = 严格匹配 、^~ 匹配度最高的立即处理</span></span><br><span class="line">        <span class="comment"># 使用正则必必须用标识 ~ 字符串包含正则，区分大小写 、 ~* 字符串包含正则，不区分大小写</span></span><br><span class="line">        location / &#123;  <span class="comment">#  通用匹配, 如果没有其它匹配,任何请求都会匹配到。</span></span><br><span class="line">            <span class="comment"># 请求的根目录，此处为nginx下的html目录，相对路径为相对nginx安装目录</span></span><br><span class="line">            root   html<span class="comment">;    #访问地址为 server_name/location字符串    访问文件路径为 root值/location字符串</span></span><br><span class="line">            index  index.html index.htm<span class="comment">;  #index 为默认首页</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#location /demo &#123;       #根据servername为localhost，当访问 localhost/demo时访问的文件为 /opt/demo下的文件</span></span><br><span class="line">        <span class="comment">#    root   /opt;               #还可以使用alisa更改，例如 alisa /opt/test;   实际访问的文件就是/opt/test下的文件</span></span><br><span class="line">        <span class="comment">#    index index.html;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#设置网站的错误页面，error_page ERROR_CODE  PATH</span></span><br><span class="line">        <span class="comment">#ERROR_CODE为错误代码，多个代码之间用空格隔出</span></span><br><span class="line">        <span class="comment">#PATH为nginx安装目录html为根目录的相对路径，若不想将错误页面放在nginx安装目录，可以后面跟一个location模块重新定向到目录</span></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html<span class="comment">;</span></span><br><span class="line">        <span class="attr">location</span> = /<span class="number">50</span>x.html &#123;</span><br><span class="line">            root   html<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx服务配置" scheme="http://example.com/tags/nginx%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>2-nginx安装</title>
    <link href="http://example.com/2022/11/27/Nginx/2-nginx%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2022/11/27/Nginx/2-nginx%E5%AE%89%E8%A3%85/</id>
    <published>2022-11-27T07:40:13.000Z</published>
    <updated>2022-11-28T06:41:04.704Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg">  </p><span id="more"></span><h1 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h1><p>nginx安装有yum安装与编译安装，yum安装无法自定义、安装时无法添加模块，编译安装安装位置与模块都可以自定义，但是需要安装依赖。</p><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>从nginx官网下载安装包，Mainline version是主线版本也就是开发版本，Stable version是稳定版、Legacy versions历史版本。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span>  </span><br><span class="line">yum install -y gcc gcc-c++ make automake autoconf libtool pcre* zlib openssl openssl-devel</span><br><span class="line">tar zxvf nginx-1.22.1.tar.gz -C /usr/local/</span><br><span class="line">cd /usr/local/nginx-1.22.1</span><br><span class="line">./configure   #暂不指定参数</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>安装完成后默认的nginx安装位置在/usr/local/nginx，相关的配置文件都在该位置。  </p><h2 id="将nginx添加为系统服务"><a href="#将nginx添加为系统服务" class="headerlink" title="将nginx添加为系统服务"></a>将nginx添加为系统服务</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">~]<span class="comment"># /usr/lib/systemd/system/nginx.service</span></span><br><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=nginx web service</span><br><span class="line"><span class="attr">Documentation</span>=http://nginx.org/en/docs/</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">PIDFile</span>=/usr/local/nginx/logs/nginx.pid</span><br><span class="line"><span class="attr">ExecStartPre</span>=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/nginx/sbin/nginx</span><br><span class="line"><span class="attr">ExecReload</span>=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line"><span class="attr">ExecStop</span>=/usr/local/nginx/sbin/nginx -s stop</span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=default.target</span><br></pre></td></tr></table></figure><h2 id="nginx服务启停"><a href="#nginx服务启停" class="headerlink" title="nginx服务启停"></a>nginx服务启停</h2><p>/usr/local/nginx/sbin/nginx相关参数<br>-v V：打印版本号、和配置<br>-t：测试配置正确性<br>-q：测试时只显示错误<br>-s：向主进程发送信号，stop（快速关机）、quit（优雅关机）、reopen（重新打开日志文件）、reload（重新加载配置文件）<br>-c：指定nginx配置文件路径<br>-g：指定nginx附加配置文件路径</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx安装" scheme="http://example.com/tags/nginx%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>1-nginx相关概念</title>
    <link href="http://example.com/2022/11/27/Nginx/1-nginx%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <id>http://example.com/2022/11/27/Nginx/1-nginx%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</id>
    <published>2022-11-27T04:11:30.000Z</published>
    <updated>2022-12-17T13:28:06.158Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg" alt="nginx.jpg"></p><span id="more"></span><p><a href="https://docs.nginx.com/nginx/">nginx官网文档</a>、<a href="https://nginx.org/en/docs/dirindex.html">nginx指令索引</a>  </p><h1 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h1><p>Nginx是一个高性能的HTTP和反向代理web服务器，也是一个IMAP、POP3、SMTP服务器，特点是占用内存少，并发性能强。  </p><h2 id="Nginx作为web服务器"><a href="#Nginx作为web服务器" class="headerlink" title="Nginx作为web服务器"></a>Nginx作为web服务器</h2><p>Nginx可以作为静态页面的web服务器，异步非阻塞，使用IO多路复用的epoll模型。  </p><h3 id="同步、异步、阻塞、非阻塞"><a href="#同步、异步、阻塞、非阻塞" class="headerlink" title="同步、异步、阻塞、非阻塞"></a>同步、异步、阻塞、非阻塞</h3><p><strong>同步与异步是通信模式的概念</strong><br>同步：发送方发送请求后，等待请求响应，才继续发送下一个请求<br>异步：发送方发送请求后，不需要等待响应，就继续发送下一个请求<br><strong>阻塞与非阻塞是进程处理调用的方式</strong><br>阻塞：结果返回之前线程处于挂起状态<br>非阻塞：线程不会被挂起，立即执行返回下一个调用  </p><h2 id="正向代理（代理的是客户端）"><a href="#正向代理（代理的是客户端）" class="headerlink" title="正向代理（代理的是客户端）"></a>正向代理（代理的是客户端）</h2><p>客户端想要访问一个服务器，但是它可能无法直接访问这台服务器，这时候这可找一台可以访问目标服务器的另外一台服务器，而这台服务器就被当做是代理人的角色 ，称之为代理服务器，于是客户端把请求发给代理服务器，由代理服务器获得目标服务器的数据并返回给客户端。客户端是清楚目标服务器的地址的，而目标服务器是不清楚来自客户端，它只知道来自哪个代理服务器，所以正向代理可以屏蔽或隐藏客户端的信息。  </p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p><strong>访问被禁止的资源</strong>：让客户端访问原来不能访问的服务器，通过代理服务器进行访问。<br><strong>隐藏客户端的地址</strong>：代理服务器代表了客户端，看不到原始的客户端。<br><strong>进行客户访问控制</strong>：集中部署访问策略，控制客户端的访问行为，内部资源的控制。<br><strong>加速访问资源</strong>：代理服务器设置一个较大的缓冲区，会将部分请求的响应保存到缓冲区，其他用户访问时可以从缓冲区域直接读取信息。  </p><h2 id="反向代理（代理的是服务器）"><a href="#反向代理（代理的是服务器）" class="headerlink" title="反向代理（代理的是服务器）"></a>反向代理（代理的是服务器）</h2><p>反向代理就是代理服务器为服务器作代理人，站在服务器这边，它就是对外屏蔽了服务器的信息，常用的场景就是多台服务器分布式部署，像一些大的网站，由于访问人数很多，就需要多台服务器来解决人数多的问题，这时这些服务器就由一个反向代理服务器来代理，客户端发来请求，先由反向代理服务器，然后按一定的规则分发到明确的服务器，而客户端不知道是哪台服务器。  </p><h3 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h3><p><strong>隐藏服务器的IP</strong>：因为反向代理服务器代理了服务器所以客户端并不知道业务服务器的IP。<br><strong>负载均衡</strong>：反向代理服务器根据业务服务器的负载情况，将客户端的请求分别发送到不同的业务服务器。<br><strong>提高访问速度</strong>：对于静态内容及短时间内有大量访问请求的动态内容提供缓存服务。<br><strong>提供安全保障</strong>：对网站提供基于WEB攻击的防护、为后端提供加密和SSL加速、提供HTTP访问认证。  </p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>单个服务器解决不了时，增加服务器的数量，然后将请求分发到各个服务器上，将原先请求集中到单个服务器上的情况改为将请求分发到多个服务器上，将负载分发到不同的服务器，也就是我们所说的负载均衡。  </p><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><p>为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/27/xdGY8aqytLheSjp.jpg&quot; alt=&quot;nginx.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="nginx" scheme="http://example.com/categories/nginx/"/>
    
    
    <category term="nginx相关概念" scheme="http://example.com/tags/nginx%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>6-grafana告警配置</title>
    <link href="http://example.com/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/</id>
    <published>2022-11-24T18:00:48.000Z</published>
    <updated>2023-02-10T09:07:44.503Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg" alt="grafana.jpg">  </p><span id="more"></span><h1 id="grafana-告警"><a href="#grafana-告警" class="headerlink" title="grafana 告警"></a>grafana 告警</h1><h2 id="创建告警规则"><a href="#创建告警规则" class="headerlink" title="创建告警规则"></a>创建告警规则</h2><p>告警规则可以通过<code>+New alert rule</code>创建，还可以在dashboard panel的Alter选项卡中进行创建。<br>使用Prometheus数据源创建一个<code>up</code>的告警规则<br><img src="/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/%E8%AE%BE%E7%BD%AE%E5%91%8A%E8%AD%A61.png"><br><img src="/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/%E8%AE%BE%E7%BD%AE%E5%91%8A%E8%AD%A62.png"><br><img src="/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/%E8%AE%BE%E7%BD%AE%E5%91%8A%E8%AD%A63.png">  </p><h2 id="设置告警发送方式"><a href="#设置告警发送方式" class="headerlink" title="设置告警发送方式"></a>设置告警发送方式</h2><p>grafana发送告警的方式是比较多的，如邮件、钉钉、企业微信等</p><h3 id="添加邮件发送方式-。，，，，"><a href="#添加邮件发送方式-。，，，，" class="headerlink" title="添加邮件发送方式  。，，，，"></a>添加邮件发送方式  。，，，，</h3><p>邮件发送方式需要先修改grafana的配置文件<code>vim /etc/grafana/grafana.ini</code>  </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#################################### SMTP / Emailing ##########################</span></span><br><span class="line"><span class="section">[smtp]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">True</span>  <span class="comment">#开启smtp</span></span><br><span class="line"><span class="attr">host</span> = smtp.<span class="number">163</span>.com:<span class="number">25</span>  <span class="comment">#smtp服务器</span></span><br><span class="line"><span class="attr">user</span> = <span class="number">17</span>XXXXXXX8@<span class="number">163</span>.com <span class="comment">#用户名</span></span><br><span class="line"><span class="comment"># If the password contains # or ; you have to wrap it with triple quotes. Ex &quot;&quot;&quot;#password;&quot;&quot;&quot;</span></span><br><span class="line"><span class="attr">password</span> = XXXXXXX    <span class="comment">#密码</span></span><br><span class="line"><span class="comment">;cert_file =</span></span><br><span class="line"><span class="comment">;key_file =</span></span><br><span class="line"><span class="comment">;skip_verify = false</span></span><br><span class="line"><span class="attr">from_address</span> = <span class="number">17</span>XXXXXXX8@<span class="number">163</span>.com  <span class="comment">#发件人邮箱</span></span><br><span class="line"><span class="attr">from_name</span> = test_name   <span class="comment">#发件人名</span></span><br><span class="line"><span class="comment"># EHLO identity in SMTP dialog (defaults to instance_name)</span></span><br><span class="line"><span class="comment">;ehlo_identity = dashboard.example.com</span></span><br><span class="line"><span class="comment"># SMTP startTLS policy (defaults to &#x27;OpportunisticStartTLS&#x27;)</span></span><br><span class="line"><span class="comment">;startTLS_policy = NoStartTLS</span></span><br><span class="line"></span><br><span class="line"><span class="section">[emails]</span></span><br><span class="line"><span class="comment">;welcome_email_on_sign_up = false</span></span><br><span class="line"><span class="comment">;templates_pattern = emails/*.html, emails/*.txt</span></span><br><span class="line"><span class="comment">;content_types = text/html</span></span><br></pre></td></tr></table></figure><p>重启grafana服务，然后再grafana–Contact points–New contact point进行配置<br><img src="/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/%E5%91%8A%E8%AD%A6%E9%82%AE%E4%BB%B6%E9%85%8D%E7%BD%AE.png">  </p><h3 id="添加企业微信发送方式"><a href="#添加企业微信发送方式" class="headerlink" title="添加企业微信发送方式"></a>添加企业微信发送方式</h3><p>首先需要<a href="https://work.weixin.qq.com/wework_admin/register_wx?from=myhome">注册一个企业微信</a>，创建完成后登录创建一个群聊，群聊中添加一个机器人，记录一下这个机器人的Webhook。登录企业微信，查找企业ID，在应用管理-打卡-API中查看Secret。<br><img src="/2022/11/25/grafana/6-grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/%E5%91%8A%E8%AD%A6%E5%BE%AE%E4%BF%A1%E9%85%8D%E7%BD%AE.png">  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg&quot; alt=&quot;grafana.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="grafana" scheme="http://example.com/categories/grafana/"/>
    
    
    <category term="grafana告警配置" scheme="http://example.com/tags/grafana%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>5-panel可视化</title>
    <link href="http://example.com/2022/11/25/grafana/5-panel%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>http://example.com/2022/11/25/grafana/5-panel%E5%8F%AF%E8%A7%86%E5%8C%96/</id>
    <published>2022-11-24T18:00:18.000Z</published>
    <updated>2022-11-25T06:25:58.348Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg" alt="grafana.jpg">  </p><span id="more"></span><h1 id="panel"><a href="#panel" class="headerlink" title="panel"></a>panel</h1><h2 id="panel预览"><a href="#panel预览" class="headerlink" title="panel预览"></a>panel预览</h2><p><img src="/2022/11/25/grafana/5-panel%E5%8F%AF%E8%A7%86%E5%8C%96/panel%E9%A2%84%E8%A7%88.png"><br>Table view:试图转换为表格<br>Fill：在编辑界面中图表自动填充，并不是dashboard中的实际大小<br>Actual：编辑界面中预览的与实际dashboard中的大小一致，或者按照实际比例缩小  </p><h2 id="数据部分"><a href="#数据部分" class="headerlink" title="数据部分"></a>数据部分</h2><p><strong>Query（查询选项卡）</strong><br><img src="/2022/11/25/grafana/5-panel%E5%8F%AF%E8%A7%86%E5%8C%96/Query.png">  </p><p><strong>Transform（转换选项卡）</strong><br>使用转换方法对返回的数据进行操作，转换是有顺序的，转换方法当有多个时，每个转换都会创建一个结果集，然后传递给处理管道中的下一个转换。<br>相关转换方法的解释以及使用查看<a href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/#transform-data">官网Transform data文档</a>  </p><p><strong>Alert（告警选项卡）</strong><br>创建告警</p><h2 id="panel显示配置"><a href="#panel显示配置" class="headerlink" title="panel显示配置"></a>panel显示配置</h2><p>图例相关配置，不同的可视化panel有不同的配置，具体查看<a href="https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/">官网Visualizations文档</a><br><img src="/2022/11/25/grafana/5-panel%E5%8F%AF%E8%A7%86%E5%8C%96/%E6%98%BE%E7%A4%BA%E9%85%8D%E7%BD%AE.png">  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg&quot; alt=&quot;grafana.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="grafana" scheme="http://example.com/categories/grafana/"/>
    
    
    <category term="panel可视化" scheme="http://example.com/tags/panel%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>4-dashboard</title>
    <link href="http://example.com/2022/11/22/grafana/4-dashboard/"/>
    <id>http://example.com/2022/11/22/grafana/4-dashboard/</id>
    <published>2022-11-22T07:35:05.000Z</published>
    <updated>2022-11-24T17:54:23.186Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg" alt="grafana.jpg"> </p><span id="more"></span><h1 id="添加数据源"><a href="#添加数据源" class="headerlink" title="添加数据源"></a>添加数据源</h1><p>在创建dashboard之前需要先添加数据源。<br>Configuration–Data sources–Add data source，添加数据源，如没有要添加的数据源可以在plugins中查看对应的插件进行安装，安装后在添加数据源。<br>这里添加一个prometheus数据源，添加prometheus数据源只需要填写URL（prometheus web页面地址）即可，其他根据需求进行填写，添加后可以点击<code>save&amp;test</code>进行保存并测试。  </p><h1 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h1><h2 id="创建dashboard"><a href="#创建dashboard" class="headerlink" title="创建dashboard"></a>创建dashboard</h2><p><code>+ New dashboard</code>–<code>Add a new panel</code>，可以为新的dashboard创建一个新的panel<br><img src="/2022/11/22/grafana/4-dashboard/%E5%88%9B%E5%BB%BAdashboard.png">  </p><h2 id="dashboard设置"><a href="#dashboard设置" class="headerlink" title="dashboard设置"></a>dashboard设置</h2><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>变量在dashboard内定义后在仪表盘左上角行程可选项，对应的在panel中定义图表中可进行使用变量<br><img src="/2022/11/22/grafana/4-dashboard/Variables.png"><br><strong>General</strong><br>Name：变量名称<br>Label:在仪表盘中显示的标签名<br>Hide：隐藏Label（标签名）、变量<br>Type：变量的类型，有多种变量  </p><ul><li>Interval：间隔，查询的时间跨度  </li><li>Query：查询，编写数据源查询，通常返回度量名称、标签值等，如主机、主机组等  </li><li>Datasource：指定数据源，如有多个同类型数据源，可以使用该变量在多个同类数据源中选择  </li><li>Custom：用户自定义的变量  </li><li>Constant：常量  </li><li>Ad hoc filters：只适用于部分数据源，InfluxDB、Prometheus、Elasticsearch，  </li><li>Text Box：文本，提供一个可以自由输入的文本框  </li></ul><p><strong>Query Options （查询选项）</strong><br>Data source:数据源<br>Refresh：刷新方式，On Dashboard load（仪表盘加载时）、On time range changed（时间范围发生变化）<br>Regex：正则，使用正则表达式类匹配对应的值<br>Sort：排序方式  </p><p><strong>Selection Options</strong><br>Multi-value:允许多选，即在Dashboard变量可以选择多个值可以同时勾选多个<br><img src="/2022/11/22/grafana/4-dashboard/Multi-value.png"><br>Include All option：所有，即在Dashboard变量中可以有一个All的选项，允许勾选<br><img src="/2022/11/22/grafana/4-dashboard/ALL.png">  </p><h3 id="link"><a href="#link" class="headerlink" title="link"></a>link</h3><p>dashboard link显示在dashboard右上角，在dashboard中进行设置，可以设置外部网站的链接或者其他dashboard的下拉菜单。<br><img src="/2022/11/22/grafana/4-dashboard/dashboard-link.png"><br>dashboard link有两种类型，dashboards是grafana中其他dashboard，link是代表添加的其他URL。<br><img src="/2022/11/22/grafana/4-dashboard/dashboard.png"><br><img src="/2022/11/22/grafana/4-dashboard/link.png"><br><img src="/2022/11/22/grafana/4-dashboard/%E6%95%88%E6%9E%9C.png">  因为在dashboard类型link中选择了<code>show as dropdown</code>，所以点击new link会显示下拉列表  </p><h2 id="导入dashboard"><a href="#导入dashboard" class="headerlink" title="导入dashboard"></a>导入dashboard</h2><p>可以从<a href="https://grafana.com/grafana/dashboards/?plcmt=footer">官网</a>找到适合的dashboard通过<code>+Import</code>使用对应的JSON或者外网状态下使用dashboard ID进行导入。<br><strong>dashboard推荐</strong><br>Node Exporter Full（1860）：prometheus node-exporter  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg&quot; alt=&quot;grafana.jpg&quot;&gt; &lt;/p&gt;</summary>
    
    
    
    <category term="grafana" scheme="http://example.com/categories/grafana/"/>
    
    
    <category term="dashboard" scheme="http://example.com/tags/dashboard/"/>
    
  </entry>
  
  <entry>
    <title>3-grafana界面介绍</title>
    <link href="http://example.com/2022/11/13/grafana/3-grafana%E7%95%8C%E9%9D%A2%E4%BB%8B%E7%BB%8D/"/>
    <id>http://example.com/2022/11/13/grafana/3-grafana%E7%95%8C%E9%9D%A2%E4%BB%8B%E7%BB%8D/</id>
    <published>2022-11-13T06:59:54.000Z</published>
    <updated>2022-11-25T05:21:17.849Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg" alt="grafana.jpg"> </p><span id="more"></span><h1 id="grafana界面"><a href="#grafana界面" class="headerlink" title="grafana界面"></a>grafana界面</h1><p>根据grafana web界面左侧菜单介绍一下相关功能  </p><h2 id="home"><a href="#home" class="headerlink" title="home"></a>home</h2><p>grafana logo，此处为界面的home page，从任何界面点击都会跳转到home page页，这个页面的各个模块也可以进行设置修改  </p><h2 id="Search-dashboards"><a href="#Search-dashboards" class="headerlink" title="Search dashboards"></a>Search dashboards</h2><p>搜索当前用户可以查看的dashboard  </p><h2 id="starred"><a href="#starred" class="headerlink" title="starred"></a>starred</h2><p>给dashboard添加星标后，会展示在该页面   </p><h2 id="dashboards"><a href="#dashboards" class="headerlink" title="dashboards"></a>dashboards</h2><p>仪表盘菜单</p><ul><li>browse：可以再次界面创建folder、dashboard  </li><li>playlists：可以将多个dashboard组成播放列表循环轮播，可以作为监控大屏轮播  </li><li>snapshots  </li><li>library panels：面板库，可以将设置好的面板添加到面板库中，创建时可直接选取  </li><li>+New dashboard ：创建dashboard  </li><li>+New folder：创建文件夹  </li><li>+Import：导入，可以将panel、dashboard的JSON文件导入，也可以在现网状态下直接将<a href="https://grafana.com/grafana/dashboards/?plcmt=footer">官网</a>中dashboard导入  </li></ul><h2 id="Explore"><a href="#Explore" class="headerlink" title="Explore"></a>Explore</h2><p>可以选择数据源进行临时查询，查询后的表可以添加到dashboard中  </p><h2 id="Alerting"><a href="#Alerting" class="headerlink" title="Alerting"></a>Alerting</h2><p>告警配置  </p><ul><li>Alert rules ：告警规则配置  </li><li>Contact points：告警消息模板、告警发送方式  </li><li>Notification policies：告警默认发送方式以及发送告警的时间设置，根据告警的标签设置不通的发送方式  </li><li>Silences：根据告警规则标签屏蔽告警  </li><li>Alert groups:告警组  </li><li>Admin:</li><li>+New alert rule:创建告警规则</li></ul><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><ul><li>Data sources:grafana数据源，可以添加多种、多个数据源  </li><li>users：grafana用户，,admin、可编辑、只读用户三种角色，创建用户时会给给出一个链接，需要访问链接进行创建用户  </li><li>Teams：团队，可以创建对应的团队，并设置团队的主dashboard  </li><li>plugins：插件，对应在前面章节中界面安装插件方式  </li><li>Organization profile：当前用户所在的组织，不同的组织的dashboard是不共享的，可以在用户-Switch Organization切换用户   </li></ul><h2 id="server-admin"><a href="#server-admin" class="headerlink" title="server admin"></a>server admin</h2><p>管理所有用户和组织</p><ul><li>users：grafana中所有的用户信息，点击用户可以查看详细信息  </li><li>Organizations：grafana中所有的组织，可以创建组织，一个用户可以属于多个组织  </li><li>setting：grafana服务相关配置信息  </li><li>Statistics and licensing：统计信息，包含仪表盘、标签、数据源、报警、用户、组织数量信息  </li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/11/10/OfHeuAsG8yhmkY5.jpg&quot; alt=&quot;grafana.jpg&quot;&gt; &lt;/p&gt;</summary>
    
    
    
    <category term="grafana" scheme="http://example.com/categories/grafana/"/>
    
    
    <category term="grafana界面介绍" scheme="http://example.com/tags/grafana%E7%95%8C%E9%9D%A2%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
</feed>
