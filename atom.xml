<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaGuang</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-02T17:45:33.937Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>DaGuang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Supervisor进程守护监控</title>
    <link href="http://example.com/2021/09/02/Linux/Supervisor%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/2021/09/02/Linux/Supervisor%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4%E7%9B%91%E6%8E%A7/</id>
    <published>2021-09-02T13:55:50.000Z</published>
    <updated>2021-09-02T17:45:33.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Supervisor"><a href="#Supervisor" class="headerlink" title="Supervisor"></a>Supervisor</h1><p><a href="http://supervisord.org/">Supervisor官网</a>  </p><h2 id="Supervisor简介"><a href="#Supervisor简介" class="headerlink" title="Supervisor简介"></a>Supervisor简介</h2><p>Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。supervisor还提供了一个功能，可以为supervisord或者每个子进程，设置一个非root的user，这个user就可以管理它对应的进程。  </p><h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><ol><li>通过pip安装  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure></li><li>通过yum安装  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y supervisor</span><br></pre></td></tr></table></figure></li><li>通过apt安装  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install supervisor</span><br></pre></td></tr></table></figure></li></ol><h2 id="介绍Supervisor"><a href="#介绍Supervisor" class="headerlink" title="介绍Supervisor"></a>介绍Supervisor</h2><ul><li><strong>supervisord</strong><br>运行 Supervisor 时会启动一个进程 supervisord，它负责启动所管理的进程，并将所管理的进程作为自己的子进程来启动，而且可以在所管理的进程出现崩溃时自动重启。  </li><li><strong>supervisorctl</strong><br>是命令行管理工具，可以用来执行 stop、start、restart 等命令，来对这些子进程进行管理。supervisor是所有进程的父进程，管理着启动的子进程，supervisor以子进程的PID来管理子进程，当子进程异常退出时supervisor可以收到相应的信号量。  </li></ul><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>安装完成后执行<code>echo_supervisord_conf</code>,会将Supervisor的示例配置文件打印到终端标准输出。<br>然后使用root权限可以将示例配置文件重定向输出到<code>echo_supervisord_conf &gt; /etc/supervisord.conf</code>中，若没有root权限或者要将配置文件放在其他目录中可以执行<code>echo_supervisor_conf &gt; /xxx/supervisord.conf</code>中，启动supervisord时指明配置文件即可<code>superisord -c /xxx/supervisord.conf</code>。  </p><h2 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a>配置文件详解</h2><p>/etc/supervisord.conf，/etc/supervisord.d中可以编写子进程的配置文件，也就是/etc/supervisord.conf中的[program:xxx]模块(例如创建test.conf)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[unix_http_server]</span></span><br><span class="line"><span class="attr">file</span>=/var/run/supervisor/supervisor.sock   <span class="comment">; socket 路径,supervisorctl 会使用，注意修改，默认为/tmp下容易被删除</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">;chmod=0700                 ; socket 文件的权限</span></span><br><span class="line"><span class="comment">;chown=nobody:nogroup       ; socket 所属用户及组</span></span><br><span class="line"><span class="comment">;username=user              ; 用户名</span></span><br><span class="line"><span class="comment">;password=123               ; 密码</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[inet_http_server]</span>         <span class="comment">; 是否启用服务，默认是关闭的（启用的话可以看到supervisor 管理的服务状态）</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">9001</span>        <span class="comment">; 监听的IP及端口</span></span><br><span class="line"><span class="attr">username</span>=user              <span class="comment">; 用户名</span></span><br><span class="line"><span class="attr">password</span>=<span class="number">123</span>               <span class="comment">; 密码</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[supervisord]</span>               <span class="comment">; supervisord 全局配置</span></span><br><span class="line"><span class="attr">logfile</span>=/var/log/supervisor/supervisord.log  <span class="comment">; supervisor 日志路径，注意修改，默认为/tmp下容易被删除</span></span><br><span class="line"><span class="attr">logfile_maxbytes</span>=<span class="number">50</span>MB       <span class="comment">; 单个日志文件最大数</span></span><br><span class="line"><span class="attr">logfile_backups</span>=<span class="number">10</span>          <span class="comment">; 保留多少个日志文件（默认10个）</span></span><br><span class="line"><span class="attr">loglevel</span>=info               <span class="comment">; (log level;default info; others: debug,warn,trace)</span></span><br><span class="line"><span class="attr">pidfile</span>=/var/run/supervisord.pid <span class="comment">; pid 文件路径，注意修改，默认为/tmp下容易被删除</span></span><br><span class="line"><span class="attr">nodaemon</span>=<span class="literal">false</span>              <span class="comment">; 启动是否丢到前台，设置为false ，表示以daemon 的方式启动</span></span><br><span class="line"><span class="attr">minfds</span>=<span class="number">1024</span>                 <span class="comment">; 最小文件打开数，对应系统limit.conf 中的nofile ,默认最小为1024，最大为4096</span></span><br><span class="line"><span class="attr">minprocs</span>=<span class="number">200</span>                <span class="comment">; 最小的进程打开数，对应系统的limit.conf 中的nproc,默认为200</span></span><br><span class="line"><span class="comment">;umask=022                  ; (process file creation umask;default 022)</span></span><br><span class="line"><span class="comment">;user=chrism                 ; 启动supervisord 服务的用户，默认为root</span></span><br><span class="line"><span class="comment">;identifier=supervisor       ; (supervisord identifier, default is &#x27;supervisor&#x27;)</span></span><br><span class="line"><span class="comment">;directory=/tmp              ; 这里的目录指的是服务的工作目录</span></span><br><span class="line"><span class="comment">;nocleanup=true              ; (don&#x27;t clean up tempfiles at start;default false)</span></span><br><span class="line"><span class="comment">;childlogdir=/tmp            ; (&#x27;AUTO&#x27; child log dir, default $TEMP)</span></span><br><span class="line"><span class="comment">;environment=KEY=value       ; (key value pairs to add to environment)</span></span><br><span class="line"><span class="comment">;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">; the below section must remain in the config file for RPC</span></span><br><span class="line"><span class="comment">; (supervisorctl/web interface) to work, additional interfaces may be</span></span><br><span class="line"><span class="comment">; added by defining them in separate rpcinterface: sections</span></span><br><span class="line"><span class="section">[rpcinterface:supervisor]</span></span><br><span class="line"><span class="attr">supervisor.rpcinterface_factory</span> = supervisor.rpcinterface:make_main_rpcinterface</span><br><span class="line"> </span><br><span class="line"><span class="section">[supervisorctl]</span></span><br><span class="line"><span class="attr">serverurl</span>=unix:///var/run/supervisor/supervisor.sock <span class="comment">; 通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</span></span><br><span class="line"><span class="comment">;serverurl=http://127.0.0.1:9001 ; 通过HTTP的方式连接supervisord</span></span><br><span class="line"><span class="comment">;username=chris              ; should be same as http_username if set</span></span><br><span class="line"><span class="comment">;password=123                ; should be same as http_password if set</span></span><br><span class="line"><span class="comment">;prompt=mysupervisor         ; cmd line prompt (default &quot;supervisor&quot;)</span></span><br><span class="line"><span class="comment">;history_file=~/.sc_history  ; use readline history if available</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">; The below sample program section shows all possible program subsection values,</span></span><br><span class="line"><span class="comment">; create one or more &#x27;real&#x27; program: sections to be able to control them under</span></span><br><span class="line"><span class="comment">; supervisor.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">;[program:theprogramname]      ; 定义一个守护进程 </span></span><br><span class="line"><span class="comment">;command=/bin/cat              ; 启动程序使用的命令，可以是绝对路径或者相对路径</span></span><br><span class="line"><span class="comment">;process_name=%(program_name)s ; 一个python字符串表达式，用来表示supervisor进程启动的这个的名称，默认值是%(program_name)s</span></span><br><span class="line"><span class="comment">;numprocs=1                    ; Supervisor启动这个程序的多个实例，如果numprocs&gt;1，则process_name的表达式必须包含%(process_num)s，默认是1</span></span><br><span class="line"><span class="comment">;directory=/tmp                ; supervisord在生成子进程的时候会切换到该目录</span></span><br><span class="line"><span class="comment">;umask=022                     ; umask for process (default None)</span></span><br><span class="line"><span class="comment">;priority=999                  ; 权重，可以控制程序启动和关闭时的顺序，权重越低：越早启动，越晚关闭。默认值是999</span></span><br><span class="line"><span class="comment">;autostart=true                ; 如果设置为true，当supervisord启动的时候，进程会自动启动</span></span><br><span class="line"><span class="comment">;autorestart=true              ; 设置为随 supervisord 重启而重启，值可以是false、true、unexpected。false：进程不会自动重启,unexpected：进程意外杀死后才重启</span></span><br><span class="line"><span class="comment">;startsecs=10                  ; 程序启动后等待多长时间后才认为程序启动成功，默认是10秒</span></span><br><span class="line"><span class="comment">;startretries=3                ; supervisord尝试启动一个程序时尝试的次数。默认是3</span></span><br><span class="line"><span class="comment">;exitcodes=0,2                 ; 一个预期的退出返回码，默认是0,2。</span></span><br><span class="line"><span class="comment">;stopsignal=QUIT               ; 当收到stop请求的时候，发送信号给程序，默认是TERM信号，也可以是 HUP, INT, QUIT, KILL, USR1, or USR2</span></span><br><span class="line"><span class="comment">;stopwaitsecs=10               ; 在操作系统给supervisord发送SIGCHILD信号时等待的时间</span></span><br><span class="line"><span class="comment">;user=chrism                   ; 如果supervisord以root运行，则会使用这个设置用户启动子程序</span></span><br><span class="line"><span class="comment">;redirect_stderr=true          ; 如果设置为true，进程则会把标准错误输出到supervisord后台的标准输出文件描述符</span></span><br><span class="line"><span class="comment">;stdout_logfile=/a/path        ; 把进程的标准输出写入文件中，如果stdout_logfile没有设置或者设置为AUTO，则supervisor会自动选择一个文件位置</span></span><br><span class="line"><span class="comment">;stdout_logfile_maxbytes=1MB   ; 标准输出log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小</span></span><br><span class="line"><span class="comment">;stdout_logfile_backups=10     ; 标准输出日志轮转备份的数量，默认是10，如果设置为0，则不备份</span></span><br><span class="line"><span class="comment">;stdout_capture_maxbytes=1MB   ; 当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB</span></span><br><span class="line"><span class="comment">;stdout_events_enabled=false   ; 如果设置为true，当进程在写它的stderr</span></span><br><span class="line"><span class="comment">;stderr_logfile=/a/path        ; 把进程的错误日志输出一个文件中，除非redirect_stderr参数被设置为true</span></span><br><span class="line"><span class="comment">;stderr_logfile_maxbytes=1MB   ; 错误log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小</span></span><br><span class="line"><span class="comment">;stderr_logfile_backups=10     ; 错误日志轮转备份的数量，默认是10，如果设置为0，则不备份</span></span><br><span class="line"><span class="comment">;stderr_capture_maxbytes=1MB   ; 当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB</span></span><br><span class="line"><span class="comment">;stderr_events_enabled=false   ; 如果设置为true，当进程在写它的stderr到文件描述符的时候，PROCESS_LOG_STDERR事件会被触发</span></span><br><span class="line"><span class="comment">;environment=A=1,B=2           ; 一个k/v对的list列表</span></span><br><span class="line"><span class="comment">;serverurl=AUTO                ; 是否允许子进程和内部的HTTP服务通讯，如果设置为AUTO，supervisor会自动的构造一个url</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">; The below sample eventlistener section shows all possible</span></span><br><span class="line"><span class="comment">; eventlistener subsection values, create one or more &#x27;real&#x27;</span></span><br><span class="line"><span class="comment">; eventlistener: sections to be able to handle event notifications</span></span><br><span class="line"><span class="comment">; sent by supervisor.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;这个地方是自定义一个守护进程</span></span><br><span class="line"><span class="section">[program:test]</span></span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">directory</span>=/home/supervisor_test</span><br><span class="line"><span class="attr">command</span>=/bin/bash /home/supervisor_test/test.sh</span><br><span class="line"><span class="attr">stdout_logfile</span>=/home/supervisor_test/test.txt    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;[eventlistener:theeventlistenername]</span></span><br><span class="line"><span class="comment">;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)</span></span><br><span class="line"><span class="comment">;process_name=%(program_name)s ; process_name expr (default %(program_name)s)</span></span><br><span class="line"><span class="comment">;numprocs=1                    ; number of processes copies to start (def 1)</span></span><br><span class="line"><span class="comment">;events=EVENT                  ; event notif. types to subscribe to (req&#x27;d)</span></span><br><span class="line"><span class="comment">;buffer_size=10                ; event buffer queue size (default 10)</span></span><br><span class="line"><span class="comment">;directory=/tmp                ; directory to cwd to before exec (def no cwd)</span></span><br><span class="line"><span class="comment">;umask=022                     ; umask for process (default None)</span></span><br><span class="line"><span class="comment">;priority=-1                   ; the relative start priority (default -1)</span></span><br><span class="line"><span class="comment">;autostart=true                ; start at supervisord start (default: true)</span></span><br><span class="line"><span class="comment">;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)</span></span><br><span class="line"><span class="comment">;startretries=3                ; max # of serial start failures when starting (default 3)</span></span><br><span class="line"><span class="comment">;autorestart=unexpected        ; autorestart if exited after running (def: unexpected)</span></span><br><span class="line"><span class="comment">;exitcodes=0,2                 ; &#x27;expected&#x27; exit codes used with autorestart (default 0,2)</span></span><br><span class="line"><span class="comment">;stopsignal=QUIT               ; signal used to kill process (default TERM)</span></span><br><span class="line"><span class="comment">;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)</span></span><br><span class="line"><span class="comment">;stopasgroup=false             ; send stop signal to the UNIX process group (default false)</span></span><br><span class="line"><span class="comment">;killasgroup=false             ; SIGKILL the UNIX process group (def false)</span></span><br><span class="line"><span class="comment">;user=chrism                   ; setuid to this UNIX account to run the program</span></span><br><span class="line"><span class="comment">;redirect_stderr=false         ; redirect_stderr=true is not allowed for eventlisteners</span></span><br><span class="line"><span class="comment">;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO</span></span><br><span class="line"><span class="comment">;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)</span></span><br><span class="line"><span class="comment">;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)</span></span><br><span class="line"><span class="comment">;stdout_events_enabled=false   ; emit events on stdout writes (default false)</span></span><br><span class="line"><span class="comment">;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO</span></span><br><span class="line"><span class="comment">;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)</span></span><br><span class="line"><span class="comment">;stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)</span></span><br><span class="line"><span class="comment">;stderr_events_enabled=false   ; emit events on stderr writes (default false)</span></span><br><span class="line"><span class="comment">;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; process environment additions</span></span><br><span class="line"><span class="comment">;serverurl=AUTO                ; override serverurl computation (childutils)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The sample group section below shows all possible group values.  Create one</span></span><br><span class="line"><span class="comment">; or more &#x27;real&#x27; group: sections to create &quot;heterogeneous&quot; process groups.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;[group:thegroupname]   ;定义一个组</span></span><br><span class="line"><span class="comment">;programs=progname1,progname2  ; 组内的成员模块有哪些   </span></span><br><span class="line"><span class="comment">;priority=999                  ; the relative start priority (default 999)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The [include] section can just contain the &quot;files&quot; setting.  This</span></span><br><span class="line"><span class="comment">; setting can list multiple files (separated by whitespace or</span></span><br><span class="line"><span class="comment">; newlines).  It can also contain wildcards.  The filenames are</span></span><br><span class="line"><span class="comment">; interpreted as relative to this file.  Included files *cannot*</span></span><br><span class="line"><span class="comment">; include files themselves.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;[include]</span></span><br><span class="line"><span class="comment">;files = relative/directory/*.ini</span></span><br></pre></td></tr></table></figure><p>编写一个简单的死循环脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">  date  &gt;&gt; /home/supervisor_test/test.txt</span><br><span class="line">  sleep 10s</span><br><span class="line">  date &gt;&gt; /home/supervisor_test/test.txt</span><br><span class="line">  sleep 10s</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>此处的配置文件中启动了web，可以在web中进行查看进程状态以及相关操作</p><h2 id="启动Supervisor"><a href="#启动Supervisor" class="headerlink" title="启动Supervisor"></a>启动Supervisor</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">supervisord   # 此处因为配置文件为默认的/etc/supervisord.conf,若使用其他配置文件需要加 -c 配置文件路径</span><br><span class="line">supervisord -c /xxx/xxxx</span><br></pre></td></tr></table></figure><p><strong>注意</strong>在启动时可能会出现以下错误  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Another program is already listening on a port that one of our HTTP servers is configured to use.  Shut this program down first before starting supervisord.For help, use /usr/bin/supervisord -h</span><br></pre></td></tr></table></figure><p>这表示已经supervisor已经启动，若配置进行了修改可以使用<code>supervisorctl update</code>  </p><h2 id="supervisorctl命令讲解"><a href="#supervisorctl命令讲解" class="headerlink" title="supervisorctl命令讲解"></a>supervisorctl命令讲解</h2><ul><li>supervisorctl ：进入到交互式命令行，在交互式命令行中以下命令可以不加supervisorctl直接执行</li><li>supervisorctl shutdown ：停止supervisord  </li><li>supervisorctl status ：查看监控进程的状态  </li><li>supervisorctl stop xxx ：停止xxx模块的进程  </li><li>supervisorctl start xxx ：启动xxx模块的进程  </li><li>supervisorctl restart xxx ：重启xxx模块的进程</li><li>supervisorctl stop all ：停止所有监控的进程  </li><li>supervisorctl update ：更新新的配置到supervisord（不会重启原来已运行的程序）  </li><li>supervisorctl reload ：载入所有配置文件，并按新的配置启动、管理所有进程（会重启原来已运行的程序）  </li></ul><p><strong>注意执行supervisorctl时可能会出现以下报错</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unix:///var/run/supervisor/supervisor.sock no such file</span><br></pre></td></tr></table></figure><p>这表示supervisord服务可能没有启动，需要先启动supervisord</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Supervisor&quot;&gt;&lt;a href=&quot;#Supervisor&quot; class=&quot;headerlink&quot; title=&quot;Supervisor&quot;&gt;&lt;/a&gt;Supervisor&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://supervisord.org/&quot;&gt;Supe</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Supervisor" scheme="http://example.com/tags/Supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Rsync+sersync实现实时同步</title>
    <link href="http://example.com/2021/09/01/Linux/Rsync/"/>
    <id>http://example.com/2021/09/01/Linux/Rsync/</id>
    <published>2021-09-01T14:16:38.000Z</published>
    <updated>2021-09-01T16:55:52.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h1><h2 id="rsync介绍"><a href="#rsync介绍" class="headerlink" title="rsync介绍"></a>rsync介绍</h2><p>Rsync 是一种快速且非常通用的文件复制工具。它可以在本地、通过任何远程 shell 复制到另一台主机或从远程 rsync 守护程序复制到/从另一个主机复制。它提供了大量选项来控制其行为的各个方面，并允许非常灵活地指定要复制的文件集。它以其增量传输算法而闻名，该算法通过仅发送源文件与目标中现有文件之间的差异来减少通过网络发送的数据量。Rsync 广泛用于备份和镜像，并作为日常使用的改进复制命令。<br>Rsync具有本地与远程两台主机之间的数据快速复制同步镜像、远程备份等功能，该功能类似scp，但是优于scp功能，还具有本地不同分区目录之间全量及增量复制数据。<br>Rsync同步数据镜像时，通过“quick check”算法，仅同步大小或最后修改时间发生变化的文件或目录，当然也可以根据权限，属主等属性变化的同步，所以可以实现快速同步。<br><strong>rsync 具有如下的基本特性：</strong>  </p><ol><li>可以镜像保存整个目录树和文件系统</li><li>可以很容易做到保持原来文件的权限、时间、软硬链接等</li><li>无须特殊权限即可安装</li><li>优化的流程，文件传输效率高</li><li>可以使用 rsh、ssh 方式来传输文件，当然也可以通过直接的 socket 连接</li><li>支持匿名传输，以方便进行网站镜象</li></ol><h1 id="sersync"><a href="#sersync" class="headerlink" title="sersync"></a>sersync</h1><h2 id="sersync介绍"><a href="#sersync介绍" class="headerlink" title="sersync介绍"></a>sersync介绍</h2><p>sersync是基于inotify开发的，类似于inotify-tools的工具，Sersync可以记录下被监听目录中发生变化的（包括增加、删除、修改）具体某一个文件或者某一个目录的名字，然后使用rsync同步的时候，只同步发生变化的文件或者目录，因此效率更高。<br>主要应用场景为数据体积大，并且文件很多。  </p><h1 id="Rsync-Sersync实时同步"><a href="#Rsync-Sersync实时同步" class="headerlink" title="Rsync+Sersync实时同步"></a>Rsync+Sersync实时同步</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>实验实现从将test1的文件同步到test2中  </p><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">部署服务</th></tr></thead><tbody><tr><td align="center">test1</td><td align="center">192.168.27.5</td><td align="center">Rsync client + Sersync server</td></tr><tr><td align="center">test2</td><td align="center">192.168.27.5</td><td align="center">Rsync server</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="rysnc-部署"><a href="#rysnc-部署" class="headerlink" title="rysnc 部署"></a>rysnc 部署</h2><p>在<strong>test1</strong>与<strong>test2</strong>中安装<strong>rsync</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y rsync</span><br></pre></td></tr></table></figure><h2 id="test2中的操作"><a href="#test2中的操作" class="headerlink" title="test2中的操作"></a>test2中的操作</h2><h3 id="Rsync-server配置"><a href="#Rsync-server配置" class="headerlink" title="Rsync server配置"></a>Rsync server配置</h3><p>[root@test2 ~]# vim /etc/rsyncd.conf  </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">log <span class="attr">file</span> = /var/log/rsyncd.log </span><br><span class="line"><span class="comment">#日志文件位置，启动rsync后自动产生这个文件，无需提前创建</span></span><br><span class="line">pid <span class="attr">file</span> = /var/run/rsyncd.pid  </span><br><span class="line"><span class="comment">#pid文件的存放位置</span></span><br><span class="line">lock <span class="attr">file</span> = /var/run/rsync.lock  </span><br><span class="line"><span class="comment">#支持max connections参数的锁文件</span></span><br><span class="line">secrets <span class="attr">file</span> = /etc/rsyncd.password  </span><br><span class="line"><span class="comment">#用户认证配置文件，里面保存用户名称和密码，后面会创建这个文件</span></span><br><span class="line"></span><br><span class="line"><span class="section">[backup]</span> </span><br><span class="line"><span class="comment">#自定义名称</span></span><br><span class="line"><span class="attr">path</span> = /home/backup/ </span><br><span class="line"><span class="comment">#rsync服务端数据目录路径 需要手动创建</span></span><br><span class="line"><span class="attr">comment</span> = backup </span><br><span class="line"><span class="comment">#模块名称与[backup]自定义名称相同</span></span><br><span class="line"><span class="attr">uid</span> = root </span><br><span class="line"><span class="comment">#设置rsync运行权限为root</span></span><br><span class="line"><span class="attr">gid</span> = root </span><br><span class="line"><span class="comment">#设置rsync运行权限为root</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">873</span>  </span><br><span class="line"><span class="comment">#默认端口</span></span><br><span class="line">use <span class="attr">chroot</span> = <span class="literal">no</span> </span><br><span class="line"><span class="comment">#默认为true，修改为no，增加对目录文件软连接的备份</span></span><br><span class="line">read <span class="attr">only</span> = <span class="literal">no</span>  </span><br><span class="line"><span class="comment">#设置rsync服务端文件为读写权限</span></span><br><span class="line"><span class="attr">list</span> = <span class="literal">no</span> </span><br><span class="line"><span class="comment">#不显示rsync服务端资源列表</span></span><br><span class="line">max <span class="attr">connections</span> = <span class="number">200</span> </span><br><span class="line"><span class="comment">#最大连接数</span></span><br><span class="line"><span class="attr">timeout</span> = <span class="number">600</span>  </span><br><span class="line"><span class="comment">#设置超时时间</span></span><br><span class="line">auth <span class="attr">users</span> = rsync_backup </span><br><span class="line"><span class="comment">#执行数据同步的用户名，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line">hosts <span class="attr">allow</span> = <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span>  </span><br><span class="line"><span class="comment">#允许进行数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line">hosts <span class="attr">deny</span> = <span class="number">0.0</span>.<span class="number">0.0</span>/<span class="number">32</span> </span><br><span class="line"><span class="comment">#禁止数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开</span></span><br></pre></td></tr></table></figure><h3 id="创建用户认证文件"><a href="#创建用户认证文件" class="headerlink" title="创建用户认证文件"></a>创建用户认证文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# vim /etc/rsyncd.password</span><br><span class="line">rsync_backup:123456789</span><br></pre></td></tr></table></figure><h3 id="修改密码文件权限"><a href="#修改密码文件权限" class="headerlink" title="修改密码文件权限"></a>修改密码文件权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# chmod 600 /etc/rsyncd.password</span><br></pre></td></tr></table></figure><h3 id="启动rsync"><a href="#启动rsync" class="headerlink" title="启动rsync"></a>启动rsync</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# rsync --daemon</span><br></pre></td></tr></table></figure><h3 id="查看服务是否启动"><a href="#查看服务是否启动" class="headerlink" title="查看服务是否启动"></a>查看服务是否启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# ps  axu |grep rsync</span><br><span class="line">[root@test2 ~]# netstat -nlp |grep 873</span><br></pre></td></tr></table></figure><h2 id="test1中的操作"><a href="#test1中的操作" class="headerlink" title="test1中的操作"></a>test1中的操作</h2><h3 id="test1中创建密码文件"><a href="#test1中创建密码文件" class="headerlink" title="test1中创建密码文件"></a>test1中创建密码文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]# vim  /etc/rsyncd.password</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure><h3 id="test1中修改密码文件权限"><a href="#test1中修改密码文件权限" class="headerlink" title="test1中修改密码文件权限"></a>test1中修改密码文件权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]# chmod 600 /etc/rsyncd.password</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="在test1中推送文件到test2"><a href="#在test1中推送文件到test2" class="headerlink" title="在test1中推送文件到test2"></a>在test1中推送文件到test2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 test1_backup]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r-- 1 root root 0 9月   2 00:04 test.txt</span><br><span class="line">[root@test1 test1_backup]# rsync -avzP test.txt  rsync_backup@192.168.27.6::backup --password-file=/etc/rsyncd.password</span><br><span class="line">sending incremental file list</span><br><span class="line">test.txt</span><br><span class="line">              0 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=0/1)</span><br><span class="line"></span><br><span class="line">sent 91 bytes  received 43 bytes  268.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h3 id="在test1中从test2中拉取文件"><a href="#在test1中从test2中拉取文件" class="headerlink" title="在test1中从test2中拉取文件"></a>在test1中从test2中拉取文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 test1_backup]# rsync -avzP  rsync_backup@192.168.27.6::backup /home/test1_backup --password-file=/etc/rsyncd.password</span><br><span class="line">receiving incremental file list</span><br><span class="line">test.txt</span><br><span class="line">              0 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=0/2)</span><br><span class="line"></span><br><span class="line">sent 50 bytes  received 122 bytes  344.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h2 id="sersync部署"><a href="#sersync部署" class="headerlink" title="sersync部署"></a>sersync部署</h2><p>在<strong>test1</strong>中部署sersync  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]# wget  https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/sersync/sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">[root@test1 ~]# mkdir /usr/local/sersync</span><br><span class="line">[root@test1 ~]# tar zxvf sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">[root@test1 ~]# mv GNU-Linux-x86  /usr/local/sersync</span><br><span class="line">[root@test1 ~]# cd /usr/local/sersync/GNU-Linux-x86</span><br><span class="line">[root@test1 GNU-Linux-x86]# cp confxml.xml confxml.xml.bak</span><br></pre></td></tr></table></figure><h3 id="修改-confxml-xml文件"><a href="#修改-confxml-xml文件" class="headerlink" title="修改 confxml.xml文件"></a>修改 <strong>confxml.xml</strong>文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">hostip</span>=<span class="string">&quot;localhost&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8008&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">host</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">debug</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span>     # 开启DUBUG模式 </span><br><span class="line">    <span class="tag">&lt;<span class="name">fileSystem</span> <span class="attr">xfs</span>=<span class="string">&quot;false&quot;</span>/&gt;</span>  # 开启xfs文件系统</span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>&gt;</span>     # 同步时忽略推送的文件(正则表达式),默认关闭 </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.svn&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.gz&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;^info/*&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;^static/*&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inotify</span>&gt;</span>     # 设置要监控的事件</span><br><span class="line">        <span class="tag">&lt;<span class="name">delete</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">createFolder</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">createFile</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">closeWrite</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">moveFrom</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">moveTo</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attrib</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">modify</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inotify</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sersync</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">localpath</span> <span class="attr">watch</span>=<span class="string">&quot;/home/test1_backup&quot;</span>&gt;</span>         # 本地监视目录路径</span><br><span class="line">            <span class="tag">&lt;<span class="name">remote</span> <span class="attr">ip</span>=<span class="string">&quot;192.168.27.6&quot;</span> <span class="attr">name</span>=<span class="string">&quot;backup&quot;</span>/&gt;</span>  #定义同步Server ip和模块</span><br><span class="line">            <span class="comment">&lt;!--&lt;remote ip=&quot;192.168.8.39&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;remote ip=&quot;192.168.8.40&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">localpath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rsync</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">commonParams</span> <span class="attr">params</span>=<span class="string">&quot;-artuz&quot;</span>/&gt;</span>   # rsync指令参数</span><br><span class="line">            <span class="tag">&lt;<span class="name">auth</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span> <span class="attr">users</span>=<span class="string">&quot;rsync_backup&quot;</span> <span class="attr">passwordfile</span>=<span class="string">&quot;/etc/rsyncd.password&quot;</span>/&gt;</span>  # rsync同步认证</span><br><span class="line">            <span class="tag">&lt;<span class="name">userDefinedPort</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">port</span>=<span class="string">&quot;874&quot;</span>/&gt;</span><span class="comment">&lt;!-- port=874 --&gt;</span>   # 设置rsync远程服务端口，非默认端口需要打开自定义(若开启rsync+ssh, 则这里需定义SSH端口)</span><br><span class="line">            <span class="tag">&lt;<span class="name">timeout</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">time</span>=<span class="string">&quot;100&quot;</span>/&gt;</span><span class="comment">&lt;!-- timeout=100 --&gt;</span>        # 设置超时时间</span><br><span class="line">            <span class="tag">&lt;<span class="name">ssh</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rsync</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">failLog</span> <span class="attr">path</span>=<span class="string">&quot;/tmp/rsync_fail_log.sh&quot;</span> <span class="attr">timeToExecute</span>=<span class="string">&quot;60&quot;</span>/&gt;</span><span class="comment">&lt;!--default every 60mins execute once--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">crontab</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">schedule</span>=<span class="string">&quot;600&quot;</span>&gt;</span><span class="comment">&lt;!--600mins--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">crontabfilter</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;*.php&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;info/*&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">crontabfilter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">crontab</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;command&quot;</span>/&gt;</span>    # 设置sersync传输后调用name指定的插件脚本，默认关闭</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sersync</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;command&quot;</span>&gt;</span>  # 插件脚本范例</span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">prefix</span>=<span class="string">&quot;/bin/sh&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;&quot;</span> <span class="attr">ignoreError</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>        <span class="comment">&lt;!--prefix /opt/tongbu/mmm.sh suffix--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.php&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.sh&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;socket&quot;</span>&gt;</span>  # 插件脚本范例</span><br><span class="line">        <span class="tag">&lt;<span class="name">localpath</span> <span class="attr">watch</span>=<span class="string">&quot;/opt/tongbu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">deshost</span> <span class="attr">ip</span>=<span class="string">&quot;192.168.138.20&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8009&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">localpath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;refreshCDN&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">localpath</span> <span class="attr">watch</span>=<span class="string">&quot;/data0/htdocs/cms.xoyo.com/site/&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">cdninfo</span> <span class="attr">domainname</span>=<span class="string">&quot;ccms.chinacache.com&quot;</span> <span class="attr">port</span>=<span class="string">&quot;80&quot;</span> <span class="attr">username</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">passwd</span>=<span class="string">&quot;xxxx&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">sendurl</span> <span class="attr">base</span>=<span class="string">&quot;http://pic.xoyo.com/cms&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">regexurl</span> <span class="attr">regex</span>=<span class="string">&quot;false&quot;</span> <span class="attr">match</span>=<span class="string">&quot;cms.xoyo.com/site([/a-zA-Z0-9]*).xoyo.com/images&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">localpath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="启动sersync"><a href="#启动sersync" class="headerlink" title="启动sersync"></a>启动sersync</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 GNU-Linux-x86]# /usr/local/sersync/GNU-Linux-x86/sersync2 -d -r -o /usr/local/sersync/GNU-Linux-x86/confxml.xml</span><br></pre></td></tr></table></figure><p>如果要停止直接kill掉进程即可  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;rsync&quot;&gt;&lt;a href=&quot;#rsync&quot; class=&quot;headerlink&quot; title=&quot;rsync&quot;&gt;&lt;/a&gt;rsync&lt;/h1&gt;&lt;h2 id=&quot;rsync介绍&quot;&gt;&lt;a href=&quot;#rsync介绍&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="rsync" scheme="http://example.com/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-08-01T16:22:23.000Z</published>
    <updated>2021-09-01T14:19:56.957Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/linux.png" alt="linux"></p><span id="more"></span><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="正则表达式的分类"><a href="#正则表达式的分类" class="headerlink" title="正则表达式的分类"></a>正则表达式的分类</h2><ol><li>基本的正则表达式（Basic Regular Expression 又叫Basic RegEx 简称BREs）  </li><li>扩展的正则表达式（Extended Regular Expression 又叫Extended RegEx 简称EREs）  </li><li>Perl的正则表达式（Perl Regular Expression 又叫Perl RegEx 简称PREs）  </li></ol><h2 id="基本组成部分"><a href="#基本组成部分" class="headerlink" title="基本组成部分"></a>基本组成部分</h2><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>\</td><td>转义符，将特殊字符进行转义，忽略其特殊意义</td><td>a.b匹配a.b，但不能匹配ajb，.被转义为特殊意义</td><td>\</td><td>\</td><td>\</td><td>\</td></tr><tr><td>^</td><td>匹配行首，awk中，^则是匹配字符串的开始</td><td>^tux匹配以tux开头的行</td><td>^</td><td>^</td><td>^</td><td>^</td></tr><tr><td>$</td><td>匹配行尾，awk中，$则是匹配字符串的结尾</td><td>tux$匹配以tux结尾的行</td><td>$</td><td>$</td><td>$</td><td>$</td></tr><tr><td>.</td><td>匹配除换行符\n之外的任意单个字符，awk则中可以</td><td>ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符</td><td>.</td><td>.</td><td>.</td><td>.</td></tr><tr><td>[ ]</td><td>匹配包含在[字符]之中的任意一个字符</td><td>coo[kl]可以匹配cook或cool</td><td>[ ]</td><td>[ ]</td><td>[ ]</td><td>[ ]</td></tr><tr><td>[^]</td><td>匹配[^字符]之外的任意一个字符</td><td>123[^45]不可以匹配1234或1235，1236、1237都可以</td><td>[^]</td><td>[^]</td><td>[^]</td><td>[^]</td></tr><tr><td>[-]</td><td>匹配[]中指定范围内的任意一个字符，要写成递增</td><td>[0-9]可以匹配1、2或3等其中任意一个数字</td><td>[-]</td><td>[-]</td><td>[-]</td><td>[-]</td></tr><tr><td>?</td><td>匹配之前的项1次或者0次</td><td>colou?r可以匹配color或者colour，不能匹配colouur</td><td>不支持</td><td>?</td><td>?</td><td>?</td></tr><tr><td>+</td><td>匹配之前的项1次或者多次</td><td>sa-6+匹配sa-6、sa-666，不能匹配sa-</td><td>不支持</td><td>+</td><td>+</td><td>+</td></tr><tr><td>*</td><td>匹配之前的项0次或者多次</td><td>co* l匹配cl、col、cool、coool等</td><td>*</td><td>*</td><td>*</td><td>*</td></tr><tr><td>( )</td><td>匹配表达式，创建一个用于匹配的子串</td><td>ma(tri)?匹配max或maxtrix</td><td>不支持</td><td>( )</td><td>( )</td><td>( )</td></tr><tr><td>{n}</td><td>匹配之前的项n次，n是可以为0的正整数</td><td>[0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]</td><td>不支持</td><td>{n}</td><td>{n}</td><td>{n}</td></tr><tr><td>{n,}</td><td>之前的项至少需要匹配n次</td><td>[0-9]{2,}匹配任意一个两位数或更多位数</td><td>不支持</td><td>{n,}</td><td>{n,}</td><td>{n,}</td></tr><tr><td>{n,m}</td><td>指定之前的项至少匹配n次，最多匹配m次，n&lt;=m</td><td>[0-9]{2,5}匹配从两位数到五位数之间的任意一个数字</td><td>不支持</td><td>{n,m}</td><td>{n,m}</td><td>{n,m}</td></tr><tr><td>|</td><td>交替匹配|两边的任意一项</td><td>ab(c|d)匹配abc或abd</td><td>不支持</td><td>|</td><td>|</td><td>|</td></tr></tbody></table><h2 id="POSIX字符类"><a href="#POSIX字符类" class="headerlink" title="POSIX字符类"></a>POSIX字符类</h2><p>POSIX字符类是一个形如[:…:]的特殊元序列（meta sequence），他可以用于匹配特定的字符范围。  </p><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>匹配任意一个字母或数字字符</td><td>[[:alnum:]]+</td><td>[:alnum:]</td><td>[:alnum:]</td><td>[:alnum:]</td><td>[:alnum:]</td></tr><tr><td>[:alpha:]</td><td>匹配任意一个字母字符（包括大小写字母）</td><td>[[:alpha:]]{4}</td><td>[:alpha:]</td><td>[:alpha:]</td><td>[:alpha:]</td><td>[:alpha:]</td></tr><tr><td>[:blank:]</td><td>空格与制表符（横向和纵向）</td><td>[[:blank:]]*</td><td>[:blank:]</td><td>[:blank:]</td><td>[:blank:]</td><td>[:blank:]</td></tr><tr><td>[:digit:]</td><td>匹配任意一个数字字符</td><td>[[:digit:]]?</td><td>[:digit:]</td><td>[:digit:]</td><td>[:digit:]</td><td>[:digit:]</td></tr><tr><td>[:lower:]</td><td>匹配小写字母</td><td>[[:lower:]]{5,}</td><td>[:lower:]</td><td>[:lower:]</td><td>[:lower:]</td><td>[:lower:]</td></tr><tr><td>[:upper:]</td><td>匹配大写字母</td><td>([[:upper:]]+)?</td><td>[:upper:]</td><td>[:upper:]</td><td>[:upper:]</td><td>[:upper:]</td></tr><tr><td>[:punct:]</td><td>匹配标点符号</td><td>[[:punct:]]</td><td>[:punct:]</td><td>[:punct:]</td><td>[:punct:]</td><td>[:punct:]</td></tr><tr><td>[:space:]</td><td>匹配一个包括换行符、回车等在内的所有空白符</td><td>[[:space:]]+</td><td>[:space:]</td><td>[:space:]</td><td>[:space:]</td><td>[:space:]</td></tr><tr><td>[:graph:]</td><td>匹配任何一个可以看得见的且可以打印的字符</td><td>[[:graph:]]</td><td>[:graph:]</td><td>[:graph:]</td><td>[:graph:]</td><td>[:graph:]</td></tr><tr><td>[:xdigit:]</td><td>任何一个十六进制数（即：0-9，a-f，A-F）</td><td>[[:xdigit:]]+</td><td>[:xdigit:]</td><td>[:xdigit:]</td><td>[:xdigit:]</td><td>[:xdigit:]</td></tr><tr><td>[:cntrl:]</td><td>任何一个控制字符（ASCII字符集中的前32个字符)</td><td>[[:cntrl:]]</td><td>[:cntrl:]</td><td>[:cntrl:]</td><td>[:cntrl:]</td><td>[:cntrl:]</td></tr><tr><td>[:print:]</td><td>任何一个可以打印的字符</td><td>[[:print:]]</td><td>[:print:]</td><td>[:print:]</td><td>[:print:]</td><td>[:print:]</td></tr></tbody></table><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>元字符（meta character）是一种Perl风格的正则表达式，只有一部分文本处理工具支持它，并不是所有的文本处理工具都支持。  </p><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>\b</td><td>单词边界</td><td>\bcool\b 匹配cool，不匹配coolant</td><td>\b</td><td>\b</td><td>\b</td><td>\b</td></tr><tr><td>\B</td><td>非单词边界</td><td>cool\B 匹配coolant，不匹配cool</td><td>\B</td><td>\B</td><td>\B</td><td>\B</td></tr><tr><td>\d</td><td>单个数字字符</td><td>b\db 匹配b2b，不匹配bcb</td><td>不支持</td><td>不支持</td><td>\d</td><td>\d</td></tr><tr><td>\D</td><td>单个非数字字符</td><td>b\Db 匹配bcb，不匹配b2b</td><td>不支持</td><td>不支持</td><td>\D</td><td>\D</td></tr><tr><td>\w</td><td>单个单词字符（字母、数字与_）</td><td>\w 匹配1或a，不匹配&amp;</td><td>\w</td><td>\w</td><td>\w</td><td>\w</td></tr><tr><td>\W</td><td>单个非单词字符</td><td>\W 匹配&amp;，不匹配1或a</td><td>\W</td><td>\W</td><td>\W</td><td>\W</td></tr><tr><td>\n</td><td>换行符</td><td>\n 匹配一个新行</td><td>不支持</td><td>不支持</td><td>\n</td><td>\n</td></tr><tr><td>\s</td><td>单个空白字符</td><td>x\sx 匹配x x，不匹配xx</td><td>不支持</td><td>不支持</td><td>\s</td><td>\s</td></tr><tr><td>\S</td><td>单个非空白字符</td><td>x\S\x 匹配xkx，不匹配xx</td><td>不支持</td><td>不支持</td><td>\S</td><td>\S</td></tr><tr><td>\r</td><td>回车</td><td>\r 匹配回车</td><td>不支持</td><td>不支持</td><td>\r</td><td>\r</td></tr><tr><td>\t</td><td>横向制表符</td><td>\t 匹配一个横向制表符</td><td>不支持</td><td>不支持</td><td>\t</td><td>\t</td></tr><tr><td>\v</td><td>垂直制表符</td><td>\v 匹配一个垂直制表符</td><td>不支持</td><td>不支持</td><td>\v</td><td>\v</td></tr><tr><td>\f</td><td>换页符</td><td>\f 匹配一个换页符</td><td>不支持</td><td>不支持</td><td>\f</td><td>\f</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/linux.png&quot; alt=&quot;linux&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习</title>
    <link href="http://example.com/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-07-31T06:47:19.000Z</published>
    <updated>2021-09-02T13:57:56.882Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/linux.png" alt="linux"></p><span id="more"></span><h1 id="Linux命令查看网站"><a href="#Linux命令查看网站" class="headerlink" title="Linux命令查看网站"></a>Linux命令查看网站</h1><p><a href="https://man.linuxde.net/">Linux命令大全</a><br><a href="http://linux.51yip.com/">Linux命令手册</a><br><a href="https://www.linuxcool.com/">Linux命令大全(手册)</a>  </p><h1 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h1><h2 id="文件及目录管理命令"><a href="#文件及目录管理命令" class="headerlink" title="文件及目录管理命令"></a>文件及目录管理命令</h2><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><p><strong>作用</strong>：创建目录<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-p</td><td>递归创建多级目录</td></tr><tr><td>-m</td><td>建立目录的同时设置目录的权限</td></tr><tr><td>-z</td><td>设置安全上下文</td></tr><tr><td>-v</td><td>显示目录的创建过程</td></tr></tbody></table><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p><strong>作用</strong>：删除<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>忽略不存在的文件，不会出现警告信息</td></tr><tr><td>-i</td><td>删除前会询问用户是否操作</td></tr><tr><td>-r/R</td><td>递归删除</td></tr><tr><td>-v</td><td>显示指令的详细执行过程</td></tr></tbody></table><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><p><strong>作用</strong>：移动文件、文件名重命名<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-i</td><td>若存在同名文件，则向用户询问是否覆盖</td></tr><tr><td>-f</td><td>覆盖已有文件时，不进行任何提示</td></tr><tr><td>-b</td><td>当文件存在时，覆盖前为其创建一个备份</td></tr><tr><td>-u</td><td>当源文件比目标文件新，或者目标文件不存在时，才执行移动此操作</td></tr></tbody></table><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p><strong>作用</strong>：复制文件<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>若目标文件已存在，则会直接覆盖原文件</td></tr><tr><td>-i</td><td>若目标文件已存在，则会询问是否覆盖</td></tr><tr><td>-p</td><td>保留源文件或目录的所有属性</td></tr><tr><td>-r</td><td>递归复制文件和目录</td></tr><tr><td>-d</td><td>当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接原始文件或目录</td></tr><tr><td>-l</td><td>对源文件建立硬连接，而非复制文件</td></tr><tr><td>-s</td><td>对源文件建立符号连接，而非复制文件</td></tr><tr><td>-b</td><td>覆盖已存在的文件目标前将目标文件备份</td></tr><tr><td>-v</td><td>详细显示cp命令执行的操作过程</td></tr><tr><td>-a</td><td>等价于“dpr”选项</td></tr></tbody></table><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><p><strong>功能</strong>：1.更新文件时间标签   2.创建空文件</p><h3 id="dd"><a href="#dd" class="headerlink" title="dd"></a>dd</h3><p><strong>作用</strong>：复制文件并对原文件的内容进行转换和格式化处理<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>bs=&lt;字节数&gt;</td><td>将 ibs（输入）与 obs（输出）设成指定的字节数；</td></tr><tr><td>cbs=&lt;字节数&gt;</td><td>转换时，每次只转换指定的字节数；</td></tr><tr><td>conv=&lt;关键字&gt;</td><td>指定文件转换的方式；</td></tr><tr><td>count=&lt;区块数&gt;</td><td>仅读取指定的区块数；</td></tr><tr><td>ibs=&lt;字节数&gt;</td><td>每次读取的字节数；</td></tr><tr><td>obs=&lt;字节数&gt;</td><td>每次输出的字节数；</td></tr><tr><td>of=&lt;文件&gt;</td><td>输出到文件；如果不指定of，默认就会将stdout作为默认输出。</td></tr><tr><td>if=&lt;文件&gt;</td><td>输入文件；如果不指定if，默认就会从stdin中读取输入。</td></tr><tr><td>seek=&lt;区块数&gt;</td><td>一开始输出时，跳过指定的区块数；</td></tr><tr><td>skip=&lt;区块数&gt;</td><td>一开始读取时，跳过指定的区块数；</td></tr></tbody></table><p><strong>示例</strong>：<br>以上命令可以看出dd命令来测试内存操作速度  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> dd <span class="keyword">if</span>=/dev/zero of=test.txt bs=5M count=1   <span class="comment">#/dev/zero 是一个字符设备，会不断返回0值字节（\0）。</span></span></span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">5242880字节(5.2 MB)已复制，0.0135829 秒，386 MB/秒</span><br><span class="line"><span class="meta">$</span><span class="bash"> du -sh test.txt</span> </span><br><span class="line">5.0M  test.txt</span><br></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><p><strong>作用</strong>：探测给定文件的类型<br><strong>常用参数</strong>：  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-b</td><td>列出辨识结果时，不显示文件名称</td></tr><tr><td>-i</td><td>显示MIME类别</td></tr></tbody></table><h2 id="查找文件及目录"><a href="#查找文件及目录" class="headerlink" title="查找文件及目录"></a>查找文件及目录</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p><strong>作用</strong>：查找文件及目录<br><strong>常用参数</strong>：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-amin &lt;分钟&gt;、-atime &lt;24小时数&gt;</td><td>访问时间,用户最近一次访问时间。</td></tr><tr><td>-cmin &lt;分钟&gt;、-ctime &lt;24小时数&gt;</td><td>修改时间,文件最后一次修改时间。</td></tr><tr><td>-mmin &lt;分钟&gt;、-mtime &lt;24小时数&gt;</td><td>变化时间,文件数据元（例如权限等）最后一次修改时间。</td></tr><tr><td>-name &lt;范本样式&gt;</td><td>指定字符串作为寻找文件或目录的范本样式，可使用正则表达式进行匹配</td></tr><tr><td>-iname &lt;范本样式&gt;</td><td>此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别</td></tr><tr><td>-size &lt;文件大小&gt;</td><td>查找符合指定的文件大小的文件</td></tr><tr><td>-type &lt;文件类型&gt;</td><td>只寻找符合指定的文件类型的文件</td></tr><tr><td>-empty</td><td>寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录</td></tr></tbody></table><p><strong>示例</strong>：<br><strong>根据文件或者正则表达式进行匹配</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在/home目录下查找以.txt结尾的文件名</span></span><br><span class="line">find /home -name &quot;*.txt&quot;</span><br><span class="line">find /home -iname &quot;*.txt&quot;  #忽略大小写</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当前目录及子目录下查找所有以.txt和.pdf结尾的文件</span></span><br><span class="line">find . \( -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot; \)</span><br><span class="line">find . -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 匹配文件路径或者文件</span></span><br><span class="line">find /usr/ -path &quot;*local*&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基于正则表达式匹配文件路径</span></span><br><span class="line">find . -regex &quot;.*\(\.txt\|\.pdf\)$&quot;</span><br><span class="line">find . -iregex &quot;.*\(\.txt\|\.pdf\)$&quot;</span><br></pre></td></tr></table></figure><p><strong>否定参数</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找出/home下不是以.txt结尾的文件</span></span><br><span class="line">find /home ! -name &quot;*.txt&quot;</span><br></pre></td></tr></table></figure><p><strong>根据文件类型进行搜索</strong><br><code>find . -type 类型参数</code>  </p><ul><li>f 普通文件  </li><li>l 符号连接</li><li>d 目录</li><li>c 字符设备</li><li>b 块设备</li><li>s 套接字</li><li>p 管道文件</li></ul><p><strong>根据文件时间戳进行搜索</strong><br><code>find . -type f 时间戳</code><br>UNIX/Linux文件系统每个文件都有三种时间戳：<br><strong>访问时间（-atime/天，-amin/分钟）</strong>：用户最近一次访问时间。<br><strong>修改时间（-mtime/天，-mmin/分钟）</strong>：文件最后一次修改时间。<br><strong>变化时间（-ctime/天，-cmin/分钟）</strong>：文件数据元（例如权限等）最后一次修改时间。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">搜索最近七天内被访问过的所有文件</span></span><br><span class="line">find . -type f -atime -7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索恰好在七天前被访问过的所有文件</span></span><br><span class="line">find . -type f -atime 7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索超过七天内被访问过的所有文件</span></span><br><span class="line">find . -type f -atime +7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索访问时间超过10分钟的所有文件</span></span><br><span class="line">find . -type f -amin +10</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">找出比file.log修改时间更长的所有文件</span></span><br><span class="line">find . -type f -newer file.log</span><br></pre></td></tr></table></figure><p><strong>根据文件大小进行匹配</strong><br><code>find . -type f -size 文件大小单元</code><br>文件大小单元：  </p><ul><li>b —— 块（512字节）  </li><li>c —— 字节  </li><li>w —— 字（2字节）  </li><li>k —— 千字节  </li><li>M —— 兆字节  </li><li>G —— 吉字节  </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 搜索大于10KB的文件</span></span><br><span class="line">find . -type f -size +10k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 搜索小于10KB的文件</span></span><br><span class="line">find . -type f -size -10k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索等于10KB的文件</span></span><br><span class="line">find . -type f -size 10k</span><br></pre></td></tr></table></figure><p><strong>删除匹配文件</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有.txt文件</span></span><br><span class="line">find . -type f -name &quot;*.txt&quot; -delete</span><br></pre></td></tr></table></figure><p><strong>借助exec选项与其他命令结合使用</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找出当前目录下所有root的文件，并把所有权更改为用户tom</span></span><br><span class="line">find .-type f -user root -exec chown tom &#123;&#125; \;    </span><br><span class="line"><span class="meta">#</span><span class="bash"> &#123;&#125; 用于与-<span class="built_in">exec</span>选项结合使用来匹配所有文件，然后会被替换为相应的文件名</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找出自己家目录下所有的.txt文件并删除</span></span><br><span class="line">find $HOME/. -name &quot;*.txt&quot; -ok rm &#123;&#125; \;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -ok和-<span class="built_in">exec</span>行为一样，不过它会给出提示，是否执行相应的操作。</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将30天前的.<span class="built_in">log</span>文件移动到old目录中</span></span><br><span class="line">find . -type f -mtime +30 -name &quot;*.log&quot; -exec cp &#123;&#125; old \;</span><br></pre></td></tr></table></figure><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><p><strong>作用</strong>：locate命令其实是find -name的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库<code>/var/lib/locatedb</code>，这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用<code>updatedb</code>命令，手动更新数据库。  </p><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p><strong>作用</strong>：连接文件并打印到标准输出设备上<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n</td><td>由1开始对所有输出的行数编号</td></tr><tr><td>-A</td><td>显示不可打印字符，行尾显示“$”</td></tr></tbody></table><h3 id="head"><a href="#head" class="headerlink" title="head"></a>head</h3><p><strong>作用</strong>：用于显示文件的开头的内容，默认显示头10行。<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n &lt;数字&gt;</td><td>指定显示头部内容的行数</td></tr><tr><td>-v</td><td>显示文件名</td></tr></tbody></table><h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3><p><strong>作用</strong>：用于显示文件的尾部内容，默认显示尾10行。<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>显示文件最新追加的内容。</td></tr><tr><td>-n &lt;数字&gt;</td><td>输出文件的尾部N（N位数字）行内容</td></tr><tr><td>-v</td><td>显示文件名</td></tr></tbody></table><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p><strong>作用</strong>：它以全屏幕的方式按页显示文本文件的内容<br><strong>按键说明</strong></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>按Space键</td><td>显示文本的下一屏内容。</td></tr><tr><td>按Enier键</td><td>只显示文本的下一行内容。</td></tr><tr><td>按斜线符/</td><td>接着输入一个模式，可以在文本中寻找下一个相匹配的模式。</td></tr><tr><td>按H键</td><td>显示帮助屏，该屏上有相关的帮助信息。</td></tr><tr><td>按B键</td><td>显示上一屏内容。</td></tr><tr><td>按Q键</td><td>退出rnore命令。</td></tr></tbody></table><h2 id="查找文件内容"><a href="#查找文件内容" class="headerlink" title="查找文件内容"></a>查找文件内容</h2><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p><strong>作用</strong>：能使用正则表达式搜索文本，并把匹配的行打印出来。<br><strong>常用参数</strong>：  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-v</td><td>反转查找</td></tr><tr><td>-r</td><td>递归搜索</td></tr><tr><td>-n</td><td>列出所有的匹配行，显示行号</td></tr><tr><td>-E</td><td>正则表达式，与egrep 效果相同</td></tr><tr><td>-i</td><td>忽略字符大小写</td></tr><tr><td>-e</td><td>匹配多个，grep -e “a” -e “b”</td></tr><tr><td>-q</td><td>静默输出，命令运行成功返回0，失败则返回非0值</td></tr><tr><td>-A &lt; n &gt;</td><td>匹配文本之后n行</td></tr><tr><td>-B &lt; n &gt;</td><td>匹配文本之前n行</td></tr><tr><td>-C &lt; n &gt;</td><td>匹配文本前后各n行</td></tr></tbody></table><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h2><h3 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h3><p><strong>作用</strong>：xargs能够处理管道或者stdin并将其转换成特定命令的命令参数  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/linux.png&quot; alt=&quot;linux&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
</feed>
