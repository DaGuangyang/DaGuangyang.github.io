<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaGuang</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-13T03:31:40.254Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>DaGuang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-08-01T16:22:23.000Z</published>
    <updated>2021-08-13T03:31:40.254Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/linux.png" alt="linux"></p><span id="more"></span><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="正则表达式的分类"><a href="#正则表达式的分类" class="headerlink" title="正则表达式的分类"></a>正则表达式的分类</h2><ol><li>基本的正则表达式（Basic Regular Expression 又叫Basic RegEx 简称BREs）  </li><li>扩展的正则表达式（Extended Regular Expression 又叫Extended RegEx 简称EREs）  </li><li>Perl的正则表达式（Perl Regular Expression 又叫Perl RegEx 简称PREs）  </li></ol><h2 id="基本组成部分"><a href="#基本组成部分" class="headerlink" title="基本组成部分"></a>基本组成部分</h2><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>\</td><td>转义符，将特殊字符进行转义，忽略其特殊意义</td><td>a.b匹配a.b，但不能匹配ajb，.被转义为特殊意义</td><td>\</td><td>\</td><td>\</td><td>\</td></tr><tr><td>^</td><td>匹配行首，awk中，^则是匹配字符串的开始</td><td>^tux匹配以tux开头的行</td><td>^</td><td>^</td><td>^</td><td>^</td></tr><tr><td>$</td><td>匹配行尾，awk中，$则是匹配字符串的结尾</td><td>tux$匹配以tux结尾的行</td><td>$</td><td>$</td><td>$</td><td>$</td></tr><tr><td>.</td><td>匹配除换行符\n之外的任意单个字符，awk则中可以</td><td>ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符</td><td>.</td><td>.</td><td>.</td><td>.</td></tr><tr><td>[ ]</td><td>匹配包含在[字符]之中的任意一个字符</td><td>coo[kl]可以匹配cook或cool</td><td>[ ]</td><td>[ ]</td><td>[ ]</td><td>[ ]</td></tr><tr><td>[^]</td><td>匹配[^字符]之外的任意一个字符</td><td>123[^45]不可以匹配1234或1235，1236、1237都可以</td><td>[^]</td><td>[^]</td><td>[^]</td><td>[^]</td></tr><tr><td>[-]</td><td>匹配[]中指定范围内的任意一个字符，要写成递增</td><td>[0-9]可以匹配1、2或3等其中任意一个数字</td><td>[-]</td><td>[-]</td><td>[-]</td><td>[-]</td></tr><tr><td>?</td><td>匹配之前的项1次或者0次</td><td>colou?r可以匹配color或者colour，不能匹配colouur</td><td>不支持</td><td>?</td><td>?</td><td>?</td></tr><tr><td>+</td><td>匹配之前的项1次或者多次</td><td>sa-6+匹配sa-6、sa-666，不能匹配sa-</td><td>不支持</td><td>+</td><td>+</td><td>+</td></tr><tr><td>*</td><td>匹配之前的项0次或者多次</td><td>co* l匹配cl、col、cool、coool等</td><td>*</td><td>*</td><td>*</td><td>*</td></tr><tr><td>( )</td><td>匹配表达式，创建一个用于匹配的子串</td><td>ma(tri)?匹配max或maxtrix</td><td>不支持</td><td>( )</td><td>( )</td><td>( )</td></tr><tr><td>{n}</td><td>匹配之前的项n次，n是可以为0的正整数</td><td>[0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]</td><td>不支持</td><td>{n}</td><td>{n}</td><td>{n}</td></tr><tr><td>{n,}</td><td>之前的项至少需要匹配n次</td><td>[0-9]{2,}匹配任意一个两位数或更多位数</td><td>不支持</td><td>{n,}</td><td>{n,}</td><td>{n,}</td></tr><tr><td>{n,m}</td><td>指定之前的项至少匹配n次，最多匹配m次，n&lt;=m</td><td>[0-9]{2,5}匹配从两位数到五位数之间的任意一个数字</td><td>不支持</td><td>{n,m}</td><td>{n,m}</td><td>{n,m}</td></tr><tr><td>|</td><td>交替匹配|两边的任意一项</td><td>ab(c|d)匹配abc或abd</td><td>不支持</td><td>|</td><td>|</td><td>|</td></tr></tbody></table><h2 id="POSIX字符类"><a href="#POSIX字符类" class="headerlink" title="POSIX字符类"></a>POSIX字符类</h2><p>POSIX字符类是一个形如[:…:]的特殊元序列（meta sequence），他可以用于匹配特定的字符范围。  </p><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>匹配任意一个字母或数字字符</td><td>[[:alnum:]]+</td><td>[:alnum:]</td><td>[:alnum:]</td><td>[:alnum:]</td><td>[:alnum:]</td></tr><tr><td>[:alpha:]</td><td>匹配任意一个字母字符（包括大小写字母）</td><td>[[:alpha:]]{4}</td><td>[:alpha:]</td><td>[:alpha:]</td><td>[:alpha:]</td><td>[:alpha:]</td></tr><tr><td>[:blank:]</td><td>空格与制表符（横向和纵向）</td><td>[[:blank:]]*</td><td>[:blank:]</td><td>[:blank:]</td><td>[:blank:]</td><td>[:blank:]</td></tr><tr><td>[:digit:]</td><td>匹配任意一个数字字符</td><td>[[:digit:]]?</td><td>[:digit:]</td><td>[:digit:]</td><td>[:digit:]</td><td>[:digit:]</td></tr><tr><td>[:lower:]</td><td>匹配小写字母</td><td>[[:lower:]]{5,}</td><td>[:lower:]</td><td>[:lower:]</td><td>[:lower:]</td><td>[:lower:]</td></tr><tr><td>[:upper:]</td><td>匹配大写字母</td><td>([[:upper:]]+)?</td><td>[:upper:]</td><td>[:upper:]</td><td>[:upper:]</td><td>[:upper:]</td></tr><tr><td>[:punct:]</td><td>匹配标点符号</td><td>[[:punct:]]</td><td>[:punct:]</td><td>[:punct:]</td><td>[:punct:]</td><td>[:punct:]</td></tr><tr><td>[:space:]</td><td>匹配一个包括换行符、回车等在内的所有空白符</td><td>[[:space:]]+</td><td>[:space:]</td><td>[:space:]</td><td>[:space:]</td><td>[:space:]</td></tr><tr><td>[:graph:]</td><td>匹配任何一个可以看得见的且可以打印的字符</td><td>[[:graph:]]</td><td>[:graph:]</td><td>[:graph:]</td><td>[:graph:]</td><td>[:graph:]</td></tr><tr><td>[:xdigit:]</td><td>任何一个十六进制数（即：0-9，a-f，A-F）</td><td>[[:xdigit:]]+</td><td>[:xdigit:]</td><td>[:xdigit:]</td><td>[:xdigit:]</td><td>[:xdigit:]</td></tr><tr><td>[:cntrl:]</td><td>任何一个控制字符（ASCII字符集中的前32个字符)</td><td>[[:cntrl:]]</td><td>[:cntrl:]</td><td>[:cntrl:]</td><td>[:cntrl:]</td><td>[:cntrl:]</td></tr><tr><td>[:print:]</td><td>任何一个可以打印的字符</td><td>[[:print:]]</td><td>[:print:]</td><td>[:print:]</td><td>[:print:]</td><td>[:print:]</td></tr></tbody></table><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>元字符（meta character）是一种Perl风格的正则表达式，只有一部分文本处理工具支持它，并不是所有的文本处理工具都支持。  </p><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>\b</td><td>单词边界</td><td>\bcool\b 匹配cool，不匹配coolant</td><td>\b</td><td>\b</td><td>\b</td><td>\b</td></tr><tr><td>\B</td><td>非单词边界</td><td>cool\B 匹配coolant，不匹配cool</td><td>\B</td><td>\B</td><td>\B</td><td>\B</td></tr><tr><td>\d</td><td>单个数字字符</td><td>b\db 匹配b2b，不匹配bcb</td><td>不支持</td><td>不支持</td><td>\d</td><td>\d</td></tr><tr><td>\D</td><td>单个非数字字符</td><td>b\Db 匹配bcb，不匹配b2b</td><td>不支持</td><td>不支持</td><td>\D</td><td>\D</td></tr><tr><td>\w</td><td>单个单词字符（字母、数字与_）</td><td>\w 匹配1或a，不匹配&amp;</td><td>\w</td><td>\w</td><td>\w</td><td>\w</td></tr><tr><td>\W</td><td>单个非单词字符</td><td>\W 匹配&amp;，不匹配1或a</td><td>\W</td><td>\W</td><td>\W</td><td>\W</td></tr><tr><td>\n</td><td>换行符</td><td>\n 匹配一个新行</td><td>不支持</td><td>不支持</td><td>\n</td><td>\n</td></tr><tr><td>\s</td><td>单个空白字符</td><td>x\sx 匹配x x，不匹配xx</td><td>不支持</td><td>不支持</td><td>\s</td><td>\s</td></tr><tr><td>\S</td><td>单个非空白字符</td><td>x\S\x 匹配xkx，不匹配xx</td><td>不支持</td><td>不支持</td><td>\S</td><td>\S</td></tr><tr><td>\r</td><td>回车</td><td>\r 匹配回车</td><td>不支持</td><td>不支持</td><td>\r</td><td>\r</td></tr><tr><td>\t</td><td>横向制表符</td><td>\t 匹配一个横向制表符</td><td>不支持</td><td>不支持</td><td>\t</td><td>\t</td></tr><tr><td>\v</td><td>垂直制表符</td><td>\v 匹配一个垂直制表符</td><td>不支持</td><td>不支持</td><td>\v</td><td>\v</td></tr><tr><td>\f</td><td>换页符</td><td>\f 匹配一个换页符</td><td>不支持</td><td>不支持</td><td>\f</td><td>\f</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/linux.png&quot; alt=&quot;linux&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习</title>
    <link href="http://example.com/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-07-31T06:47:19.000Z</published>
    <updated>2021-08-02T11:30:45.376Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/linux.png" alt="linux"></p><span id="more"></span><h1 id="Linux命令查看网站"><a href="#Linux命令查看网站" class="headerlink" title="Linux命令查看网站"></a>Linux命令查看网站</h1><p><a href="https://man.linuxde.net/">Linux命令大全</a><br><a href="http://linux.51yip.com/">Linux命令手册</a><br><a href="https://www.linuxcool.com/">Linux命令大全(手册)</a>  </p><h1 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h1><h2 id="文件及目录管理命令"><a href="#文件及目录管理命令" class="headerlink" title="文件及目录管理命令"></a>文件及目录管理命令</h2><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><p><strong>作用</strong>：创建目录<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-p</td><td>递归创建多级目录</td></tr><tr><td>-m</td><td>建立目录的同时设置目录的权限</td></tr><tr><td>-z</td><td>设置安全上下文</td></tr><tr><td>-v</td><td>显示目录的创建过程</td></tr></tbody></table><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p><strong>作用</strong>：删除<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>忽略不存在的文件，不会出现警告信息</td></tr><tr><td>-i</td><td>删除前会询问用户是否操作</td></tr><tr><td>-r/R</td><td>递归删除</td></tr><tr><td>-v</td><td>显示指令的详细执行过程</td></tr></tbody></table><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><p><strong>作用</strong>：移动文件、文件名重命名<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-i</td><td>若存在同名文件，则向用户询问是否覆盖</td></tr><tr><td>-f</td><td>覆盖已有文件时，不进行任何提示</td></tr><tr><td>-b</td><td>当文件存在时，覆盖前为其创建一个备份</td></tr><tr><td>-u</td><td>当源文件比目标文件新，或者目标文件不存在时，才执行移动此操作</td></tr></tbody></table><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p><strong>作用</strong>：复制文件<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>若目标文件已存在，则会直接覆盖原文件</td></tr><tr><td>-i</td><td>若目标文件已存在，则会询问是否覆盖</td></tr><tr><td>-p</td><td>保留源文件或目录的所有属性</td></tr><tr><td>-r</td><td>递归复制文件和目录</td></tr><tr><td>-d</td><td>当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接原始文件或目录</td></tr><tr><td>-l</td><td>对源文件建立硬连接，而非复制文件</td></tr><tr><td>-s</td><td>对源文件建立符号连接，而非复制文件</td></tr><tr><td>-b</td><td>覆盖已存在的文件目标前将目标文件备份</td></tr><tr><td>-v</td><td>详细显示cp命令执行的操作过程</td></tr><tr><td>-a</td><td>等价于“dpr”选项</td></tr></tbody></table><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><p><strong>功能</strong>：1.更新文件时间标签   2.创建空文件</p><h3 id="dd"><a href="#dd" class="headerlink" title="dd"></a>dd</h3><p><strong>作用</strong>：复制文件并对原文件的内容进行转换和格式化处理<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>bs=&lt;字节数&gt;</td><td>将 ibs（输入）与 obs（输出）设成指定的字节数；</td></tr><tr><td>cbs=&lt;字节数&gt;</td><td>转换时，每次只转换指定的字节数；</td></tr><tr><td>conv=&lt;关键字&gt;</td><td>指定文件转换的方式；</td></tr><tr><td>count=&lt;区块数&gt;</td><td>仅读取指定的区块数；</td></tr><tr><td>ibs=&lt;字节数&gt;</td><td>每次读取的字节数；</td></tr><tr><td>obs=&lt;字节数&gt;</td><td>每次输出的字节数；</td></tr><tr><td>of=&lt;文件&gt;</td><td>输出到文件；如果不指定of，默认就会将stdout作为默认输出。</td></tr><tr><td>if=&lt;文件&gt;</td><td>输入文件；如果不指定if，默认就会从stdin中读取输入。</td></tr><tr><td>seek=&lt;区块数&gt;</td><td>一开始输出时，跳过指定的区块数；</td></tr><tr><td>skip=&lt;区块数&gt;</td><td>一开始读取时，跳过指定的区块数；</td></tr></tbody></table><p><strong>示例</strong>：<br>以上命令可以看出dd命令来测试内存操作速度  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> dd <span class="keyword">if</span>=/dev/zero of=test.txt bs=5M count=1   <span class="comment">#/dev/zero 是一个字符设备，会不断返回0值字节（\0）。</span></span></span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">5242880字节(5.2 MB)已复制，0.0135829 秒，386 MB/秒</span><br><span class="line"><span class="meta">$</span><span class="bash"> du -sh test.txt</span> </span><br><span class="line">5.0M  test.txt</span><br></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><p><strong>作用</strong>：探测给定文件的类型<br><strong>常用参数</strong>：  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-b</td><td>列出辨识结果时，不显示文件名称</td></tr><tr><td>-i</td><td>显示MIME类别</td></tr></tbody></table><h2 id="查找文件及目录"><a href="#查找文件及目录" class="headerlink" title="查找文件及目录"></a>查找文件及目录</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p><strong>作用</strong>：查找文件及目录<br><strong>常用参数</strong>：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-amin &lt;分钟&gt;、-atime &lt;24小时数&gt;</td><td>访问时间,用户最近一次访问时间。</td></tr><tr><td>-cmin &lt;分钟&gt;、-ctime &lt;24小时数&gt;</td><td>修改时间,文件最后一次修改时间。</td></tr><tr><td>-mmin &lt;分钟&gt;、-mtime &lt;24小时数&gt;</td><td>变化时间,文件数据元（例如权限等）最后一次修改时间。</td></tr><tr><td>-name &lt;范本样式&gt;</td><td>指定字符串作为寻找文件或目录的范本样式，可使用正则表达式进行匹配</td></tr><tr><td>-iname &lt;范本样式&gt;</td><td>此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别</td></tr><tr><td>-size &lt;文件大小&gt;</td><td>查找符合指定的文件大小的文件</td></tr><tr><td>-type &lt;文件类型&gt;</td><td>只寻找符合指定的文件类型的文件</td></tr><tr><td>-empty</td><td>寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录</td></tr></tbody></table><p><strong>示例</strong>：<br><strong>根据文件或者正则表达式进行匹配</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在/home目录下查找以.txt结尾的文件名</span></span><br><span class="line">find /home -name &quot;*.txt&quot;</span><br><span class="line">find /home -iname &quot;*.txt&quot;  #忽略大小写</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当前目录及子目录下查找所有以.txt和.pdf结尾的文件</span></span><br><span class="line">find . \( -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot; \)</span><br><span class="line">find . -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 匹配文件路径或者文件</span></span><br><span class="line">find /usr/ -path &quot;*local*&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基于正则表达式匹配文件路径</span></span><br><span class="line">find . -regex &quot;.*\(\.txt\|\.pdf\)$&quot;</span><br><span class="line">find . -iregex &quot;.*\(\.txt\|\.pdf\)$&quot;</span><br></pre></td></tr></table></figure><p><strong>否定参数</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找出/home下不是以.txt结尾的文件</span></span><br><span class="line">find /home ! -name &quot;*.txt&quot;</span><br></pre></td></tr></table></figure><p><strong>根据文件类型进行搜索</strong><br><code>find . -type 类型参数</code>  </p><ul><li>f 普通文件  </li><li>l 符号连接</li><li>d 目录</li><li>c 字符设备</li><li>b 块设备</li><li>s 套接字</li><li>p 管道文件</li></ul><p><strong>根据文件时间戳进行搜索</strong><br><code>find . -type f 时间戳</code><br>UNIX/Linux文件系统每个文件都有三种时间戳：<br><strong>访问时间（-atime/天，-amin/分钟）</strong>：用户最近一次访问时间。<br><strong>修改时间（-mtime/天，-mmin/分钟）</strong>：文件最后一次修改时间。<br><strong>变化时间（-ctime/天，-cmin/分钟）</strong>：文件数据元（例如权限等）最后一次修改时间。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">搜索最近七天内被访问过的所有文件</span></span><br><span class="line">find . -type f -atime -7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索恰好在七天前被访问过的所有文件</span></span><br><span class="line">find . -type f -atime 7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索超过七天内被访问过的所有文件</span></span><br><span class="line">find . -type f -atime +7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索访问时间超过10分钟的所有文件</span></span><br><span class="line">find . -type f -amin +10</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">找出比file.log修改时间更长的所有文件</span></span><br><span class="line">find . -type f -newer file.log</span><br></pre></td></tr></table></figure><p><strong>根据文件大小进行匹配</strong><br><code>find . -type f -size 文件大小单元</code><br>文件大小单元：  </p><ul><li>b —— 块（512字节）  </li><li>c —— 字节  </li><li>w —— 字（2字节）  </li><li>k —— 千字节  </li><li>M —— 兆字节  </li><li>G —— 吉字节  </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 搜索大于10KB的文件</span></span><br><span class="line">find . -type f -size +10k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 搜索小于10KB的文件</span></span><br><span class="line">find . -type f -size -10k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索等于10KB的文件</span></span><br><span class="line">find . -type f -size 10k</span><br></pre></td></tr></table></figure><p><strong>删除匹配文件</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有.txt文件</span></span><br><span class="line">find . -type f -name &quot;*.txt&quot; -delete</span><br></pre></td></tr></table></figure><p><strong>借助exec选项与其他命令结合使用</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找出当前目录下所有root的文件，并把所有权更改为用户tom</span></span><br><span class="line">find .-type f -user root -exec chown tom &#123;&#125; \;    </span><br><span class="line"><span class="meta">#</span><span class="bash"> &#123;&#125; 用于与-<span class="built_in">exec</span>选项结合使用来匹配所有文件，然后会被替换为相应的文件名</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找出自己家目录下所有的.txt文件并删除</span></span><br><span class="line">find $HOME/. -name &quot;*.txt&quot; -ok rm &#123;&#125; \;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -ok和-<span class="built_in">exec</span>行为一样，不过它会给出提示，是否执行相应的操作。</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将30天前的.<span class="built_in">log</span>文件移动到old目录中</span></span><br><span class="line">find . -type f -mtime +30 -name &quot;*.log&quot; -exec cp &#123;&#125; old \;</span><br></pre></td></tr></table></figure><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><p><strong>作用</strong>：locate命令其实是find -name的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库<code>/var/lib/locatedb</code>，这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用<code>updatedb</code>命令，手动更新数据库。  </p><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p><strong>作用</strong>：连接文件并打印到标准输出设备上<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n</td><td>由1开始对所有输出的行数编号</td></tr><tr><td>-A</td><td>显示不可打印字符，行尾显示“$”</td></tr></tbody></table><h3 id="head"><a href="#head" class="headerlink" title="head"></a>head</h3><p><strong>作用</strong>：用于显示文件的开头的内容，默认显示头10行。<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n &lt;数字&gt;</td><td>指定显示头部内容的行数</td></tr><tr><td>-v</td><td>显示文件名</td></tr></tbody></table><h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3><p><strong>作用</strong>：用于显示文件的尾部内容，默认显示尾10行。<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>显示文件最新追加的内容。</td></tr><tr><td>-n &lt;数字&gt;</td><td>输出文件的尾部N（N位数字）行内容</td></tr><tr><td>-v</td><td>显示文件名</td></tr></tbody></table><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p><strong>作用</strong>：它以全屏幕的方式按页显示文本文件的内容<br><strong>按键说明</strong></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>按Space键</td><td>显示文本的下一屏内容。</td></tr><tr><td>按Enier键</td><td>只显示文本的下一行内容。</td></tr><tr><td>按斜线符/</td><td>接着输入一个模式，可以在文本中寻找下一个相匹配的模式。</td></tr><tr><td>按H键</td><td>显示帮助屏，该屏上有相关的帮助信息。</td></tr><tr><td>按B键</td><td>显示上一屏内容。</td></tr><tr><td>按Q键</td><td>退出rnore命令。</td></tr></tbody></table><h2 id="查找文件内容"><a href="#查找文件内容" class="headerlink" title="查找文件内容"></a>查找文件内容</h2><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p><strong>作用</strong>：能使用正则表达式搜索文本，并把匹配的行打印出来。<br><strong>常用参数</strong>：  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-v</td><td>反转查找</td></tr><tr><td>-r</td><td>递归搜索</td></tr><tr><td>-n</td><td>列出所有的匹配行，显示行号</td></tr><tr><td>-E</td><td>正则表达式，与egrep 效果相同</td></tr><tr><td>-i</td><td>忽略字符大小写</td></tr><tr><td>-e</td><td>匹配多个，grep -e “a” -e “b”</td></tr><tr><td>-q</td><td>静默输出，命令运行成功返回0，失败则返回非0值</td></tr><tr><td>-A &lt; n &gt;</td><td>匹配文本之后n行</td></tr><tr><td>-B &lt; n &gt;</td><td>匹配文本之前n行</td></tr><tr><td>-C &lt; n &gt;</td><td>匹配文本前后各n行</td></tr></tbody></table><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h2><h3 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h3><p><strong>作用</strong>：xargs能够处理管道或者stdin并将其转换成特定命令的命令参数  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/linux.png&quot; alt=&quot;linux&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
  </entry>
  
</feed>
