<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaGuang</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-24T04:47:29.876Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>DaGuang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>3-zabbix快速配置</title>
    <link href="http://example.com/2022/03/28/zabbix/3-zabbix%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/03/28/zabbix/3-zabbix%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/</id>
    <published>2022-03-28T01:02:33.000Z</published>
    <updated>2022-05-24T04:47:29.876Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/03/25/BC4LOAv1sp89SnY.jpg" alt="zabbix.jpg">  </p><span id="more"></span><h1 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h1><p>完整的配置流程：主机组–&gt;主机–&gt;监控项组–&gt;监控项–&gt;触发器–&gt;故障–&gt;处理动作–&gt;用户组–&gt;用户–&gt;告警方式–&gt;日记审计。  </p><h1 id="主机组"><a href="#主机组" class="headerlink" title="主机组"></a>主机组</h1><h2 id="添加主机组"><a href="#添加主机组" class="headerlink" title="添加主机组"></a>添加主机组</h2><p><img src="/2022/03/28/zabbix/3-zabbix%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/%E6%B7%BB%E5%8A%A0%E4%B8%BB%E6%9C%BA%E7%BB%84.png" alt="添加主机组"><br>添加主机组的相关信息保存在数据库中  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> zabbix.hstgrp;</span><br></pre></td></tr></table></figure><h2 id="层级主机组分组"><a href="#层级主机组分组" class="headerlink" title="层级主机组分组"></a>层级主机组分组</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/03/25/BC4LOAv1sp89SnY.jpg&quot; alt=&quot;zabbix.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="zabbix" scheme="http://example.com/categories/zabbix/"/>
    
    
    <category term="zabbix安装" scheme="http://example.com/tags/zabbix%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>2-zabbix部署</title>
    <link href="http://example.com/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/</id>
    <published>2022-03-25T14:22:21.000Z</published>
    <updated>2022-05-24T04:47:55.054Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/03/25/BC4LOAv1sp89SnY.jpg" alt="zabbix.jpg">  </p><span id="more"></span><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>系统版本为centos 7.6，按照<a href="https://www.zabbix.com/documentation/5.2/zh/manual/installation/install_from_packages/rhel_centos">zabbix指导文档</a> 进行安装。注意使用不同版本系统进行安装时有所不同，需参考官方指导文档进行部署安装。  </p><h1 id="server端部署"><a href="#server端部署" class="headerlink" title="server端部署"></a>server端部署</h1><h2 id="添加-Zabbix-软件仓库"><a href="#添加-Zabbix-软件仓库" class="headerlink" title="添加 Zabbix 软件仓库"></a>添加 Zabbix 软件仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>执行完成后在/etc/yum.repos.d会生成一个zabbix.repo文件。在安装zabbix是除了zabbix.repo，也要准备好centos 7的相关安装源，以便安装zabbix需要的依赖包。  </p><h2 id="启用可选-rpms-的软件仓库"><a href="#启用可选-rpms-的软件仓库" class="headerlink" title="启用可选 rpms 的软件仓库"></a>启用可选 rpms 的软件仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum -y install yum-utils</span><br><span class="line"># yum-config-manager --enable rhel-7-server-optional-rpms</span><br></pre></td></tr></table></figure><h2 id="安装-Server-前端-agent"><a href="#安装-Server-前端-agent" class="headerlink" title="安装 Server/前端/agent"></a>安装 Server/前端/agent</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br></pre></td></tr></table></figure><h2 id="安装MariaDB-Mysql数据库"><a href="#安装MariaDB-Mysql数据库" class="headerlink" title="安装MariaDB/Mysql数据库"></a>安装MariaDB/Mysql数据库</h2><p>这一步可以选择安装MariaDB或者Mysql数据库  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y mariadb mariadb-server</span><br><span class="line"># systemctl start mariadb</span><br><span class="line"># systemctl enable mariadb</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># mysql_secure_installation  #数据库配置</span><br><span class="line"></span><br><span class="line">Enter current password for root (enter for none):  # 输入数据库超级管理员root的密码(注意不是系统root的密码)，第一次进入还没有设置密码则直接回车</span><br><span class="line"></span><br><span class="line">Set root password? [Y/n]  # 设置密码，y</span><br><span class="line"></span><br><span class="line">New password:  # 新密码</span><br><span class="line">Re-enter new password:  # 再次输入密码</span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n]  # 移除匿名用户， y</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? [Y/n]  # 拒绝root远程登录，n，不管y/n，都会拒绝root远程登录</span><br><span class="line"></span><br><span class="line">Remove test database and access to it? [Y/n]  # 删除test数据库，y：删除。n：不删除，数据库中会有一个test数据库，一般不需要</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n]  # 重新加载权限表，y。或者重启服务也许</span><br></pre></td></tr></table></figure><h2 id="初始化zabbix-database"><a href="#初始化zabbix-database" class="headerlink" title="初始化zabbix database"></a>初始化zabbix database</h2><ul><li>创建初识数据库  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure></li><li>导入初始架构和数据，系统将提示您输入新创建的密码。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置zabbix-server"><a href="#配置zabbix-server" class="headerlink" title="配置zabbix server"></a>配置zabbix server</h2><p>配置server端，编辑/etc/zabbix/zabbix_server.conf。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#服务监听的端口，保持默认即可。</span><br><span class="line"># ListenPort=10051</span><br><span class="line"></span><br><span class="line">#当服务端有多个IP时，通过该参数指定通过哪个IP采集被监控主机的数据</span><br><span class="line"># SourceIP=</span><br><span class="line"></span><br><span class="line">#记录日志的方式，system表示将日志发往syslog；file表示使用指定的文件当做日志文件（默认方式）；console表示将日志发往控制台</span><br><span class="line"># LogType=file</span><br><span class="line"></span><br><span class="line">#当LogType=file时，通过该参数指定日志文件</span><br><span class="line">LogFile=/var/log/zabbix/zabbix_server.log</span><br><span class="line"></span><br><span class="line">#设定当日志文件达到多大时进行自动滚动，设置为0时不进行滚动。</span><br><span class="line">LogFileSize=0</span><br><span class="line"></span><br><span class="line">#定义日志文件的详细程度，即日志级别</span><br><span class="line">DebugLevel=3</span><br><span class="line"></span><br><span class="line">#zabbix服务端程序PID路径 </span><br><span class="line">PidFile=/var/run/zabbix/zabbix_server.pid</span><br><span class="line"></span><br><span class="line">#zabbix数据库所在IP</span><br><span class="line"># DBHost=localhost</span><br><span class="line"></span><br><span class="line">#zabbix数据库名称</span><br><span class="line">DBName=zabbix</span><br><span class="line"></span><br><span class="line">#zabbix数据库用户名</span><br><span class="line">DBUser=zabbix</span><br><span class="line"></span><br><span class="line">#zabbix数据库用户对应的密码</span><br><span class="line">DBPassword=123456</span><br><span class="line"></span><br><span class="line">#zabbix所在数据库服务监听的端口号</span><br><span class="line"># DBPort=3306</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在进行配置时只将zabbix数据库用户名对应的密码填写即可使用，并将zabbix server 启动，并将其设置为开机启动。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-server.service</span><br><span class="line">systemctl enable zabbix-server.service</span><br></pre></td></tr></table></figure><h2 id="zabbix-web配置"><a href="#zabbix-web配置" class="headerlink" title="zabbix web配置"></a>zabbix web配置</h2><p>安装完成后需要对zabbix web进行配置,其配置文件为<code>/etc/httpd/conf.d/zabbix.conf</code>。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#将该时区修改</span><br><span class="line"># php_value date.timezone Europe/Riga</span><br><span class="line">                 ||</span><br><span class="line">                 ||</span><br><span class="line">                 \/</span><br><span class="line">#将时区修改为亚洲上海，并将注释符去除 </span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><p>启动httpd服务，并将其设置为开机启动。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd.service</span><br><span class="line">systemctl enable httpd.service</span><br></pre></td></tr></table></figure><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><p>使用浏览器登录 zabbix—web_IP/zabbix。  </p><ul><li><p>前端安装向导<br><img src="/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/zabbix-web%E7%95%8C%E9%9D%A21.png" alt="zabbix web界面1">  </p></li><li><p>自动检测安装环境是否满足需要,全部满足后点击下一步<br><img src="/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/%E8%87%AA%E5%8A%A8%E6%A3%80%E6%B5%8B%E7%8E%AF%E5%A2%83.png" alt="自动检测环境">  </p></li><li><p>配置数据库连接<br><img src="/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5.png" alt="配置数据库连接">  </p></li><li><p>配置zabbix server信息<br><img src="/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/%E9%85%8D%E7%BD%AEzabbixserver%E4%BF%A1%E6%81%AF.png" alt="配置zabbixserver信息"></p></li><li><p>确定概要信息正确，点击下一步  </p></li><li><p>初始化配置完成<br>并有提示：配置信息保存到了<code>/etc/zabbix/web/zabbix.conf.php</code>中，若需要修改可对该文件中参数进行修改。<br><img src="/2022/03/25/zabbix/2-zabbix%E9%83%A8%E7%BD%B2/%E5%AE%8C%E6%88%90.png" alt="完成">  </p></li></ul><h2 id="登录zabbix-web界面"><a href="#登录zabbix-web界面" class="headerlink" title="登录zabbix web界面"></a>登录zabbix web界面</h2><p>默认管理员用户名为：Admin，密码为：zabbix  </p><h2 id="修改界面语言"><a href="#修改界面语言" class="headerlink" title="修改界面语言"></a>修改界面语言</h2><p>点击红框中的图标，修改language选项。</p><ol><li><p>若选项中无Chinese(zh_CN)选项<br>修改zabbix web的配置文件<code>/usr/share/zabbix/include/locales.inc.php</code>中zh_CN属性行中<code>display</code>修改为true  </p></li><li><p>若将界面修改为中文后，有文字出现乱码<br>可以在windows系统C:\Windows\Fonts（win7）中，选择一个字体，将该字体的后缀名修改为<strong>小写ttf</strong>，将其放置在zabbix字体文件下中，并修改<code>/usr/share/zabbix/include/defines.inc.php</code>配置文件（<code>define(&#39;ZBX_FONTPATH&#39;,                          realpath(&#39;XXXXXXXX&#39;));</code>可以看到字体文件的路径）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#将两处的 graphfort 修改为 MSYH（MSYH为刚刚放置的字体文件的文件名，这里我使用的是黑体所以文件名为MSYH）</span><br><span class="line">define(&#x27;ZBX_FONT_NAME&#x27;, &#x27;MSYH&#x27;);</span><br><span class="line">define(&#x27;ZBX_GRAPH_FONT_NAME&#x27;,           &#x27;MSYH&#x27;);</span><br></pre></td></tr></table></figure><p>修改完成后，重启刷新网页就可以正常显示文字了。  </p></li></ol><h1 id="zabbix-agent"><a href="#zabbix-agent" class="headerlink" title="zabbix agent"></a>zabbix agent</h1><p>上面介绍过zabbix agent部署在被监控主机。下面进行安装  </p><h2 id="安装zabbix-agent"><a href="#安装zabbix-agent" class="headerlink" title="安装zabbix agent"></a>安装zabbix agent</h2><p>agent端的安装比较简单。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zabbix-agent zabbix-sender</span><br></pre></td></tr></table></figure><h2 id="配置agent"><a href="#配置agent" class="headerlink" title="配置agent"></a>配置agent</h2><p>修改<code>/etc/zabbix/zabbix_agentd.conf</code>，下面主要介绍上一章中agent的主动模式与被动模式。  </p><ul><li><p>Passive checks related<br>该模块为agent被动模式相关的参数  </p><ul><li>Server<br>允许拉取agent端数据的IP，也就是server端IP；多个IP时使用逗号将IP分隔  </li><li>ListenPort<br>被动模式所监听端口号，默认为10050，即server端访问10050端口拉取数据  </li><li>ListenIP<br>被动模式所监听的IP，默认为0.0.0.0，即为监听本地的所有的IP  </li><li>StartAgents<br>指定预计生成的agent进程数量  </li></ul></li><li><p>Active checks related<br>该模块为主动模式的相关参数  </p><ul><li>ServerActive<br>主动推送到server端的IP；多个IP时使用逗号将IP分隔  </li><li>Hostname<br>当前主机的主机名</li><li>RefreshActiveChecks<br>agent端每多少秒主动推送数据</li></ul></li></ul><p>这里我们只要将Server、ServerActive、Hostname修改即可。然后重启agent进程，并将其设置为开机启动。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-agent.service</span><br><span class="line">systemctl enable zabbix-agent.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/03/25/BC4LOAv1sp89SnY.jpg&quot; alt=&quot;zabbix.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="zabbix" scheme="http://example.com/categories/zabbix/"/>
    
    
    <category term="zabbix安装" scheme="http://example.com/tags/zabbix%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>1.zabbix概念</title>
    <link href="http://example.com/2022/03/25/zabbix/1-zabbix%E6%A6%82%E5%BF%B5/"/>
    <id>http://example.com/2022/03/25/zabbix/1-zabbix%E6%A6%82%E5%BF%B5/</id>
    <published>2022-03-25T12:45:46.000Z</published>
    <updated>2022-05-24T04:47:58.233Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/03/25/BC4LOAv1sp89SnY.jpg" alt="zabbix.jpg">  </p><span id="more"></span><p>&emsp;&emsp;zabbix可以监控的硬件理论上是与我们的业务有关的硬件资源都可以被监控，比如：主机、交换机、路由器等。这就要求zabbix可以与这些监控对象能够进行通信。  </p><h2 id="zabbix支持的通信方式"><a href="#zabbix支持的通信方式" class="headerlink" title="zabbix支持的通信方式"></a>zabbix支持的通信方式</h2><ul><li>agent<br>通过专用的代理程序进行监控，与常见的master/agent模型类似，如果被监控对象支持对应的agent，推荐首先该形式。  </li><li>ssh/telnet<br>通过远程控制协议进行通讯，比如：ssh、telnet。  </li><li>SNMP<br>通过SNMP协议与被监控对象进行通信，SNMNP协议的全称是“简单网络管理协议”。  </li><li>IPMI<br>通过IPMI接口进行监控，我们可以通过标准的IPMI硬件接口，监控被监控对象的物理特征，比如电压，温度，风扇状态，电源状态等。  </li><li>JMX<br>JMX即java管理扩展，监控JVM时，可以使用这种方法也是很不错的。<br><img src="/2022/03/25/zabbix/1-zabbix%E6%A6%82%E5%BF%B5/%E4%B8%8E%E7%9B%91%E6%8E%A7%E8%AE%BE%E5%A4%87%E7%9A%84%E9%80%9A%E8%AE%AF%E6%96%B9%E5%BC%8F.png" alt="通信方式">  </li></ul><p>&emsp;&emsp;当监控规模变得庞大时，可能有成千上万台设备需要监控时。zabbix支持分布式监控，我们可以把所有的被监控对象分成不同的区域，每个区域中设置一台代理主机，区域内的每个被监控对象的信息被agent采集，提交给代理主机，在这个区域内，在理主机的作用就相当于是zabbix server，我们将代理主机为zabbix proxy，代理主机再将收集到的监控对象的信息统一提交给真正的zabbix server处理，这样zabbix proxy分摊了zabbix server的压力，还能通过统一的监控入口，监控所有的对象。  </p><h2 id="zabbix组件"><a href="#zabbix组件" class="headerlink" title="zabbix组件"></a>zabbix组件</h2><ul><li>zabbix agent<br>部署在被监控主机上，负责被监控主机的数据，并加数据发送给zabbix server。</li><li>zabbix server<br>负责接受agent发送的报告信息，并且负责组织配置信息、统计信息、操作数据等。</li><li>zabbix database<br>用于存储所有zabbix的配置信息、监控数据的数据库。</li><li>zabbix web<br>zabbix的web界面，管理员通过web界面管理zabbix配置以及查看zabbix相关监控信息，可以单独部署在独立的服务器上。  </li><li>zabbix proxy<br>可选组件，用于分布式监控环境中，zabbix proxy代表server端，完成局部区域内的信息收集，最终统一发往server端。采用中间代理将大大提高监控服务器端的处理速度，从而支撑构建大型分布式监控环境，从架构上支持异地多机房的需求。  </li></ul><h2 id="zabbix工作模式"><a href="#zabbix工作模式" class="headerlink" title="zabbix工作模式"></a>zabbix工作模式</h2><p>&emsp;&emsp;agent端会将采集完的数据主动发送给server端，这种模式称之为<strong>主动模式</strong>（对于agent端来说是主动的）；agent端也可以不发送数据，而是等待server端来拉取数据，这种模式称之为<strong>被动模式</strong>。一般来说，被动模式对监控控制端服务器的开销较大，适合小规模的监控环境；主动模式对监控控制端服务器的开销较小，适合大规模的监控环境。<br>&emsp;&emsp;可以在<strong>agent端使用zabbix_sender</strong>工具，测试是否能够向server端发送数据。<br>&emsp;&emsp;可以在<strong>server端使用zabbix_get</strong>工具，测试是否能够向agent端发送数据。<br>&emsp;&emsp;两种模式可以同时存在，并不会冲突。  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/03/25/BC4LOAv1sp89SnY.jpg&quot; alt=&quot;zabbix.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="zabbix" scheme="http://example.com/categories/zabbix/"/>
    
    
    <category term="zabbix概念" scheme="http://example.com/tags/zabbix%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>性能分析</title>
    <link href="http://example.com/2022/03/24/Linux/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/03/24/Linux/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</id>
    <published>2022-03-24T03:07:45.000Z</published>
    <updated>2022-05-24T04:49:39.830Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h2 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h2><h3 id="物理内存与虚拟内存的区别"><a href="#物理内存与虚拟内存的区别" class="headerlink" title="物理内存与虚拟内存的区别"></a>物理内存与虚拟内存的区别</h3><h2 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h2><p>安装sysstat</p><h2 id="dstat"><a href="#dstat" class="headerlink" title="dstat"></a>dstat</h2><p>安装sysstat</p><h2 id="iotop"><a href="#iotop" class="headerlink" title="iotop"></a>iotop</h2><p>安装iotop</p><h2 id="pidstat"><a href="#pidstat" class="headerlink" title="pidstat"></a>pidstat</h2><p>安装sysstat</p><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><h2 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h2><p>安装htop</p><h2 id="mpstat"><a href="#mpstat" class="headerlink" title="mpstat"></a>mpstat</h2><p>安装sysstat</p><h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><h2 id="strace"><a href="#strace" class="headerlink" title="strace"></a>strace</h2><p>安装strace</p><h2 id="uptime"><a href="#uptime" class="headerlink" title="uptime"></a>uptime</h2><h2 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h2><h2 id="perf"><a href="#perf" class="headerlink" title="perf"></a>perf</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="vmstat" scheme="http://example.com/tags/vmstat/"/>
    
    <category term="iostat" scheme="http://example.com/tags/iostat/"/>
    
    <category term="dstat" scheme="http://example.com/tags/dstat/"/>
    
    <category term="iotop" scheme="http://example.com/tags/iotop/"/>
    
    <category term="pidstat" scheme="http://example.com/tags/pidstat/"/>
    
    <category term="top" scheme="http://example.com/tags/top/"/>
    
    <category term="htop" scheme="http://example.com/tags/htop/"/>
    
    <category term="mpstat" scheme="http://example.com/tags/mpstat/"/>
    
    <category term="netstat" scheme="http://example.com/tags/netstat/"/>
    
    <category term="ps" scheme="http://example.com/tags/ps/"/>
    
    <category term="strace" scheme="http://example.com/tags/strace/"/>
    
    <category term="uptime" scheme="http://example.com/tags/uptime/"/>
    
    <category term="lsof" scheme="http://example.com/tags/lsof/"/>
    
    <category term="perf" scheme="http://example.com/tags/perf/"/>
    
  </entry>
  
  <entry>
    <title>YAML基础</title>
    <link href="http://example.com/2022/03/24/YAML/YAML%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2022/03/24/YAML/YAML%E5%9F%BA%E7%A1%80/</id>
    <published>2022-03-24T02:38:40.000Z</published>
    <updated>2022-05-24T04:48:55.349Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/03/24/9bBLo4WtTsJpyAu.png" alt="YAML.png">  </p><span id="more"></span><h1 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h1><p>YAML不是一种标记语言，是一种表示数据序列化的格式。<br>可以使用<a href="http://nodeca.github.io/js-yaml/"> nodeca.github.io/js-yaml/ </a> 来进行学习  </p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ul><li>大小写敏感  </li><li>使用缩进表示层级关系  </li><li>缩进不允许使用tab，只允许空格  </li><li>缩进的空格数不重要，只要相同层级的元素左对齐即可  </li><li>‘#’表示注释  </li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">%YAML</span> <span class="number">1.2</span> <span class="comment">#表示遵循YAML的版本号</span></span><br><span class="line"><span class="string">---</span> <span class="comment">#表示一个新的文件</span></span><br><span class="line"><span class="attr">my:</span> <span class="comment">#对象嵌套</span></span><br><span class="line"> <span class="attr">name :</span> <span class="string">nike</span></span><br><span class="line"> <span class="attr">age :</span> <span class="type">!!str</span> <span class="number">10</span>     <span class="comment">#使用两个感叹号，强制转换数据类型</span></span><br><span class="line"> <span class="attr">score:</span> <span class="type">!!float</span> <span class="number">13.0</span></span><br><span class="line"> <span class="attr">bool :</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">children :</span> <span class="string">~</span>   <span class="comment">#~表示null</span></span><br><span class="line"> <span class="attr">brithday :</span> <span class="number">1996-04-20 12:00:00</span></span><br><span class="line"> <span class="attr">number :</span> <span class="number">1.34e+3</span></span><br><span class="line"> <span class="attr">interest:</span> <span class="comment">#数组</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">basketball</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">football</span></span><br><span class="line"> <span class="attr">friends:</span> <span class="comment">#数组对象</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">name:ming</span></span><br><span class="line">     <span class="string">age:15</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">name:hong</span></span><br><span class="line">     <span class="string">age:14</span></span><br><span class="line"> <span class="attr">relations:</span> <span class="comment">#对象</span></span><br><span class="line">   <span class="attr">father :</span> <span class="string">foo1</span></span><br><span class="line">   <span class="attr">monther :</span> <span class="string">foo2</span></span><br><span class="line"><span class="attr">comment:</span> <span class="comment">#表示一个字符串</span></span><br><span class="line">   <span class="string">a</span></span><br><span class="line">   <span class="string">b</span></span><br><span class="line">   <span class="string">c</span></span><br><span class="line">   <span class="string">d</span></span><br><span class="line"><span class="attr">comment1 :</span> <span class="string">&gt;</span> <span class="comment">#‘&gt;’表示字符串尾部换行</span></span><br><span class="line">   <span class="string">a</span></span><br><span class="line">   <span class="string">b</span></span><br><span class="line">   <span class="string">c</span></span><br><span class="line">   <span class="string">d</span></span><br><span class="line"><span class="attr">comment2:</span> <span class="string">|</span>  <span class="comment">#‘|’表示每一行尾部都换行</span></span><br><span class="line">   <span class="string">a</span></span><br><span class="line">   <span class="string">b</span></span><br><span class="line">   <span class="string">c</span></span><br><span class="line">   <span class="string">d</span></span><br><span class="line"><span class="attr">father:</span> <span class="string">&amp;father_info</span> <span class="comment">#定义指针</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">foo1</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">40</span></span><br><span class="line"><span class="attr">monther:</span> <span class="meta">&amp;monther_info</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">foo2</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">39</span></span><br><span class="line"><span class="attr">monitor:</span> </span><br><span class="line">  <span class="attr">father:</span> <span class="string">*father_info</span>  <span class="comment">#使用指针</span></span><br><span class="line">  <span class="attr">monther:</span> <span class="meta">*monther_info</span></span><br><span class="line"><span class="string">...</span> <span class="comment">#表示文件结束</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/03/24/9bBLo4WtTsJpyAu.png&quot; alt=&quot;YAML.png&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="YAML" scheme="http://example.com/categories/YAML/"/>
    
    
    <category term="YAML" scheme="http://example.com/tags/YAML/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机配置本地源</title>
    <link href="http://example.com/2022/03/20/Linux/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E6%BA%90/"/>
    <id>http://example.com/2022/03/20/Linux/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E6%BA%90/</id>
    <published>2022-03-19T18:48:51.000Z</published>
    <updated>2022-05-24T04:50:48.603Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h2 id="1-确保虚拟机加载了本地镜像"><a href="#1-确保虚拟机加载了本地镜像" class="headerlink" title="1.确保虚拟机加载了本地镜像"></a>1.确保虚拟机加载了本地镜像</h2><p><img src="/2022/03/20/Linux/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E6%BA%90/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E9%95%9C%E5%83%8F.png" alt="虚拟机加载本地镜像"></p><h2 id="2-手动挂载镜像"><a href="#2-手动挂载镜像" class="headerlink" title="2.手动挂载镜像"></a>2.手动挂载镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/cdrom</span><br><span class="line">mount /dev/cdrom /mnt/cdrom</span><br></pre></td></tr></table></figure><h2 id="3-配置源文件"><a href="#3-配置源文件" class="headerlink" title="3.配置源文件"></a>3.配置源文件</h2><p>/etc/yum.repos.d/local.repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[local]</span><br><span class="line">name=local - repo</span><br><span class="line">baseurl=file:///mnt/cdrom</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><p><strong>[serid]</strong> : 仓库名，可自定义，但不能重复<br><strong>name</strong> ：随意起<br><strong>baseurl</strong>：指定yum源所在文件，软件包所在文件<br><strong>enabled</strong>：是否启用，1启用，0不启用<br><strong>gpgcheck</strong>：否进行gpg校验<br><strong>gpgkey</strong>：后面接的是gpgkey的地址，如果前面定义gpgcheck=1的话</p><h2 id="4-为保证下次重启后还能够正常使用本地源，将-dev-cdrom设置开机挂载即可"><a href="#4-为保证下次重启后还能够正常使用本地源，将-dev-cdrom设置开机挂载即可" class="headerlink" title="4.为保证下次重启后还能够正常使用本地源，将/dev/cdrom设置开机挂载即可"></a>4.为保证下次重启后还能够正常使用本地源，将/dev/cdrom设置开机挂载即可</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="本地源" scheme="http://example.com/tags/%E6%9C%AC%E5%9C%B0%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux启动管理</title>
    <link href="http://example.com/2022/03/15/Linux/Linux%E5%90%AF%E5%8A%A8%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2022/03/15/Linux/Linux%E5%90%AF%E5%8A%A8%E7%AE%A1%E7%90%86/</id>
    <published>2022-03-15T08:05:03.000Z</published>
    <updated>2022-05-24T04:50:04.727Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>文本三剑客</title>
    <link href="http://example.com/2021/12/25/Linux/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2/"/>
    <id>http://example.com/2021/12/25/Linux/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2/</id>
    <published>2021-12-24T16:24:36.000Z</published>
    <updated>2022-05-24T04:49:32.414Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h1 id="文本三剑客之grep"><a href="#文本三剑客之grep" class="headerlink" title="文本三剑客之grep"></a>文本三剑客之grep</h1><p>grep家族总共有三个：<strong>grep</strong>、<strong>egrep</strong>、<strong>fgrep</strong>  </p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>grep [option] pattern file  </p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">-a</td><td align="center">不要忽略二进制的数据</td></tr><tr><td align="center">-A &lt;显示行数n&gt;</td><td align="center">除了显示符合范本样式的那一列之外，并显示该行之后n行的内容</td></tr><tr><td align="center">-B &lt;显示行数n&gt;</td><td align="center">除了显示符合样式的那一行之外，并显示该行之前n行的内容</td></tr><tr><td align="center">-c</td><td align="center">计算符合样式的列数</td></tr><tr><td align="center">-C &lt;显示行数n&gt;</td><td align="center">除了显示符合样式的那一行之外，并显示该行之前后n行的内容</td></tr><tr><td align="center">-E</td><td align="center">将样式为扩展的正则表达式来使用，相当于egrep</td></tr><tr><td align="center">-i</td><td align="center">忽略大小写</td></tr><tr><td align="center">-o</td><td align="center">只显示符合匹配的部分</td></tr><tr><td align="center">-q</td><td align="center">不显示任何信息，在脚本中判断时使用</td></tr><tr><td align="center">-v</td><td align="center">显示不包含匹配文本的所有行</td></tr><tr><td align="center">-n</td><td align="center">在显示符合样式的那一行之前，标示出该行的列数编号</td></tr><tr><td align="center">-r</td><td align="center">以递归的方式查找符合条件的文件</td></tr></tbody></table><h1 id="文本三剑客之awk"><a href="#文本三剑客之awk" class="headerlink" title="文本三剑客之awk"></a>文本三剑客之awk</h1><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><p><code>awk [option] &#39;BEGIN&#123; commands &#125; pattern &#123; commands &#125; END&#123; commands &#125;&#39;</code><br>第一段：开始块（可选），关键字 BEGIN 必须大写，读输入文件之前执行的代码段，只在开始时执行一次，一般是在开始块中初始化一些变量<br>第二段：主体块（必须），主循环执行输入文件的代码段，每输入一行都执行一次，主体之前可以使用正则表达式进行过滤行，只对符合表达式的行执行主体块。<br>第三段：结束块（可选），关键字END必须大写，与开始块类似  </p><h2 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h2><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">-F</td><td align="center">指定文件字段分隔符，相当于内建变量FS</td></tr><tr><td align="center">-v var=value</td><td align="center">定义变量，一个-v只能定义一个变量</td></tr></tbody></table><h2 id="内建变量"><a href="#内建变量" class="headerlink" title="内建变量"></a>内建变量</h2><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">$n</td><td align="center">当前记录的第n个字段，字段间由FS分隔</td></tr><tr><td align="center">$0</td><td align="center">当前输入的完成行</td></tr><tr><td align="center">NR</td><td align="center">当前处理行的行号，从1开始</td></tr><tr><td align="center">FNR</td><td align="center">各文件分别计数的行号</td></tr><tr><td align="center">FILENAME</td><td align="center">当前文件的文件名</td></tr><tr><td align="center">FS</td><td align="center">字段分隔符,将输入的每一行以FS进行分割</td></tr><tr><td align="center">RS</td><td align="center">记录分隔符,将对象文件以RS划分每一行</td></tr><tr><td align="center">OFS</td><td align="center">输出字段分隔符，默认值与输入字段分隔符一致</td></tr><tr><td align="center">ORS</td><td align="center">输出记录分隔符(默认值是一个换行符)</td></tr><tr><td align="center">IGNORECASE</td><td align="center">忽略如果为真，则进行忽略大小写的匹配，可以将该参数直接定义为</td></tr><tr><td align="center">NF</td><td align="center">字段的数目</td></tr></tbody></table><h2 id="使用正则，字符串匹配"><a href="#使用正则，字符串匹配" class="headerlink" title="使用正则，字符串匹配"></a>使用正则，字符串匹配</h2><p>在主体块前使用正则表达式，<code>~</code>表示正则表达式开始，若不指定第几段，该<code>~</code>可以省略，<code>/ /</code>表示要匹配的正则表达式  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打印第一段中有v字符的行以及行号</span></span><br><span class="line">awk &#x27;$1 ~ /v/ &#123;print NR,$0&#125;&#x27; test.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 忽略大小写进行匹配</span></span><br><span class="line">awk &#x27;BEGIN&#123; IGNORECASE=1 &#125; /P/ &#123;print $0&#125;&#x27; test.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 反向匹配</span></span><br><span class="line">awk &#x27;$1 !~ /p/ &#123;print NR,$0&#125;&#x27; test.txt</span><br><span class="line">awk &#x27;!/p/ &#123;print NR,$0&#125;&#x27; test.txt</span><br></pre></td></tr></table></figure><h2 id="条件语句与循环"><a href="#条件语句与循环" class="headerlink" title="条件语句与循环"></a>条件语句与循环</h2><h3 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ( ) &#123;&#125; else if () &#123;&#125; else &#123;&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断行号是否为10，</span></span><br><span class="line">awk &#x27;&#123;if (NR==10)&#123;print NR,$0&#125; else &#123;print NR,&quot;NO&quot;&#125;&#125;&#x27; test.txt</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for (i = 1; i &lt;= 5; ++i) print i </span><br></pre></td></tr></table></figure><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i=1 ; while (i &lt; 100) &#123;print i;++i&#125;</span><br></pre></td></tr></table></figure><h1 id="文本三剑客之sed"><a href="#文本三剑客之sed" class="headerlink" title="文本三剑客之sed"></a>文本三剑客之sed</h1><h2 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h2><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">-n</td><td align="center">只有被sed处理过的行才会被列出来</td></tr><tr><td align="center">-i</td><td align="center">直接对原文件进行修改</td></tr><tr><td align="center">-r</td><td align="center">支持扩展正则表达式</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="grep" scheme="http://example.com/tags/grep/"/>
    
  </entry>
  
  <entry>
    <title>Cobbler自动化部署</title>
    <link href="http://example.com/2021/09/23/Linux/Cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2021/09/23/Linux/Cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</id>
    <published>2021-09-23T11:40:15.000Z</published>
    <updated>2022-05-24T04:50:41.272Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/23/Linux/Cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/Cobbler.png" alt="cobbler">  </p><span id="more"></span><h2 id="cobbler安装"><a href="#cobbler安装" class="headerlink" title="cobbler安装"></a>cobbler安装</h2><p>虚拟机网卡使用建议使用NAT模式，并且将NAT模式的DHCP服务关闭。<br><img src="/2021/09/23/Linux/Cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/DHCP%E6%9C%8D%E5%8A%A1.png" alt="DHCP服务">  </p><ol><li><strong>环境准备</strong><br>将主机的防火墙和selinux关闭。  </li><li><strong>安装cobbler</strong><br>这里使用阿里镜像站中的epel源进行安装。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cobbler cobbler-web tftp-server dhcp httpd xinetd</span><br><span class="line">systemctl start httpd cobblerd</span><br><span class="line">systemctl enable httpd cobblerd</span><br></pre></td></tr></table></figure></li><li><strong>查看安装后的相关文件</strong>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/etc/cobbler                  # 配置文件目录</span><br><span class="line">/etc/cobbler/settings         # cobbler主配置文件，这个文件是YAML格式，Cobbler是python写的程序。</span><br><span class="line">/etc/cobbler/dhcp.template    # DHCP服务的配置模板</span><br><span class="line">/etc/cobbler/tftpd.template   # tftp服务的配置模板</span><br><span class="line">/etc/cobbler/rsync.template   # rsync服务的配置模板</span><br><span class="line">/etc/cobbler/iso              # iso模板配置文件目录 </span><br><span class="line">/etc/cobbler/pxe              # pxe模板文件目录</span><br><span class="line">/etc/cobbler/power            # 电源的配置文件目录</span><br><span class="line">/etc/cobbler/users.conf       # Web服务授权配置文件</span><br><span class="line">/etc/cobbler/users.digest     # 用于web访问的用户名密码配置文件</span><br><span class="line">/etc/cobbler/dnsmasq.template # DNS服务的配置模板</span><br><span class="line">/etc/cobbler/modules.conf     # Cobbler模块配置文件</span><br><span class="line">/var/lib/cobbler              # Cobbler数据目录</span><br><span class="line">/var/lib/cobbler/config       # 配置文件</span><br><span class="line">/var/lib/cobbler/kickstarts   # 默认存放kickstart文件</span><br><span class="line">/var/lib/cobbler/loaders      # 存放的各种引导程序</span><br><span class="line">/var/www/cobbler              # 系统安装镜像目录</span><br><span class="line">/var/www/cobbler/ks_mirror    # 导入的系统镜像列表</span><br><span class="line">/var/www/cobbler/images       # 导入的系统镜像启动文件</span><br><span class="line">/var/www/cobbler/repo_mirror  # yum源存储目录</span><br><span class="line">/var/log/cobbler              # 日志目录</span><br><span class="line">/var/log/cobbler/install.log  # 客户端系统安装日志</span><br><span class="line">/var/log/cobbler/cobbler.log  # cobbler日志</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置cobbler"><a href="#配置cobbler" class="headerlink" title="配置cobbler"></a>配置cobbler</h2><ol><li><strong>检查cobbler</strong>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">~]# cobbler check</span><br><span class="line">The following are potential configuration items that you may want to fix:</span><br><span class="line"></span><br><span class="line">1 : The &#x27;server&#x27; field in /etc/cobbler/settings must be set to something other than localhost, or kickstarting features will not work.  This should be a resolvable hostname or IP for the boot server as reachable by all machines that will use it.</span><br><span class="line">2 : For PXE to be functional, the &#x27;next_server&#x27; field in /etc/cobbler/settings must be set to something other than 127.0.0.1, and should match the IP of the boot server on the PXE network.</span><br><span class="line">3 : change &#x27;disable&#x27; to &#x27;no&#x27; in /etc/xinetd.d/tftp</span><br><span class="line">4 : Some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run &#x27;cobbler get-loaders&#x27; to download them, or, if you only want to handle x86/x86_64 netbooting, you may ensure that you have installed a *recent* version of the syslinux package installed and can ignore this message entirely.  Files in this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The &#x27;cobbler get-loaders&#x27; command is the easiest way to resolve these requirements.</span><br><span class="line">5 : enable and start rsyncd.service with systemctl</span><br><span class="line">6 : debmirror package is not installed, it will be required to manage debian deployments and repositories</span><br><span class="line">7 : ksvalidator was not found, install pykickstart</span><br><span class="line">8 : The default password used by the sample templates for newly installed machines (default_password_crypted in /etc/cobbler/settings) is still set to &#x27;cobbler&#x27; and should be changed, try: &quot;openssl passwd -1 -salt &#x27;random-phrase-here&#x27; &#x27;your-password-here&#x27;&quot; to generate new one</span><br><span class="line">9 : fencing tools were not found, and are required to use the (optional) power management features. install cman or fence-agents to use them</span><br><span class="line"></span><br><span class="line">Restart cobblerd and then run &#x27;cobbler sync&#x27; to apply changes.</span><br></pre></td></tr></table></figure>上面列出来的问题需要进行修改,cobbler的配置都存储在<code>/etc/cobbler/settings</code>。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1. server   修改/etc/cobbler/settings</span><br><span class="line">server: 192.168.27.3</span><br><span class="line"></span><br><span class="line">2. next_server   修改/etc/cobbler/settings</span><br><span class="line">next_server: 192.168.27.3</span><br><span class="line"></span><br><span class="line">3. tftp_server   修改/etc/xinetd.d/tftp</span><br><span class="line">disable = no</span><br><span class="line"></span><br><span class="line">4. boot-loaders</span><br><span class="line">cobbler get-loaders</span><br><span class="line"></span><br><span class="line">5. rsyncd</span><br><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl enable rsyncd</span><br><span class="line"></span><br><span class="line">6. debmirror 可忽略</span><br><span class="line"></span><br><span class="line">7. pykickstart </span><br><span class="line">yum -y install pykickstart</span><br><span class="line"></span><br><span class="line">8. 设置后面安装系统的初始化登录密码</span><br><span class="line">openssl passwd -1 -salt `openssl rand -hex 4` &#x27;admin&#x27;</span><br><span class="line"></span><br><span class="line">9. fencing tools</span><br><span class="line">yum -y install fence-agents</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置DHCP"><a href="#配置DHCP" class="headerlink" title="配置DHCP"></a>配置DHCP</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.修改/etc/cobbler/settings</span><br><span class="line">manage_dhcp = 1 </span><br><span class="line"></span><br><span class="line">2. vim /etc/cobbler/dhcp.template</span><br><span class="line">subnet 192.168.27.0 netmask 255.255.255.0 &#123;         #分配的网段和掩码</span><br><span class="line">     option routers             192.168.27.1;       #网关地址</span><br><span class="line">     option domain-name-servers 8.8.8.8;            #dns地址</span><br><span class="line">     option subnet-mask         255.255.255.0;      #分配的IP的掩码</span><br><span class="line">     range dynamic-bootp        192.168.27.100 192.168.27.254;      #分配的IP的范围</span><br></pre></td></tr></table></figure><h2 id="同步cobbler配置"><a href="#同步cobbler配置" class="headerlink" title="同步cobbler配置"></a>同步cobbler配置</h2><p>同步cobbler配置，它会根据配置自动修改dhcp等服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cobbler sync</span><br></pre></td></tr></table></figure><p>同步完成后就可以创建一个新的虚拟机开启后，查看是否可以从DHCP中拉取到。  </p><h2 id="cobbler命令"><a href="#cobbler命令" class="headerlink" title="cobbler命令"></a>cobbler命令</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">cobbler check</td><td align="left">核对当前设置是否有问题</td></tr><tr><td align="left">cobbler list</td><td align="left">列出所有的cobbler元素</td></tr><tr><td align="left">cobbler report</td><td align="left">列出元素的详细信息</td></tr><tr><td align="left">cobbler sync</td><td align="left">同步配置到数据目录，更改配置最好都执行一下</td></tr><tr><td align="left">cobbler reposync</td><td align="left">同步yum仓库</td></tr><tr><td align="left">cobbler distro</td><td align="left">查看导入的发行版系统信息</td></tr><tr><td align="left">cobbler system</td><td align="left">查看添加的系统信息</td></tr><tr><td align="left">cobbler profile</td><td align="left">查看配置信息</td></tr></tbody></table><h2 id="cobbler安装配置centos"><a href="#cobbler安装配置centos" class="headerlink" title="cobbler安装配置centos"></a>cobbler安装配置centos</h2><h3 id="将镜像挂载"><a href="#将镜像挂载" class="headerlink" title="将镜像挂载"></a>将镜像挂载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/cdrom </span><br><span class="line">mount /dev/cdrom /mnt/cdrom</span><br></pre></td></tr></table></figure><h3 id="导入镜像"><a href="#导入镜像" class="headerlink" title="导入镜像"></a>导入镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cobbler import --path=/mnt/cdrom --name=centos7.6 --arch=x86_64</span><br></pre></td></tr></table></figure><h3 id="查看导入后镜像信息"><a href="#查看导入后镜像信息" class="headerlink" title="查看导入后镜像信息"></a>查看导入后镜像信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cobbler distro report --name=centos7.6-x86_64</span><br><span class="line"></span><br><span class="line">Name                           : centos7.6-x86_64</span><br><span class="line">Architecture                   : x86_64</span><br><span class="line">TFTP Boot Files                : &#123;&#125;</span><br><span class="line">Breed                          : redhat</span><br><span class="line">Comment                        : </span><br><span class="line">Fetchable Files                : &#123;&#125;</span><br><span class="line">Initrd                         : /var/www/cobbler/ks_mirror/centos7.6-x86_64/images/pxeboot/initrd.img</span><br><span class="line">Kernel                         : /var/www/cobbler/ks_mirror/centos7.6-x86_64/images/pxeboot/vmlinuz</span><br><span class="line">Kernel Options                 : &#123;&#125;</span><br><span class="line">Kernel Options (Post Install)  : &#123;&#125;</span><br><span class="line">Kickstart Metadata             : &#123;&#x27;tree&#x27;: &#x27;http://@@http_server@@/cblr/links/centos7.6-x86_64&#x27;&#125;</span><br><span class="line">Management Classes             : []</span><br><span class="line">OS Version                     : rhel6</span><br><span class="line">Owners                         : [&#x27;admin&#x27;]</span><br><span class="line">Red Hat Management Key         : &lt;&lt;inherit&gt;&gt;</span><br><span class="line">Red Hat Management Server      : &lt;&lt;inherit&gt;&gt;</span><br><span class="line">Template Files                 : &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="查看profile信息"><a href="#查看profile信息" class="headerlink" title="查看profile信息"></a>查看profile信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@clone cdrom]# cobbler profile report --name=centos7.6-x86_64</span><br><span class="line">Name                           : centos7.6-x86_64</span><br><span class="line">TFTP Boot Files                : &#123;&#125;</span><br><span class="line">Comment                        : </span><br><span class="line">DHCP Tag                       : default</span><br><span class="line">Distribution                   : centos7.6-x86_64</span><br><span class="line">Enable gPXE?                   : 0</span><br><span class="line">Enable PXE Menu?               : 1</span><br><span class="line">Fetchable Files                : &#123;&#125;</span><br><span class="line">Kernel Options                 : &#123;&#125;</span><br><span class="line">Kernel Options (Post Install)  : &#123;&#125;</span><br><span class="line">Kickstart                      : /var/lib/cobbler/kickstarts/centos7.ks</span><br><span class="line">Kickstart Metadata             : &#123;&#125;</span><br><span class="line">Management Classes             : []</span><br><span class="line">Management Parameters          : &lt;&lt;inherit&gt;&gt;</span><br><span class="line">Name Servers                   : []</span><br><span class="line">Name Servers Search Path       : []</span><br><span class="line">Owners                         : [&#x27;admin&#x27;]</span><br><span class="line">Parent Profile                 : </span><br><span class="line">Internal proxy                 : </span><br><span class="line">Red Hat Management Key         : &lt;&lt;inherit&gt;&gt;</span><br><span class="line">Red Hat Management Server      : &lt;&lt;inherit&gt;&gt;</span><br><span class="line">Repos                          : []</span><br><span class="line">Server Override                : &lt;&lt;inherit&gt;&gt;</span><br><span class="line">Template Files                 : &#123;&#125;</span><br><span class="line">Virt Auto Boot                 : 1</span><br><span class="line">Virt Bridge                    : xenbr0</span><br><span class="line">Virt CPUs                      : 1</span><br><span class="line">Virt Disk Driver Type          : raw</span><br><span class="line">Virt File Size(GB)             : 5</span><br><span class="line">Virt Path                      : </span><br><span class="line">Virt RAM (MB)                  : 512</span><br><span class="line">Virt Type                      : kvm</span><br></pre></td></tr></table></figure><h3 id="copy一份profile文件-ks-，进行修改"><a href="#copy一份profile文件-ks-，进行修改" class="headerlink" title="copy一份profile文件(ks)，进行修改"></a>copy一份profile文件(ks)，进行修改</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">cd /var/lib/cobbler/kickstarts/</span><br><span class="line">cp sample_end.ks centos7.ks</span><br><span class="line">vim centos7.ks</span><br><span class="line"></span><br><span class="line"># This kickstart file should only be used with EL &gt; 5 and/or Fedora &gt; 7.</span><br><span class="line"># For older versions please use the sample.ks kickstart file.</span><br><span class="line"></span><br><span class="line">#platform=x86, AMD64, or Intel EM64T</span><br><span class="line"># System authorization information</span><br><span class="line">auth  --useshadow  --enablemd5</span><br><span class="line"># System bootloader configuration</span><br><span class="line">bootloader --location=mbr</span><br><span class="line"># Partition clearing information</span><br><span class="line">clearpart --all --initlabel</span><br><span class="line"># Use text mode install</span><br><span class="line">text      ## 使用文本模式安装</span><br><span class="line"># Firewall configuration</span><br><span class="line">firewall --disable   ## 防火墙选项</span><br><span class="line"># Run the Setup Agent on first boot</span><br><span class="line">firstboot --disable</span><br><span class="line"># System keyboard</span><br><span class="line">keyboard us    ## 选择键盘</span><br><span class="line"># System language</span><br><span class="line">lang en_US     ## 选择语言</span><br><span class="line"># Use network installation</span><br><span class="line">url --url=$tree</span><br><span class="line"># If any cobbler repo definitions were referenced in the kickstart profile, include them here.</span><br><span class="line">$yum_repo_stanza</span><br><span class="line"># Network information</span><br><span class="line">$SNIPPET(&#x27;network_config&#x27;)</span><br><span class="line"># Reboot after installation</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line">#Root password</span><br><span class="line">rootpw --iscrypted $default_password_crypted   </span><br><span class="line"># SELinux configuration  </span><br><span class="line">selinux --disabled  ## SELinux配置</span><br><span class="line"># Do not configure the X Window System</span><br><span class="line">skipx</span><br><span class="line"># System timezone</span><br><span class="line">timezone  America/New_York</span><br><span class="line"># Install OS instead of upgrade</span><br><span class="line">install        ##安装系统而不是升级</span><br><span class="line"># Clear the Master Boot Record</span><br><span class="line">zerombr</span><br><span class="line"># Allow anaconda to partition the system as needed</span><br><span class="line">autopart</span><br><span class="line"></span><br><span class="line">%pre</span><br><span class="line">$SNIPPET(&#x27;log_ks_pre&#x27;)</span><br><span class="line">$SNIPPET(&#x27;kickstart_start&#x27;)</span><br><span class="line">$SNIPPET(&#x27;pre_install_network_config&#x27;)</span><br><span class="line"># Enable installation monitoring</span><br><span class="line">$SNIPPET(&#x27;pre_anamon&#x27;)</span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%packages  ## 想安装的软件包</span><br><span class="line">$SNIPPET(&#x27;func_install_if_enabled&#x27;)</span><br><span class="line">tree</span><br><span class="line">vim</span><br><span class="line">nmap</span><br><span class="line">wget</span><br><span class="line">lftp</span><br><span class="line">net-tools</span><br><span class="line">lrzsz</span><br><span class="line">telnet</span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%post --nochroot</span><br><span class="line">$SNIPPET(&#x27;log_ks_post_nochroot&#x27;)</span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%post</span><br><span class="line">$SNIPPET(&#x27;log_ks_post&#x27;)</span><br><span class="line"># Start yum configuration</span><br><span class="line">$yum_config_stanza</span><br><span class="line"># End yum configuration</span><br><span class="line">$SNIPPET(&#x27;post_install_kernel_options&#x27;)</span><br><span class="line">$SNIPPET(&#x27;post_install_network_config&#x27;)</span><br><span class="line">$SNIPPET(&#x27;func_register_if_enabled&#x27;)</span><br><span class="line">$SNIPPET(&#x27;download_config_files&#x27;)</span><br><span class="line">$SNIPPET(&#x27;koan_environment&#x27;)</span><br><span class="line">$SNIPPET(&#x27;redhat_register&#x27;)</span><br><span class="line">$SNIPPET(&#x27;cobbler_register&#x27;)</span><br><span class="line"># Enable post-install boot notification</span><br><span class="line">$SNIPPET(&#x27;post_anamon&#x27;)</span><br><span class="line"># Start final steps</span><br><span class="line">$SNIPPET(&#x27;kickstart_done&#x27;)</span><br><span class="line"># End final steps</span><br><span class="line">%end</span><br></pre></td></tr></table></figure><h3 id="编辑centos7-6镜像所使用的kickstart文件"><a href="#编辑centos7-6镜像所使用的kickstart文件" class="headerlink" title="编辑centos7.6镜像所使用的kickstart文件"></a>编辑centos7.6镜像所使用的kickstart文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cobbler profile edit --name=centos7.6-x86_64 --kickstart=/var/lib/cobbler/kickstarts/centos7.ks</span><br></pre></td></tr></table></figure><h3 id="同步cobbler配置-1"><a href="#同步cobbler配置-1" class="headerlink" title="同步cobbler配置"></a>同步cobbler配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cobbler sync</span><br></pre></td></tr></table></figure><h3 id="创建一个虚拟机进行测试"><a href="#创建一个虚拟机进行测试" class="headerlink" title="创建一个虚拟机进行测试"></a>创建一个虚拟机进行测试</h3><p>创建的虚拟内存要大于2G<br><img src="/2021/09/23/Linux/Cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/test.png" alt="test"><br>选中后回车即可进行安装。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/23/Linux/Cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/Cobbler.png&quot; alt=&quot;cobbler&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="cobbler" scheme="http://example.com/tags/cobbler/"/>
    
  </entry>
  
  <entry>
    <title>FTP服务</title>
    <link href="http://example.com/2021/09/03/Linux/FTP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://example.com/2021/09/03/Linux/FTP%E6%9C%8D%E5%8A%A1/</id>
    <published>2021-09-03T15:02:17.000Z</published>
    <updated>2022-05-24T04:49:59.963Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h1 id="FTP服务"><a href="#FTP服务" class="headerlink" title="FTP服务"></a>FTP服务</h1><h2 id="FTP简介"><a href="#FTP简介" class="headerlink" title="FTP简介"></a>FTP简介</h2><p>FTP（File Transfer Protocol，文件传输协议） 是 TCP/IP 协议组中的协议之一，FTP协议包括两个组成部分，其一为FTP服务器，其二为FTP客户端，其中FTP服务器用来存储文件，用户可以使用FTP客户端通过FTP协议访问位于FTP服务器上的资源，在开发网站的时候，通常利用FTP协议把网页或程序传到Web服务器上，由于FTP传输效率非常高，在网络上传输大的文件时，一般也采用该协议，默认情况下FTP协议使用TCP端口中的 20和21这两个端口，其中20用于传输数据，21用于传输控制信息，但是，是否使用20作为传输数据的端口与FTP使用的传输模式有关，如果采用主动模式，那么数据传输端口就是20；如果采用被动模式，则具体最终使用哪个端口要服务器端和客户端协商决定  </p><h2 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h2><ol><li>FTP连接及传输模式  <ul><li>控制连接：TCP 21，用于发送FTP命令  </li><li>数据连接：TCP 20，用于上传、下载数据  </li></ul></li><li>数据连接的建立类型  <ul><li>主动模式：服务器从20端口主动向客户端发起连接  </li><li>被动模式：服务器在指定范围内某个端口被动等待客户端连接  </li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="FTP" scheme="http://example.com/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>Supervisor进程守护监控</title>
    <link href="http://example.com/2021/09/02/Linux/Supervisor%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/2021/09/02/Linux/Supervisor%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4%E7%9B%91%E6%8E%A7/</id>
    <published>2021-09-02T13:55:50.000Z</published>
    <updated>2022-05-24T04:50:20.256Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h1 id="Supervisor"><a href="#Supervisor" class="headerlink" title="Supervisor"></a>Supervisor</h1><p><a href="http://supervisord.org/">Supervisor官网</a>  </p><h2 id="Supervisor简介"><a href="#Supervisor简介" class="headerlink" title="Supervisor简介"></a>Supervisor简介</h2><p>Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。也实现当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。supervisor还提供了一个功能，可以为supervisord或者每个子进程，设置一个非root的user，这个user就可以管理它对应的进程。  </p><h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><ol><li>通过pip安装  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure></li><li>通过yum安装  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y supervisor</span><br></pre></td></tr></table></figure></li><li>通过apt安装  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install supervisor</span><br></pre></td></tr></table></figure></li></ol><h2 id="介绍Supervisor"><a href="#介绍Supervisor" class="headerlink" title="介绍Supervisor"></a>介绍Supervisor</h2><ul><li><strong>supervisord</strong><br>运行 Supervisor 时会启动一个进程 supervisord，它负责启动所管理的进程，并将所管理的进程作为自己的子进程来启动，而且可以在所管理的进程出现崩溃时自动重启。  </li><li><strong>supervisorctl</strong><br>是命令行管理工具，可以用来执行 stop、start、restart 等命令，来对这些子进程进行管理。supervisor是所有进程的父进程，管理着启动的子进程，supervisor以子进程的PID来管理子进程，当子进程异常退出时supervisor可以收到相应的信号量。  </li></ul><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>安装完成后执行<code>echo_supervisord_conf</code>,会将Supervisor的示例配置文件打印到终端标准输出。<br>然后使用root权限可以将示例配置文件重定向输出到<code>echo_supervisord_conf &gt; /etc/supervisord.conf</code>中，若没有root权限或者要将配置文件放在其他目录中可以执行<code>echo_supervisor_conf &gt; /xxx/supervisord.conf</code>中，启动supervisord时指明配置文件即可<code>superisord -c /xxx/supervisord.conf</code>。  </p><h2 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a>配置文件详解</h2><p>/etc/supervisord.conf，/etc/supervisord.d中可以编写子进程的配置文件，也就是/etc/supervisord.conf中的[program:xxx]模块(例如创建test.conf)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[unix_http_server]</span></span><br><span class="line"><span class="attr">file</span>=/var/run/supervisor/supervisor.sock   <span class="comment">; socket 路径,supervisorctl 会使用，注意修改，默认为/tmp下容易被删除</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">;chmod=0700                 ; socket 文件的权限</span></span><br><span class="line"><span class="comment">;chown=nobody:nogroup       ; socket 所属用户及组</span></span><br><span class="line"><span class="comment">;username=user              ; 用户名</span></span><br><span class="line"><span class="comment">;password=123               ; 密码</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[inet_http_server]</span>         <span class="comment">; 是否启用服务，默认是关闭的（启用的话可以看到supervisor 管理的服务状态）</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">9001</span>        <span class="comment">; 监听的IP及端口</span></span><br><span class="line"><span class="attr">username</span>=user              <span class="comment">; 用户名</span></span><br><span class="line"><span class="attr">password</span>=<span class="number">123</span>               <span class="comment">; 密码</span></span><br><span class="line"> </span><br><span class="line"><span class="section">[supervisord]</span>               <span class="comment">; supervisord 全局配置</span></span><br><span class="line"><span class="attr">logfile</span>=/var/log/supervisor/supervisord.log  <span class="comment">; supervisor 日志路径，注意修改，默认为/tmp下容易被删除</span></span><br><span class="line"><span class="attr">logfile_maxbytes</span>=<span class="number">50</span>MB       <span class="comment">; 单个日志文件最大数</span></span><br><span class="line"><span class="attr">logfile_backups</span>=<span class="number">10</span>          <span class="comment">; 保留多少个日志文件（默认10个）</span></span><br><span class="line"><span class="attr">loglevel</span>=info               <span class="comment">; (log level;default info; others: debug,warn,trace)</span></span><br><span class="line"><span class="attr">pidfile</span>=/var/run/supervisord.pid <span class="comment">; pid 文件路径，注意修改，默认为/tmp下容易被删除</span></span><br><span class="line"><span class="attr">nodaemon</span>=<span class="literal">false</span>              <span class="comment">; 启动是否丢到前台，设置为false ，表示以daemon 的方式启动</span></span><br><span class="line"><span class="attr">minfds</span>=<span class="number">1024</span>                 <span class="comment">; 最小文件打开数，对应系统limit.conf 中的nofile ,默认最小为1024，最大为4096</span></span><br><span class="line"><span class="attr">minprocs</span>=<span class="number">200</span>                <span class="comment">; 最小的进程打开数，对应系统的limit.conf 中的nproc,默认为200</span></span><br><span class="line"><span class="comment">;umask=022                  ; (process file creation umask;default 022)</span></span><br><span class="line"><span class="comment">;user=chrism                 ; 启动supervisord 服务的用户，默认为root</span></span><br><span class="line"><span class="comment">;identifier=supervisor       ; (supervisord identifier, default is &#x27;supervisor&#x27;)</span></span><br><span class="line"><span class="comment">;directory=/tmp              ; 这里的目录指的是服务的工作目录</span></span><br><span class="line"><span class="comment">;nocleanup=true              ; (don&#x27;t clean up tempfiles at start;default false)</span></span><br><span class="line"><span class="comment">;childlogdir=/tmp            ; (&#x27;AUTO&#x27; child log dir, default $TEMP)</span></span><br><span class="line"><span class="comment">;environment=KEY=value       ; (key value pairs to add to environment)</span></span><br><span class="line"><span class="comment">;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">; the below section must remain in the config file for RPC</span></span><br><span class="line"><span class="comment">; (supervisorctl/web interface) to work, additional interfaces may be</span></span><br><span class="line"><span class="comment">; added by defining them in separate rpcinterface: sections</span></span><br><span class="line"><span class="section">[rpcinterface:supervisor]</span></span><br><span class="line"><span class="attr">supervisor.rpcinterface_factory</span> = supervisor.rpcinterface:make_main_rpcinterface</span><br><span class="line"> </span><br><span class="line"><span class="section">[supervisorctl]</span></span><br><span class="line"><span class="attr">serverurl</span>=unix:///var/run/supervisor/supervisor.sock <span class="comment">; 通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</span></span><br><span class="line"><span class="comment">;serverurl=http://127.0.0.1:9001 ; 通过HTTP的方式连接supervisord</span></span><br><span class="line"><span class="comment">;username=chris              ; should be same as http_username if set</span></span><br><span class="line"><span class="comment">;password=123                ; should be same as http_password if set</span></span><br><span class="line"><span class="comment">;prompt=mysupervisor         ; cmd line prompt (default &quot;supervisor&quot;)</span></span><br><span class="line"><span class="comment">;history_file=~/.sc_history  ; use readline history if available</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">; The below sample program section shows all possible program subsection values,</span></span><br><span class="line"><span class="comment">; create one or more &#x27;real&#x27; program: sections to be able to control them under</span></span><br><span class="line"><span class="comment">; supervisor.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">;[program:theprogramname]      ; 定义一个守护进程 </span></span><br><span class="line"><span class="comment">;command=/bin/cat              ; 启动程序使用的命令，可以是绝对路径或者相对路径</span></span><br><span class="line"><span class="comment">;process_name=%(program_name)s ; 一个python字符串表达式，用来表示supervisor进程启动的这个的名称，默认值是%(program_name)s</span></span><br><span class="line"><span class="comment">;numprocs=1                    ; Supervisor启动这个程序的多个实例，如果numprocs&gt;1，则process_name的表达式必须包含%(process_num)s，默认是1</span></span><br><span class="line"><span class="comment">;directory=/tmp                ; supervisord在生成子进程的时候会切换到该目录</span></span><br><span class="line"><span class="comment">;umask=022                     ; umask for process (default None)</span></span><br><span class="line"><span class="comment">;priority=999                  ; 权重，可以控制程序启动和关闭时的顺序，权重越低：越早启动，越晚关闭。默认值是999</span></span><br><span class="line"><span class="comment">;autostart=true                ; 如果设置为true，当supervisord启动的时候，进程会自动启动</span></span><br><span class="line"><span class="comment">;autorestart=true              ; 设置为随 supervisord 重启而重启，值可以是false、true、unexpected。false：进程不会自动重启,unexpected：进程意外杀死后才重启</span></span><br><span class="line"><span class="comment">;startsecs=10                  ; 程序启动后等待多长时间后才认为程序启动成功，默认是10秒</span></span><br><span class="line"><span class="comment">;startretries=3                ; supervisord尝试启动一个程序时尝试的次数。默认是3</span></span><br><span class="line"><span class="comment">;exitcodes=0,2                 ; 一个预期的退出返回码，默认是0,2。</span></span><br><span class="line"><span class="comment">;stopsignal=QUIT               ; 当收到stop请求的时候，发送信号给程序，默认是TERM信号，也可以是 HUP, INT, QUIT, KILL, USR1, or USR2</span></span><br><span class="line"><span class="comment">;stopwaitsecs=10               ; 在操作系统给supervisord发送SIGCHILD信号时等待的时间</span></span><br><span class="line"><span class="comment">;user=chrism                   ; 如果supervisord以root运行，则会使用这个设置用户启动子程序</span></span><br><span class="line"><span class="comment">;redirect_stderr=true          ; 如果设置为true，进程则会把标准错误输出到supervisord后台的标准输出文件描述符</span></span><br><span class="line"><span class="comment">;stdout_logfile=/a/path        ; 把进程的标准输出写入文件中，如果stdout_logfile没有设置或者设置为AUTO，则supervisor会自动选择一个文件位置</span></span><br><span class="line"><span class="comment">;stdout_logfile_maxbytes=1MB   ; 标准输出log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小</span></span><br><span class="line"><span class="comment">;stdout_logfile_backups=10     ; 标准输出日志轮转备份的数量，默认是10，如果设置为0，则不备份</span></span><br><span class="line"><span class="comment">;stdout_capture_maxbytes=1MB   ; 当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB</span></span><br><span class="line"><span class="comment">;stdout_events_enabled=false   ; 如果设置为true，当进程在写它的stderr</span></span><br><span class="line"><span class="comment">;stderr_logfile=/a/path        ; 把进程的错误日志输出一个文件中，除非redirect_stderr参数被设置为true</span></span><br><span class="line"><span class="comment">;stderr_logfile_maxbytes=1MB   ; 错误log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小</span></span><br><span class="line"><span class="comment">;stderr_logfile_backups=10     ; 错误日志轮转备份的数量，默认是10，如果设置为0，则不备份</span></span><br><span class="line"><span class="comment">;stderr_capture_maxbytes=1MB   ; 当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB</span></span><br><span class="line"><span class="comment">;stderr_events_enabled=false   ; 如果设置为true，当进程在写它的stderr到文件描述符的时候，PROCESS_LOG_STDERR事件会被触发</span></span><br><span class="line"><span class="comment">;environment=A=1,B=2           ; 一个k/v对的list列表</span></span><br><span class="line"><span class="comment">;serverurl=AUTO                ; 是否允许子进程和内部的HTTP服务通讯，如果设置为AUTO，supervisor会自动的构造一个url</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">; The below sample eventlistener section shows all possible</span></span><br><span class="line"><span class="comment">; eventlistener subsection values, create one or more &#x27;real&#x27;</span></span><br><span class="line"><span class="comment">; eventlistener: sections to be able to handle event notifications</span></span><br><span class="line"><span class="comment">; sent by supervisor.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;这个地方是自定义一个守护进程</span></span><br><span class="line"><span class="section">[program:test]</span></span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">directory</span>=/home/supervisor_test</span><br><span class="line"><span class="attr">command</span>=/bin/bash /home/supervisor_test/test.sh</span><br><span class="line"><span class="attr">stdout_logfile</span>=/home/supervisor_test/test.txt    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;[eventlistener:theeventlistenername]</span></span><br><span class="line"><span class="comment">;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)</span></span><br><span class="line"><span class="comment">;process_name=%(program_name)s ; process_name expr (default %(program_name)s)</span></span><br><span class="line"><span class="comment">;numprocs=1                    ; number of processes copies to start (def 1)</span></span><br><span class="line"><span class="comment">;events=EVENT                  ; event notif. types to subscribe to (req&#x27;d)</span></span><br><span class="line"><span class="comment">;buffer_size=10                ; event buffer queue size (default 10)</span></span><br><span class="line"><span class="comment">;directory=/tmp                ; directory to cwd to before exec (def no cwd)</span></span><br><span class="line"><span class="comment">;umask=022                     ; umask for process (default None)</span></span><br><span class="line"><span class="comment">;priority=-1                   ; the relative start priority (default -1)</span></span><br><span class="line"><span class="comment">;autostart=true                ; start at supervisord start (default: true)</span></span><br><span class="line"><span class="comment">;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)</span></span><br><span class="line"><span class="comment">;startretries=3                ; max # of serial start failures when starting (default 3)</span></span><br><span class="line"><span class="comment">;autorestart=unexpected        ; autorestart if exited after running (def: unexpected)</span></span><br><span class="line"><span class="comment">;exitcodes=0,2                 ; &#x27;expected&#x27; exit codes used with autorestart (default 0,2)</span></span><br><span class="line"><span class="comment">;stopsignal=QUIT               ; signal used to kill process (default TERM)</span></span><br><span class="line"><span class="comment">;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)</span></span><br><span class="line"><span class="comment">;stopasgroup=false             ; send stop signal to the UNIX process group (default false)</span></span><br><span class="line"><span class="comment">;killasgroup=false             ; SIGKILL the UNIX process group (def false)</span></span><br><span class="line"><span class="comment">;user=chrism                   ; setuid to this UNIX account to run the program</span></span><br><span class="line"><span class="comment">;redirect_stderr=false         ; redirect_stderr=true is not allowed for eventlisteners</span></span><br><span class="line"><span class="comment">;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO</span></span><br><span class="line"><span class="comment">;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)</span></span><br><span class="line"><span class="comment">;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)</span></span><br><span class="line"><span class="comment">;stdout_events_enabled=false   ; emit events on stdout writes (default false)</span></span><br><span class="line"><span class="comment">;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO</span></span><br><span class="line"><span class="comment">;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)</span></span><br><span class="line"><span class="comment">;stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)</span></span><br><span class="line"><span class="comment">;stderr_events_enabled=false   ; emit events on stderr writes (default false)</span></span><br><span class="line"><span class="comment">;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; process environment additions</span></span><br><span class="line"><span class="comment">;serverurl=AUTO                ; override serverurl computation (childutils)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The sample group section below shows all possible group values.  Create one</span></span><br><span class="line"><span class="comment">; or more &#x27;real&#x27; group: sections to create &quot;heterogeneous&quot; process groups.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;[group:thegroupname]   ;定义一个组</span></span><br><span class="line"><span class="comment">;programs=progname1,progname2  ; 组内的成员模块有哪些   </span></span><br><span class="line"><span class="comment">;priority=999                  ; the relative start priority (default 999)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The [include] section can just contain the &quot;files&quot; setting.  This</span></span><br><span class="line"><span class="comment">; setting can list multiple files (separated by whitespace or</span></span><br><span class="line"><span class="comment">; newlines).  It can also contain wildcards.  The filenames are</span></span><br><span class="line"><span class="comment">; interpreted as relative to this file.  Included files *cannot*</span></span><br><span class="line"><span class="comment">; include files themselves.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;[include]</span></span><br><span class="line"><span class="comment">;files = relative/directory/*.ini</span></span><br></pre></td></tr></table></figure><p>编写一个简单的死循环脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">  date  &gt;&gt; /home/supervisor_test/test.txt</span><br><span class="line">  sleep 10s</span><br><span class="line">  date &gt;&gt; /home/supervisor_test/test.txt</span><br><span class="line">  sleep 10s</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>此处的配置文件中启动了web，可以在web中进行查看进程状态以及相关操作</p><h2 id="启动Supervisor"><a href="#启动Supervisor" class="headerlink" title="启动Supervisor"></a>启动Supervisor</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">supervisord   # 此处因为配置文件为默认的/etc/supervisord.conf,若使用其他配置文件需要加 -c 配置文件路径</span><br><span class="line">supervisord -c /xxx/xxxx</span><br></pre></td></tr></table></figure><p><strong>注意</strong>在启动时可能会出现以下错误  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Another program is already listening on a port that one of our HTTP servers is configured to use.  Shut this program down first before starting supervisord.For help, use /usr/bin/supervisord -h</span><br></pre></td></tr></table></figure><p>这表示已经supervisor已经启动，若配置进行了修改可以使用<code>supervisorctl update</code>  </p><h2 id="supervisorctl命令讲解"><a href="#supervisorctl命令讲解" class="headerlink" title="supervisorctl命令讲解"></a>supervisorctl命令讲解</h2><ul><li>supervisorctl ：进入到交互式命令行，在交互式命令行中以下命令可以不加supervisorctl直接执行</li><li>supervisorctl shutdown ：停止supervisord  </li><li>supervisorctl status ：查看监控进程的状态  </li><li>supervisorctl stop xxx ：停止xxx模块的进程  </li><li>supervisorctl start xxx ：启动xxx模块的进程  </li><li>supervisorctl restart xxx ：重启xxx模块的进程</li><li>supervisorctl stop all ：停止所有监控的进程  </li><li>supervisorctl update ：更新新的配置到supervisord（不会重启原来已运行的程序）  </li><li>supervisorctl reload ：载入所有配置文件，并按新的配置启动、管理所有进程（会重启原来已运行的程序）  </li></ul><p><strong>注意执行supervisorctl时可能会出现以下报错</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unix:///var/run/supervisor/supervisor.sock no such file</span><br></pre></td></tr></table></figure><p>这表示supervisord服务可能没有启动，需要先启动supervisord</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Supervisor" scheme="http://example.com/tags/Supervisor/"/>
    
  </entry>
  
  <entry>
    <title>Rsync+sersync实现实时同步</title>
    <link href="http://example.com/2021/09/01/Linux/Rsync/"/>
    <id>http://example.com/2021/09/01/Linux/Rsync/</id>
    <published>2021-09-01T14:16:38.000Z</published>
    <updated>2022-05-24T04:50:26.763Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h1 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h1><h2 id="rsync介绍"><a href="#rsync介绍" class="headerlink" title="rsync介绍"></a>rsync介绍</h2><p>Rsync 是一种快速且非常通用的文件复制工具。它可以在本地、通过任何远程 shell 复制到另一台主机或从远程 rsync 守护程序复制到/从另一个主机复制。它提供了大量选项来控制其行为的各个方面，并允许非常灵活地指定要复制的文件集。它以其增量传输算法而闻名，该算法通过仅发送源文件与目标中现有文件之间的差异来减少通过网络发送的数据量。Rsync 广泛用于备份和镜像，并作为日常使用的改进复制命令。<br>Rsync具有本地与远程两台主机之间的数据快速复制同步镜像、远程备份等功能，该功能类似scp，但是优于scp功能，还具有本地不同分区目录之间全量及增量复制数据。<br>Rsync同步数据镜像时，通过“quick check”算法，仅同步大小或最后修改时间发生变化的文件或目录，当然也可以根据权限，属主等属性变化的同步，所以可以实现快速同步。<br><strong>rsync 具有如下的基本特性：</strong>  </p><ol><li>可以镜像保存整个目录树和文件系统</li><li>可以很容易做到保持原来文件的权限、时间、软硬链接等</li><li>无须特殊权限即可安装</li><li>优化的流程，文件传输效率高</li><li>可以使用 rsh、ssh 方式来传输文件，当然也可以通过直接的 socket 连接</li><li>支持匿名传输，以方便进行网站镜象</li></ol><h1 id="sersync"><a href="#sersync" class="headerlink" title="sersync"></a>sersync</h1><h2 id="sersync介绍"><a href="#sersync介绍" class="headerlink" title="sersync介绍"></a>sersync介绍</h2><p>sersync是基于inotify开发的，类似于inotify-tools的工具，Sersync可以记录下被监听目录中发生变化的（包括增加、删除、修改）具体某一个文件或者某一个目录的名字，然后使用rsync同步的时候，只同步发生变化的文件或者目录，因此效率更高。<br>主要应用场景为数据体积大，并且文件很多。  </p><h1 id="Rsync-Sersync实时同步"><a href="#Rsync-Sersync实时同步" class="headerlink" title="Rsync+Sersync实时同步"></a>Rsync+Sersync实时同步</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>实验实现从将test1的文件同步到test2中  </p><table><thead><tr><th align="center">主机名</th><th align="center">IP</th><th align="center">部署服务</th></tr></thead><tbody><tr><td align="center">test1</td><td align="center">192.168.27.5</td><td align="center">Rsync client + Sersync server</td></tr><tr><td align="center">test2</td><td align="center">192.168.27.5</td><td align="center">Rsync server</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="rysnc-部署"><a href="#rysnc-部署" class="headerlink" title="rysnc 部署"></a>rysnc 部署</h2><p>在<strong>test1</strong>与<strong>test2</strong>中安装<strong>rsync</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y rsync</span><br></pre></td></tr></table></figure><h2 id="test2中的操作"><a href="#test2中的操作" class="headerlink" title="test2中的操作"></a>test2中的操作</h2><h3 id="Rsync-server配置"><a href="#Rsync-server配置" class="headerlink" title="Rsync server配置"></a>Rsync server配置</h3><p>[root@test2 ~]# vim /etc/rsyncd.conf  </p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">log <span class="attr">file</span> = /var/log/rsyncd.log </span><br><span class="line"><span class="comment">#日志文件位置，启动rsync后自动产生这个文件，无需提前创建</span></span><br><span class="line">pid <span class="attr">file</span> = /var/run/rsyncd.pid  </span><br><span class="line"><span class="comment">#pid文件的存放位置</span></span><br><span class="line">lock <span class="attr">file</span> = /var/run/rsync.lock  </span><br><span class="line"><span class="comment">#支持max connections参数的锁文件</span></span><br><span class="line">secrets <span class="attr">file</span> = /etc/rsyncd.password  </span><br><span class="line"><span class="comment">#用户认证配置文件，里面保存用户名称和密码，后面会创建这个文件</span></span><br><span class="line"></span><br><span class="line"><span class="section">[backup]</span> </span><br><span class="line"><span class="comment">#自定义名称</span></span><br><span class="line"><span class="attr">path</span> = /home/backup/ </span><br><span class="line"><span class="comment">#rsync服务端数据目录路径 需要手动创建</span></span><br><span class="line"><span class="attr">comment</span> = backup </span><br><span class="line"><span class="comment">#模块名称与[backup]自定义名称相同</span></span><br><span class="line"><span class="attr">uid</span> = root </span><br><span class="line"><span class="comment">#设置rsync运行权限为root</span></span><br><span class="line"><span class="attr">gid</span> = root </span><br><span class="line"><span class="comment">#设置rsync运行权限为root</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">873</span>  </span><br><span class="line"><span class="comment">#默认端口</span></span><br><span class="line">use <span class="attr">chroot</span> = <span class="literal">no</span> </span><br><span class="line"><span class="comment">#默认为true，修改为no，增加对目录文件软连接的备份</span></span><br><span class="line">read <span class="attr">only</span> = <span class="literal">no</span>  </span><br><span class="line"><span class="comment">#设置rsync服务端文件为读写权限</span></span><br><span class="line"><span class="attr">list</span> = <span class="literal">no</span> </span><br><span class="line"><span class="comment">#不显示rsync服务端资源列表</span></span><br><span class="line">max <span class="attr">connections</span> = <span class="number">200</span> </span><br><span class="line"><span class="comment">#最大连接数</span></span><br><span class="line"><span class="attr">timeout</span> = <span class="number">600</span>  </span><br><span class="line"><span class="comment">#设置超时时间</span></span><br><span class="line">auth <span class="attr">users</span> = rsync_backup </span><br><span class="line"><span class="comment">#执行数据同步的用户名，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line">hosts <span class="attr">allow</span> = <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span>  </span><br><span class="line"><span class="comment">#允许进行数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开</span></span><br><span class="line">hosts <span class="attr">deny</span> = <span class="number">0.0</span>.<span class="number">0.0</span>/<span class="number">32</span> </span><br><span class="line"><span class="comment">#禁止数据同步的客户端IP地址，可以设置多个，用英文状态下逗号隔开</span></span><br></pre></td></tr></table></figure><h3 id="创建用户认证文件"><a href="#创建用户认证文件" class="headerlink" title="创建用户认证文件"></a>创建用户认证文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# vim /etc/rsyncd.password</span><br><span class="line">rsync_backup:123456789</span><br></pre></td></tr></table></figure><h3 id="修改密码文件权限"><a href="#修改密码文件权限" class="headerlink" title="修改密码文件权限"></a>修改密码文件权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# chmod 600 /etc/rsyncd.password</span><br></pre></td></tr></table></figure><h3 id="启动rsync"><a href="#启动rsync" class="headerlink" title="启动rsync"></a>启动rsync</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# rsync --daemon</span><br></pre></td></tr></table></figure><h3 id="查看服务是否启动"><a href="#查看服务是否启动" class="headerlink" title="查看服务是否启动"></a>查看服务是否启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# ps  axu |grep rsync</span><br><span class="line">[root@test2 ~]# netstat -nlp |grep 873</span><br></pre></td></tr></table></figure><h2 id="test1中的操作"><a href="#test1中的操作" class="headerlink" title="test1中的操作"></a>test1中的操作</h2><h3 id="test1中创建密码文件"><a href="#test1中创建密码文件" class="headerlink" title="test1中创建密码文件"></a>test1中创建密码文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]# vim  /etc/rsyncd.password</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure><h3 id="test1中修改密码文件权限"><a href="#test1中修改密码文件权限" class="headerlink" title="test1中修改密码文件权限"></a>test1中修改密码文件权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]# chmod 600 /etc/rsyncd.password</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="在test1中推送文件到test2"><a href="#在test1中推送文件到test2" class="headerlink" title="在test1中推送文件到test2"></a>在test1中推送文件到test2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 test1_backup]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r-- 1 root root 0 9月   2 00:04 test.txt</span><br><span class="line">[root@test1 test1_backup]# rsync -avzP test.txt  rsync_backup@192.168.27.6::backup --password-file=/etc/rsyncd.password</span><br><span class="line">sending incremental file list</span><br><span class="line">test.txt</span><br><span class="line">              0 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=0/1)</span><br><span class="line"></span><br><span class="line">sent 91 bytes  received 43 bytes  268.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h3 id="在test1中从test2中拉取文件"><a href="#在test1中从test2中拉取文件" class="headerlink" title="在test1中从test2中拉取文件"></a>在test1中从test2中拉取文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 test1_backup]# rsync -avzP  rsync_backup@192.168.27.6::backup /home/test1_backup --password-file=/etc/rsyncd.password</span><br><span class="line">receiving incremental file list</span><br><span class="line">test.txt</span><br><span class="line">              0 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=0/2)</span><br><span class="line"></span><br><span class="line">sent 50 bytes  received 122 bytes  344.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure><h2 id="sersync部署"><a href="#sersync部署" class="headerlink" title="sersync部署"></a>sersync部署</h2><p>在<strong>test1</strong>中部署sersync  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]# wget  https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/sersync/sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">[root@test1 ~]# mkdir /usr/local/sersync</span><br><span class="line">[root@test1 ~]# tar zxvf sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">[root@test1 ~]# mv GNU-Linux-x86  /usr/local/sersync</span><br><span class="line">[root@test1 ~]# cd /usr/local/sersync/GNU-Linux-x86</span><br><span class="line">[root@test1 GNU-Linux-x86]# cp confxml.xml confxml.xml.bak</span><br></pre></td></tr></table></figure><h3 id="修改-confxml-xml文件"><a href="#修改-confxml-xml文件" class="headerlink" title="修改 confxml.xml文件"></a>修改 <strong>confxml.xml</strong>文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">host</span> <span class="attr">hostip</span>=<span class="string">&quot;localhost&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8008&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">host</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">debug</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span>     # 开启DUBUG模式 </span><br><span class="line">    <span class="tag">&lt;<span class="name">fileSystem</span> <span class="attr">xfs</span>=<span class="string">&quot;false&quot;</span>/&gt;</span>  # 开启xfs文件系统</span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>&gt;</span>     # 同步时忽略推送的文件(正则表达式),默认关闭 </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.svn&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.gz&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;^info/*&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;^static/*&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inotify</span>&gt;</span>     # 设置要监控的事件</span><br><span class="line">        <span class="tag">&lt;<span class="name">delete</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">createFolder</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">createFile</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">closeWrite</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">moveFrom</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">moveTo</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attrib</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">modify</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">inotify</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sersync</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">localpath</span> <span class="attr">watch</span>=<span class="string">&quot;/home/test1_backup&quot;</span>&gt;</span>         # 本地监视目录路径</span><br><span class="line">            <span class="tag">&lt;<span class="name">remote</span> <span class="attr">ip</span>=<span class="string">&quot;192.168.27.6&quot;</span> <span class="attr">name</span>=<span class="string">&quot;backup&quot;</span>/&gt;</span>  #定义同步Server ip和模块</span><br><span class="line">            <span class="comment">&lt;!--&lt;remote ip=&quot;192.168.8.39&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;remote ip=&quot;192.168.8.40&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">localpath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rsync</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">commonParams</span> <span class="attr">params</span>=<span class="string">&quot;-artuz&quot;</span>/&gt;</span>   # rsync指令参数</span><br><span class="line">            <span class="tag">&lt;<span class="name">auth</span> <span class="attr">start</span>=<span class="string">&quot;true&quot;</span> <span class="attr">users</span>=<span class="string">&quot;rsync_backup&quot;</span> <span class="attr">passwordfile</span>=<span class="string">&quot;/etc/rsyncd.password&quot;</span>/&gt;</span>  # rsync同步认证</span><br><span class="line">            <span class="tag">&lt;<span class="name">userDefinedPort</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">port</span>=<span class="string">&quot;874&quot;</span>/&gt;</span><span class="comment">&lt;!-- port=874 --&gt;</span>   # 设置rsync远程服务端口，非默认端口需要打开自定义(若开启rsync+ssh, 则这里需定义SSH端口)</span><br><span class="line">            <span class="tag">&lt;<span class="name">timeout</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">time</span>=<span class="string">&quot;100&quot;</span>/&gt;</span><span class="comment">&lt;!-- timeout=100 --&gt;</span>        # 设置超时时间</span><br><span class="line">            <span class="tag">&lt;<span class="name">ssh</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rsync</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">failLog</span> <span class="attr">path</span>=<span class="string">&quot;/tmp/rsync_fail_log.sh&quot;</span> <span class="attr">timeToExecute</span>=<span class="string">&quot;60&quot;</span>/&gt;</span><span class="comment">&lt;!--default every 60mins execute once--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">crontab</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">schedule</span>=<span class="string">&quot;600&quot;</span>&gt;</span><span class="comment">&lt;!--600mins--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">crontabfilter</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;*.php&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">expression</span>=<span class="string">&quot;info/*&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">crontabfilter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">crontab</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span> <span class="attr">name</span>=<span class="string">&quot;command&quot;</span>/&gt;</span>    # 设置sersync传输后调用name指定的插件脚本，默认关闭</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sersync</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;command&quot;</span>&gt;</span>  # 插件脚本范例</span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">prefix</span>=<span class="string">&quot;/bin/sh&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;&quot;</span> <span class="attr">ignoreError</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>        <span class="comment">&lt;!--prefix /opt/tongbu/mmm.sh suffix--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">start</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.php&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">expression</span>=<span class="string">&quot;(.*)\.sh&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;socket&quot;</span>&gt;</span>  # 插件脚本范例</span><br><span class="line">        <span class="tag">&lt;<span class="name">localpath</span> <span class="attr">watch</span>=<span class="string">&quot;/opt/tongbu&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">deshost</span> <span class="attr">ip</span>=<span class="string">&quot;192.168.138.20&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8009&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">localpath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">name</span>=<span class="string">&quot;refreshCDN&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">localpath</span> <span class="attr">watch</span>=<span class="string">&quot;/data0/htdocs/cms.xoyo.com/site/&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">cdninfo</span> <span class="attr">domainname</span>=<span class="string">&quot;ccms.chinacache.com&quot;</span> <span class="attr">port</span>=<span class="string">&quot;80&quot;</span> <span class="attr">username</span>=<span class="string">&quot;xxxx&quot;</span> <span class="attr">passwd</span>=<span class="string">&quot;xxxx&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">sendurl</span> <span class="attr">base</span>=<span class="string">&quot;http://pic.xoyo.com/cms&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">regexurl</span> <span class="attr">regex</span>=<span class="string">&quot;false&quot;</span> <span class="attr">match</span>=<span class="string">&quot;cms.xoyo.com/site([/a-zA-Z0-9]*).xoyo.com/images&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">localpath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="启动sersync"><a href="#启动sersync" class="headerlink" title="启动sersync"></a>启动sersync</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 GNU-Linux-x86]# /usr/local/sersync/GNU-Linux-x86/sersync2 -d -r -o /usr/local/sersync/GNU-Linux-x86/confxml.xml</span><br></pre></td></tr></table></figure><p>如果要停止直接kill掉进程即可  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="rsync" scheme="http://example.com/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>8-过滤器</title>
    <link href="http://example.com/2021/08/20/ansible/8-%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <id>http://example.com/2021/08/20/ansible/8-%E8%BF%87%E6%BB%A4%E5%99%A8/</id>
    <published>2021-08-20T14:14:39.000Z</published>
    <updated>2022-05-24T04:51:34.172Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/20/ansible/8-%E8%BF%87%E6%BB%A4%E5%99%A8/%E5%9B%BE%E7%89%87ansible.jpg" alt="ansible">    </p><span id="more"></span>  <h2 id="字符串有关的过滤器"><a href="#字符串有关的过滤器" class="headerlink" title="字符串有关的过滤器"></a>字符串有关的过滤器</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span></span><br><span class="line">    <span class="attr">testvar :</span> <span class="string">&quot;abc123ABC 666&quot;</span></span><br><span class="line">    <span class="attr">testvar1 :</span> <span class="string">&quot;  abc  &quot;</span></span><br><span class="line">    <span class="attr">testvar2 :</span> <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line">    <span class="attr">testvar3 :</span> <span class="string">&quot;1a2b,@#$%^&amp;&quot;</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串转换成纯大写</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar | upper &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串转换成纯小写</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar | lower &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串变成首字母大写,之后所有字母纯小写</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar | capitalize &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串反转</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar | reverse &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#返回字符串的第一个字符</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar | first &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#返回字符串的最后一个字符</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar | last &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串开头和结尾的空格去除</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar1 | trim &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串放在中间，并且设置字符串的长度为30，字符串两边用空格补齐30位长</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar1 | center(width=30) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#返回字符串长度,length与count等效,可以写为count</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar2 | length &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串转换成列表，每个字符作为一个元素</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar3 | list &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串转换成列表，每个字符作为一个元素，并且随机打乱顺序</span></span><br><span class="line">      <span class="comment">#shuffle的字面意思为洗牌</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar3 | shuffle &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">      <span class="comment">#将字符串转换成列表，每个字符作为一个元素，并且随机打乱顺序</span></span><br><span class="line">      <span class="comment">#在随机打乱顺序时，将ansible_date_time.epoch的值设置为随机种子</span></span><br><span class="line">      <span class="comment">#也可以使用其他值作为随机种子，ansible_date_time.epoch是facts信息</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar3 | shuffle(seed=(ansible_date_time.epoch)) &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="数字有关的过滤器"><a href="#数字有关的过滤器" class="headerlink" title="数字有关的过滤器"></a>数字有关的过滤器</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">remote_user :</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">testvar4 :</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将对应的值转换成int类型</span></span><br><span class="line">      <span class="comment">#ansible中，字符串和整形不能直接计算，比如&#123;&#123; 8+&#x27;8&#x27; &#125;&#125;会报错</span></span><br><span class="line">      <span class="comment">#所以，我们可以把一个值为数字的字符串转换成整形后再做计算</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 8+(&#x27;8&#x27; | int) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将对应的值转换成int类型,如果无法转换,默认返回0</span></span><br><span class="line">      <span class="comment">#使用int(default=6)或者int(6)时，如果无法转换则返回指定值6</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; &#x27;a&#x27; | int(default=6) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将对应的值转换成浮点型，如果无法转换，默认返回&#x27;0.0&#x27;</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; &#x27;8&#x27; | float &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#当对应的值无法被转换成浮点型时，则返回指定值’8.8‘</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; &#x27;a&#x27; | float(8.88) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#获取对应数值的绝对值</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar4 | abs &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#四舍五入</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 12.5 | round &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#取小数点后五位</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 3.1415926 | round(5) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从0到100中随机返回一个随机数</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 100 | random &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从5到10中随机返回一个随机数</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 10 | random(start=5) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从5到15中随机返回一个随机数,步长为3</span></span><br><span class="line">      <span class="comment">#步长为3的意思是返回的随机数只有可能是5、8、11、14中的一个</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 15 | random(start=5,step=3) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从0到15中随机返回一个随机数,这个随机数是5的倍数</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 15 | random(step=5) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从0到15中随机返回一个随机数，并将ansible_date_time.epoch的值设置为随机种子</span></span><br><span class="line">      <span class="comment">#也可以使用其他值作为随机种子，ansible_date_time.epoch是facts信息</span></span><br><span class="line">      <span class="comment">#seed参数从ansible2.3版本开始可用</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; 15 | random(seed=(ansible_date_time.epoch)) &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="列表相关的过滤器"><a href="#列表相关的过滤器" class="headerlink" title="列表相关的过滤器"></a>列表相关的过滤器</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">remote_user :</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">testvar7 :</span> [<span class="number">22</span>,<span class="number">18</span>,<span class="number">5</span>,<span class="number">33</span>,<span class="number">27</span>,<span class="number">30</span>]</span><br><span class="line">    <span class="attr">testvar8 :</span> [<span class="number">1</span>,[<span class="number">7</span>,<span class="number">2</span>,[<span class="number">15</span>,<span class="number">9</span>]],<span class="number">3</span>,<span class="number">5</span>]</span><br><span class="line">    <span class="attr">testvar9 :</span> [<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>,<span class="number">5</span>]</span><br><span class="line">    <span class="attr">testvar10 :</span> [<span class="number">1</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,[<span class="string">&#x27;QQ&#x27;</span>,<span class="string">&#x27;wechat&#x27;</span>],<span class="string">&#x27;CdEf&#x27;</span>]</span><br><span class="line">    <span class="attr">testvar11 :</span> [<span class="string">&#x27;abc&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;a&#x27;</span>,<span class="number">3</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>]</span><br><span class="line">    <span class="attr">testvar12 :</span> [<span class="string">&#x27;abc&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;a&#x27;</span>]</span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#返回列表长度,length与count等效,可以写为count</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | length &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#返回列表中的第一个值</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | first &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#返回列表中的最后一个值</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | last &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#返回列表中最小的值</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | min &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#返回列表中最大的值</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | max &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将列表升序排序输出</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | sort &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将列表降序排序输出</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | sort(reverse=true) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#返回纯数字非嵌套列表中所有数字的和</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar7 | sum &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#如果列表中包含列表，那么使用flatten可以&#x27;拉平&#x27;嵌套的列表</span></span><br><span class="line">      <span class="comment">#2.5版本中可用,执行如下示例后查看效果</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar8 | flatten &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#如果列表中嵌套了列表，那么将第1层的嵌套列表‘拉平’</span></span><br><span class="line">      <span class="comment">#2.5版本中可用,执行如下示例后查看效果</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar8 | flatten(levels=1) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#过滤器都是可以自由结合使用的，就好像linux命令中的管道符一样</span></span><br><span class="line">      <span class="comment">#如下，取出嵌套列表中的最大值</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar8 | flatten | max &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将列表中的元素合并成一个字符串</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar9 | join &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将列表中的元素合并成一个字符串,每个元素之间用指定的字符隔开</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar9 | join(&#x27; , &#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从列表中随机返回一个元素</span></span><br><span class="line">      <span class="comment">#对列表使用random过滤器时，不能使用start和step参数</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar9 | random &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#从列表中随机返回一个元素,并将ansible_date_time.epoch的值设置为随机种子</span></span><br><span class="line">      <span class="comment">#seed参数从ansible2.3版本开始可用</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar9 | random(seed=(ansible_date_time.epoch)) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#随机打乱顺序列表中元素的顺序</span></span><br><span class="line">      <span class="comment">#shuffle的字面意思为洗牌</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar9 | shuffle &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#随机打乱顺序列表中元素的顺序</span></span><br><span class="line">      <span class="comment">#在随机打乱顺序时，将ansible_date_time.epoch的值设置为随机种子</span></span><br><span class="line">      <span class="comment">#seed参数从ansible2.3版本开始可用</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar9 | shuffle(seed=(ansible_date_time.epoch)) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将列表中的每个元素变成纯大写</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar10 | upper &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将列表中的每个元素变成纯小写</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar10 | lower &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#去掉列表中重复的元素，重复的元素只留下一个</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar11 | unique &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#将两个列表合并，重复的元素只留下一个</span></span><br><span class="line">      <span class="comment">#也就是求两个列表的并集</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar11 | union(testvar12) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#取出两个列表的交集，重复的元素只留下一个</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar11 | intersect(testvar12) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#取出存在于testvar11列表中,但是不存在于testvar12列表中的元素</span></span><br><span class="line">      <span class="comment">#去重后重复的元素只留下一个</span></span><br><span class="line">      <span class="comment">#换句话说就是:两个列表的交集在列表1中的补集</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar11 | difference(testvar12) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#取出两个列表中各自独有的元素,重复的元素只留下一个</span></span><br><span class="line">      <span class="comment">#即去除两个列表的交集，剩余的元素</span></span><br><span class="line">      <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar11 | symmetric_difference(testvar12) &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="未定义变量相关的过滤器"><a href="#未定义变量相关的过滤器" class="headerlink" title="未定义变量相关的过滤器"></a>未定义变量相关的过滤器</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">testvar6:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#如果变量没有定义，则临时返回一个指定的默认值</span></span><br><span class="line">      <span class="comment">#注：如果定义了变量，变量值为空字符串，则会输出空字符</span></span><br><span class="line">      <span class="comment">#default过滤器的别名是d</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar5 | default(&#x27;zsythink&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#如果变量的值是一个空字符串或者变量没有定义，则临时返回一个指定的默认值</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar6 | default(&#x27;zsythink&#x27;,boolean=true) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">debug:</span></span><br><span class="line">      <span class="comment">#如果对应的变量未定义,则报出“Mandatory variable not defined.”错误，而不是报出默认错误</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; testvar5 | mandatory &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/20/ansible/8-%E8%BF%87%E6%BB%A4%E5%99%A8/%E5%9B%BE%E7%89%87ansible.jpg&quot; alt=&quot;ansible&quot;&gt;    &lt;/p&gt;</summary>
    
    
    
    <category term="ansible" scheme="http://example.com/categories/ansible/"/>
    
    
    <category term="调试器" scheme="http://example.com/tags/%E8%B0%83%E8%AF%95%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>7-playbook条件判断</title>
    <link href="http://example.com/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"/>
    <id>http://example.com/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/</id>
    <published>2021-08-16T15:59:08.000Z</published>
    <updated>2021-12-17T16:53:20.092Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/ansible.jpg" alt="ansible">  </p><span id="more"></span><h2 id="when"><a href="#when" class="headerlink" title="when"></a>when</h2><p>ansible playbook中使用<code>when</code>作为条件判断的关键字,在when使用时后面的变量不加 <span style="background-color: #EEEEEE;">{{ &emsp; }}</span>。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">如果目标主机为centos则输出yes</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">ansible_distribution</span> <span class="string">==</span> <span class="string">&quot;CentOS&quot;</span> <span class="comment">#ansible_distribution表示目标主机系统的发行版</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br></pre></td></tr></table></figure><p>表示若ansible_distribution为CentOS，则将会调用debug模块；若不是，则不会调用。<br><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Cwhen.png" alt="when">  </p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><strong>比较运算符</strong><br><code>==</code>:比较两个对象是否相等，相等为真<br><code>!=</code>:比较两个对象是否不等，不等为真<br><code>&gt; </code>:比较两个值的大小，如果左边的值大于右边的值，则为真<br><code>&lt; </code>:比较两个值的大小，如果左边的值小于右边的值，则为真<br><code>&gt;=</code>:比较两个值的大小，如果左边的值大于右边的值或左右相等，则为真<br><code>&lt;=</code>:比较两个值的大小，如果左边的值小于右边的值或左右相等，则为真<br><strong>逻辑运算符</strong><br><code>and</code>:逻辑与，当左边与右边同时为真，则返回真<br><code>or </code>:逻辑或，当左边与右边有任意一个为真，则返回真<br><code>not</code>:取反，对一个操作体取反<br><code>( )</code>:组合，将一组操作体包装在一起，形成一个较大的操作体<br>当逻辑运算符为<code>and</code>时有两种写法  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">when: a==&quot;1&quot; and b == &quot;1&quot;</span><br><span class="line">when :</span><br><span class="line">  - a==&quot;1&quot;</span><br><span class="line">  - b == &quot;1&quot;</span><br></pre></td></tr></table></figure><h2 id="ignore-errors"><a href="#ignore-errors" class="headerlink" title="ignore_errors"></a>ignore_errors</h2><p>当前task执行报错，ansible也会忽略这个错误，继续执行playbook；若不使用，则当task报错时该playbook将会运行中断。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">/ansible/a是一个不存在的路径</span></span><br><span class="line">      <span class="attr">shell :</span> <span class="string">ls</span> <span class="string">/ansible/a</span></span><br><span class="line">      <span class="attr">ignore_errors :</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">register :</span> <span class="string">result</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">result的相关信息,查看是否执行失败</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;result.failed&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Cignore_errors.png" alt="ignore_errors">  </p><h2 id="tests"><a href="#tests" class="headerlink" title="tests"></a>tests</h2><p>tests是jinjia2中的，借助tests可以进行判断操作。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">testpath :</span> <span class="string">/opt/test</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断ansible管理端是否有/opt/testtest这个路径</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">testpath</span>  <span class="string">exists</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;testpath&#125;&#125;</span> is exists&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Ctests.png" alt="tests"><br><code>is exists</code>是判断ansible管理端主机的路径的，当然也可以使用<code>is not exists</code>。  </p><h3 id="判断变量的tests"><a href="#判断变量的tests" class="headerlink" title="判断变量的tests"></a>判断变量的tests</h3><p><strong>defined</strong>：判断变量是否定义，定义则返回真<br><strong>undefined</strong>：判断变量是否定义，未定义则返回真<br><strong>none</strong>：判断变量是否为空值，若已定义且为空值，则返回真  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">num1 :</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">num3 :</span>  </span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断num1是否定义</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">num1</span> <span class="string">is</span> <span class="string">defined</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;num1 is <span class="template-variable">&#123;&#123;num1&#125;&#125;</span>&quot;</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断num2是否定义</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">num2</span> <span class="string">is</span> <span class="string">undefined</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;num2 is undefined&quot;</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断num3是否为空值</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">num3</span> <span class="string">is</span> <span class="string">none</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;num3 is none&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E5%88%A4%E6%96%AD%E5%8F%98%E9%87%8F.png" alt="判断变量">  </p><h3 id="判断执行结果的tests"><a href="#判断执行结果的tests" class="headerlink" title="判断执行结果的tests"></a>判断执行结果的tests</h3><p><strong>success或successded</strong>：通过任务的返回信息判断任务执行状态，任务执行成功返回真<br><strong>failure或failed</strong>：通过任务的返回信息判断任务执行状态，任务执行失败返回真<br><strong>change或changed</strong>：任务执行状态为change为真<br><strong>skip或skipped</strong>：任务没有满足条件，跳过执行时返回为真  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span></span><br><span class="line">      <span class="attr">condition :</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">设定一个判断场景</span></span><br><span class="line">      <span class="attr">shell :</span> <span class="string">&quot;cat /home/test&quot;</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">condition</span> <span class="string">==</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">      <span class="attr">register :</span> <span class="string">returnmsg</span></span><br><span class="line">      <span class="attr">ignore_errors :</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">查看执行状态</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;returnmsg&#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断执行结果是否为success</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">success</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;success&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断执行结果是否为failed</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">failure</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;failure&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断执行结果是否为change</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">change</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;change&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断执行结果是否为skip</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">returnmsg</span> <span class="string">is</span> <span class="string">skip</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;skip&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E5%88%A4%E6%96%AD%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="判断执行结果">  </p><h3 id="判断路径的tests"><a href="#判断路径的tests" class="headerlink" title="判断路径的tests"></a>判断路径的tests</h3><p><em><strong>如下的tests都是针对ansible管理端主机中的路径，与目标主机无关</strong></em><br><strong>file</strong> : 判断路径是否是一个文件，如果路径是一个文件则返回真<br><strong>directory</strong> ：判断路径是否是一个目录，如果路径是一个目录则返回真<br><strong>link</strong> ：判断路径是否是一个软链接，如果路径是一个软链接则返回真<br><strong>mount</strong> :判断路径是否是一个挂载点，如果路径是一个挂载点则返回真<br><strong>exists</strong> :判断路径是否存在，如果路径存在则返回真  </p><h3 id="判断字符串的tests"><a href="#判断字符串的tests" class="headerlink" title="判断字符串的tests"></a>判断字符串的tests</h3><p><strong>lower</strong>：判断包含字母的字符串中的字母是否是纯小写，字符串中的字母全部为小写则返回真<br><strong>upper</strong>：判断包含字母的字符串中的字母是否是纯大写，字符串中的字母全部为大写则返回真  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">str1 :</span> <span class="string">&quot;ABC&quot;</span></span><br><span class="line">    <span class="attr">str2 :</span> <span class="string">&quot;abc&quot;</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断str1是否全为大写字母</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">str1</span> <span class="string">is</span> <span class="string">upper</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;str1全为大写，str1=<span class="template-variable">&#123;&#123;str1&#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断str2是否全为小写字母</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">str2</span> <span class="string">is</span> <span class="string">lower</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;str2全为大写，str1=<span class="template-variable">&#123;&#123;str2&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%A7%E5%B0%8F%E5%86%99.png" alt="判断字符串大小写">  </p><h3 id="判断整除的tests"><a href="#判断整除的tests" class="headerlink" title="判断整除的tests"></a>判断整除的tests</h3><p><strong>even</strong> : 判断数值是否为偶数<br><strong>odd</strong> : 判断数值是否为奇数<br><strong>divisibleby(NUM)</strong>:判断是可以被NUM整除  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">vars :</span></span><br><span class="line">    <span class="attr">num1 :</span> <span class="number">6</span></span><br><span class="line">    <span class="attr">num2 :</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">num3 :</span> <span class="number">9</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断num1是否为偶数</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">num1</span> <span class="string">is</span> <span class="string">even</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;num1为<span class="template-variable">&#123;&#123;num1&#125;&#125;</span>是整数&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断num2是否为偶数</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">num2</span> <span class="string">is</span> <span class="string">odd</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;num2为<span class="template-variable">&#123;&#123;num2&#125;&#125;</span>是奇数&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断num3是否能被3整除</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">num2</span> <span class="string">is</span> <span class="string">divisibleby(3)</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;num3为<span class="template-variable">&#123;&#123;num3&#125;&#125;</span>可以被3整除&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E5%88%A4%E6%96%AD%E6%95%B4%E9%99%A4.png" alt="判断整除">  </p><h3 id="其他判断的tests"><a href="#其他判断的tests" class="headerlink" title="其他判断的tests"></a>其他判断的tests</h3><blockquote><p><strong>version</strong>：可以用于对比两个版本号的大小，或者与指定的版本号进行对比，使用语法为 version(‘版本号’, ‘比较操作符’)  </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">ver1 :</span> <span class="number">1.9</span><span class="number">.12</span></span><br><span class="line">    <span class="attr">ver2 :</span> <span class="number">7.2</span><span class="number">.21</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">比较两个版本号的大小</span>  </span><br><span class="line">      <span class="attr">when :</span> <span class="string">ver2</span> <span class="string">is</span> <span class="string">version(ver1,&quot;&gt;&quot;)</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;ver2&gt;ver1&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E7%89%88%E6%9C%AC%E5%8F%B7%E6%AF%94%E8%BE%83.png" alt="版本号比较"><br><strong>大于</strong>：&gt;, gt<br><strong>大于等于</strong>：&gt;=, ge<br><strong>小于</strong>：&lt;, lt<br>**小于等于**：&lt;=, le<br>**等于**： ==, =, eq<br>**不等于**：!=, &lt;&gt;, ne  </p><blockquote><p>subset：判断一个list是不是另一个list的子集，是另一个list的子集时返回真<br>superset : 判断一个list是不是另一个list的父集，是另一个list的父集时返回真  </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">a :</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">    <span class="attr">b :</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">输出a与b的值</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;a=<span class="template-variable">&#123;&#123;a&#125;&#125;</span>   b=<span class="template-variable">&#123;&#123;b&#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断b是否为a的子集</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">b</span> <span class="string">is</span> <span class="string">subset(a)</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;b 是 a 的子集&quot;</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断a是否为b的父集</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">a</span> <span class="string">is</span> <span class="string">superset(b)</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;a 是 b 的父集&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E5%88%A4%E6%96%AD%E5%AD%90%E9%9B%86%E7%88%B6%E9%9B%86.png" alt="判断子集父集">  </p><blockquote><p>string：判断对象是否是一个字符串，是字符串则返回真<br>number：判断对象是否是一个数字，是数字则返回真  </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">var1 :</span> <span class="string">a</span></span><br><span class="line">    <span class="attr">var2 :</span> <span class="string">&quot;2&quot;</span></span><br><span class="line">    <span class="attr">var3 :</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断var1是否为字符串</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">var1</span> <span class="string">is</span> <span class="string">string</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断var2是否为字符串</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">var2</span> <span class="string">is</span> <span class="string">string</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断var3是否为字符串</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">var3</span> <span class="string">is</span> <span class="string">string</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断var1是否为数字</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">var1</span> <span class="string">is</span> <span class="string">number</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断var2是否为数字</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">var2</span> <span class="string">is</span> <span class="string">number</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">判断var3是否为数字</span></span><br><span class="line">      <span class="attr">when :</span> <span class="string">var3</span> <span class="string">is</span> <span class="string">number</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;yes&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5C%E5%88%A4%E6%96%AD%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%95%B0%E5%AD%97.png" alt="判断是字符串、数字"><br>可以看出数字只有在被双引号引起时才会被认定是一个数字，字符、字符串加不加双引号都被认定为是字符串  </p><h2 id="block"><a href="#block" class="headerlink" title="block"></a>block</h2><p><code>block</code>可以将多个任务整合成一个块，这个块将被当做是一个整体，当这个block满足所在的tasks中的条件判断时，这个块里的任务都会被执行。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">&quot;学习block&quot;</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;任务一&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">block :</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">          <span class="attr">msg :</span> <span class="string">&quot;任务二&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">          <span class="attr">msg :</span> <span class="string">&quot;任务三&quot;</span></span><br><span class="line">      <span class="attr">when :</span> <span class="number">1</span> <span class="string">&lt;</span> <span class="number">2</span>  <span class="comment">#注意when对齐的位置，该when是对应整个block的</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Cblock.png" alt="block">  </p><h3 id="rescue"><a href="#rescue" class="headerlink" title="rescue"></a>rescue</h3><p><code>block</code>除了能在符合when条件是执行多个任务，还能与<code>rescue</code>一同使用，应对<code>block块</code>中任务出错的场景,当<code>block块</code>中任务无误时则不会执行  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">block :</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">            <span class="attr">msg :</span> <span class="string">&quot;block块中任务一&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">shell :</span> <span class="string">ls</span> <span class="string">/asd</span></span><br><span class="line">      <span class="attr">rescue :</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">            <span class="attr">msg :</span> <span class="string">&quot;block块中某一个任务报错&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Crescue.png" alt="rescue"><br><code>rescue</code>中可以定义多个任务</p><h3 id="always"><a href="#always" class="headerlink" title="always"></a>always</h3><p><code>always</code>关键字，无论block中的任务执行成功还是失败，always中的任务都会被执行。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">block :</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">shell :</span> <span class="string">ls</span> <span class="string">/asd</span></span><br><span class="line">      <span class="attr">always :</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">            <span class="attr">msg :</span> <span class="string">block</span> <span class="string">块任务结束</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Calways.png" alt="always">  </p><h2 id="fail"><a href="#fail" class="headerlink" title="fail"></a>fail</h2><p><code>fail</code>模块，将任务标记为失败终止playbook，一般会与<code>when</code>一起使用退出playbook执行。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">任务一</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">fail :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">任务二fail模块输出</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">任务三</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Cfail.png" alt="fail">  </p><h2 id="failed-when"><a href="#failed-when" class="headerlink" title="failed_when"></a>failed_when</h2><p>表示符合条件时，将任务标记为失败终止playbook  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">error</span></span><br><span class="line">      <span class="attr">register :</span> <span class="string">result</span></span><br><span class="line">      <span class="attr">failed_when :</span> <span class="string">result.msg</span> <span class="string">==</span> <span class="string">&quot;error&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%5Cfailed_when.png" alt="failed_when">  </p><h2 id="changed-when"><a href="#changed-when" class="headerlink" title="changed_when"></a>changed_when</h2><p>与<code>failed_when</code>类似，符合条件时将任务状态标记为changed</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/16/ansible/7-playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/ansible.jpg&quot; alt=&quot;ansible&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="ansible" scheme="http://example.com/categories/ansible/"/>
    
    
    <category term="playbook条件判断" scheme="http://example.com/tags/playbook%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>6-playbook流程控制</title>
    <link href="http://example.com/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
    <published>2021-08-14T16:25:09.000Z</published>
    <updated>2021-09-26T01:31:35.622Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/ansible.jpg" alt="ansible">  </p><span id="more"></span><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><h2 id="with-items"><a href="#with-items" class="headerlink" title="with_items"></a>with_items</h2><p>/home/ansible/hosts 配置清单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test3</span><br><span class="line">test4</span><br><span class="line">192.168.27.7</span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E6%9C%AA%E5%88%86%E7%BB%84%E7%9A%84%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D.png" alt="未分组的主机的主机名"><br>当想要获取第二条主机名时可以使用<code>&#123;&#123;groups.ungrouped[1]&#125;&#125;</code>来进行获取。<br><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E7%AC%AC%E4%BA%8C%E6%9D%A1%E6%9C%AA%E5%88%86%E7%BB%84%E7%9A%84%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D.png" alt="第二条未分组的主机的主机名"><br>可以在playbook中使用with_items进行循环</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">输出未分组的主机的主机名</span></span><br><span class="line">      <span class="comment">#关键字with_items会将&#123;&#123;groups.ungrouped&#125;&#125;的列表信息进行处理，将每条信息单独放在&#123;&#123;item&#125;&#125;中，获取&#123;&#123;item&#125;&#125;的值时会循环获取列表中的每一条信息</span></span><br><span class="line">      <span class="attr">with_items :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;groups.ungrouped&#125;&#125;</span>&quot;</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E5%BE%AA%E7%8E%AF%E8%BE%93%E5%87%BA%E6%9C%AA%E5%88%86%E7%BB%84%E7%9A%84%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E5%90%8D.png" alt="循环输出未分组的主机的主机名">  </p><h3 id="自定义列表进行循环"><a href="#自定义列表进行循环" class="headerlink" title="自定义列表进行循环"></a>自定义列表进行循环</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">自定义一个列表进行循环</span></span><br><span class="line">     <span class="comment">#with_items : [1,2,3]</span></span><br><span class="line">      <span class="attr">with_items :</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="number">1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">3</span> </span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%97%E8%A1%A8%E8%BF%9B%E8%A1%8C%E5%BE%AA%E7%8E%AF.png" alt="自定义列表进行循环">  </p><h3 id="循环复杂列表"><a href="#循环复杂列表" class="headerlink" title="循环复杂列表"></a>循环复杂列表</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">循环复杂列表</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> &#123;<span class="attr">test1 :</span> <span class="number">1</span>, <span class="attr">test2 :</span> <span class="number">2</span>&#125;</span><br><span class="line">        <span class="bullet">-</span> &#123;<span class="attr">test1 :</span> <span class="string">&quot;a&quot;</span>, <span class="attr">test2 :</span> <span class="string">&quot;b&quot;</span>&#125;</span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item.test1&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E5%BE%AA%E7%8E%AF%E5%A4%8D%E6%9D%82%E5%88%97%E8%A1%A8.png" alt="循环复杂列表">  </p><h3 id="初步实际运用"><a href="#初步实际运用" class="headerlink" title="初步实际运用"></a>初步实际运用</h3><p>循环创建文件  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span></span><br><span class="line">    <span class="attr">dirs :</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/opt/a&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/opt/c&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/opt/b&quot;</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">循环创建文件</span></span><br><span class="line">      <span class="attr">with_items :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;dirs&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">file :</span></span><br><span class="line">        <span class="attr">path :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state :</span> <span class="string">touch</span> </span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E5%BE%AA%E7%8E%AF%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6.png" alt="循环创建文件">  </p><h2 id="with-list"><a href="#with-list" class="headerlink" title="with_list"></a>with_list</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">循环输出列表</span></span><br><span class="line">      <span class="attr">with_list :</span> </span><br><span class="line">        <span class="bullet">-</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">        <span class="bullet">-</span> [<span class="string">a</span>,<span class="string">b</span>,<span class="string">c</span>]</span><br><span class="line">        <span class="comment">#- </span></span><br><span class="line">        <span class="comment">#  - 1</span></span><br><span class="line">        <span class="comment">#  - 2</span></span><br><span class="line">        <span class="comment">#  - 3</span></span><br><span class="line">        <span class="comment">#- </span></span><br><span class="line">        <span class="comment">#  - a</span></span><br><span class="line">        <span class="comment">#  - b</span></span><br><span class="line">        <span class="comment">#  - c</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br><span class="line"><span class="string">```</span>  </span><br><span class="line"><span class="type">![</span><span class="string">循环输出列表](6-playbook流程控制\循环输出列表.png)</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">## with_together  </span></span><br><span class="line"><span class="string">合并对齐:两个列表中相同位置的元素合并</span>  </span><br><span class="line"><span class="string">```YAML</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">对其合并</span></span><br><span class="line">      <span class="attr">with_together :</span> </span><br><span class="line">        <span class="bullet">-</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">        <span class="bullet">-</span> [<span class="string">a</span>,<span class="string">b</span>,<span class="string">c</span>]</span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E5%90%88%E5%B9%B6%E5%AF%B9%E9%BD%90.png" alt="合并对齐"><br>若不能对齐的情况  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">对其合并</span></span><br><span class="line">      <span class="attr">with_together :</span> </span><br><span class="line">        <span class="bullet">-</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">        <span class="bullet">-</span> [<span class="string">a</span>,<span class="string">b</span>,<span class="string">c</span>]</span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E4%B8%8D%E8%83%BD%E5%AF%B9%E9%BD%90%E7%9A%84%E6%83%85%E5%86%B5.png" alt="不能对齐的情况">  </p><h2 id="with-cartesian"><a href="#with-cartesian" class="headerlink" title="with_cartesian"></a>with_cartesian</h2><p>交叉组合</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">对其合并</span></span><br><span class="line">      <span class="attr">with_cartesian :</span> </span><br><span class="line">        <span class="bullet">-</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">        <span class="bullet">-</span> [<span class="string">a</span>,<span class="string">b</span>,<span class="string">c</span>]</span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5Cwith_cartesian.png" alt="with_cartesian">  </p><h2 id="with-sequence"><a href="#with-sequence" class="headerlink" title="with_sequence"></a>with_sequence</h2><p>按照顺序生成数字序列  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">按照顺序生成数字序列</span>  </span><br><span class="line">      <span class="attr">with_sequence :</span>   <span class="comment">#start=1 end=10 stride=2</span></span><br><span class="line">        <span class="string">start=1</span>   <span class="comment">#中间不要有空格</span></span><br><span class="line">        <span class="string">end=10</span></span><br><span class="line">        <span class="string">stride=2</span>  <span class="comment">#步长</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E6%8C%89%E7%85%A7%E9%A1%BA%E5%BA%8F%E7%94%9F%E6%88%90%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97.png" alt="按照顺序生成数字序列"><br>步长可以设定为负数，则表示递减，相应的start要比end数值大。<br>还有一种简写方式 ，简写方式默认stride为1，start为1  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span>  </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">简写方式</span></span><br><span class="line">      <span class="attr">with_sequence :</span> <span class="comment">#count=5 </span></span><br><span class="line">        <span class="string">count=5</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="with-random-choice"><a href="#with-random-choice" class="headerlink" title="with_random_choice"></a>with_random_choice</h2><p>随机返回列表中一个值  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">随机返回列表中一个值</span></span><br><span class="line">      <span class="attr">with_random_choice :</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">2</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">3</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">4</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="with-dict"><a href="#with-dict" class="headerlink" title="with_dict"></a>with_dict</h2><p>循环键值对  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span></span><br><span class="line">    <span class="attr">users :</span></span><br><span class="line">      <span class="attr">name :</span> <span class="string">xiaoming</span></span><br><span class="line">      <span class="attr">age :</span> <span class="number">10</span> </span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">循环键值对</span></span><br><span class="line">      <span class="attr">with_dict :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;users&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span> <span class="comment">#可以使用&quot;&#123;&#123;item.key&#125;&#125;&quot;、&quot;&#123;&#123;item.value&#125;&#125;&quot;来只获取键或者值</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5C%E5%BE%AA%E7%8E%AF%E9%94%AE%E5%80%BC%E5%AF%B9.png" alt="循环键值对">  </p><h2 id="with-file"><a href="#with-file" class="headerlink" title="with_file"></a>with_file</h2><p>循环读取ansible管理端主机本地的多个文件  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">files:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/test/a</span>  </span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/test/b</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/test/c</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">循环读取ansible管理端主机本地文件</span></span><br><span class="line">      <span class="attr">with_file:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;files&#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5Cwith_file.png" alt="with_file">  </p><h2 id="with-fileglob"><a href="#with-fileglob" class="headerlink" title="with_fileglob"></a>with_fileglob</h2><p>在ansible管理端匹配文件名称,不会匹配到目录  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">配置/opt/test/下的所有文件</span></span><br><span class="line">      <span class="attr">with_fileglob :</span> <span class="string">/opt/test/*</span></span><br><span class="line">      <span class="attr">debug :</span></span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;item&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%5Cwith_fileglob.png" alt="with_fileglob">  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/15/ansible/6-playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/ansible.jpg&quot; alt=&quot;ansible&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="ansible" scheme="http://example.com/categories/ansible/"/>
    
    
    <category term="playbook流程控制" scheme="http://example.com/tags/playbook%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>5-playbook拓展</title>
    <link href="http://example.com/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/"/>
    <id>http://example.com/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/</id>
    <published>2021-08-12T13:43:22.000Z</published>
    <updated>2022-05-24T07:54:39.879Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/ansible.jpg" alt="ansible">  </p><span id="more"></span><h1 id="Handlers"><a href="#Handlers" class="headerlink" title="Handlers"></a>Handlers</h1><p>首先我们设定以这个场景。<br>想要将test3主机中/home/test.txt文件中的<code>我们现在学习XXX</code>修改为<code>我们现在学习ansible</code>，并打印修改后的结果。<br>test.txt文本  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">我们现在学习XXX</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>编写的playbook为  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">修改test3主机中/home/test.txt文件中的`我们现在学习XXX`修改为`我们现在学习ansible`</span></span><br><span class="line">     <span class="attr">lineinfile :</span></span><br><span class="line">       <span class="attr">path :</span> <span class="string">/home/test.txt</span></span><br><span class="line">       <span class="attr">regexp :</span> <span class="string">&quot;我们现在学习XXX&quot;</span></span><br><span class="line">       <span class="attr">line :</span> <span class="string">&quot;我们现在学习ansible&quot;</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">将/home/test.txt中的内容输出到/home/test1.txt</span></span><br><span class="line">     <span class="attr">shell:</span> <span class="string">cat</span> <span class="string">/home/test.txt</span> <span class="string">&gt;</span> <span class="string">/home/test1.txt</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="执行结果"><br>可以看出两个任务都执行成功了。<br>如果要再执行一次该playbook呢。<br><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C2.png" alt="执行结果"><br>task1因为文件状态与playbook中的状态是一致的，所以为绿的；但是task2为黄色，虽然也执行成功，最后的状态与我们的设定是一致的，但是相当于白执行了一次。在该例子中对结果或者过程影响不大，但是当我们需要修改某个服务的配置文件并进行重启服务时，就会对想先关的业务造成印象。<br>handlers可以对这种问题进行解决，简单来说handlers就是另一种tasks，handlers中的任务会被tasks中的任务进行调用。例如task1调用handler1，当task1执行状态为黄色时，handler1才会被执行，当task1执行状态为绿色，即task1没有被真正被执行时，handlers不会被执行。<br>对上面的palybook进行修改，<code>notify</code>执指向handlers中的任务（即handlers中任务的name）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">修改test3主机中/home/test.txt文件中的`我们现在学习XXX`修改为`我们现在学习ansible`</span></span><br><span class="line">     <span class="attr">lineinfile :</span></span><br><span class="line">       <span class="attr">path :</span> <span class="string">/home/test.txt</span></span><br><span class="line">       <span class="attr">regexp :</span> <span class="string">&quot;我们现在学习XXX&quot;</span></span><br><span class="line">       <span class="attr">line :</span> <span class="string">&quot;我们现在学习ansible&quot;</span></span><br><span class="line">     <span class="attr">notify :</span> <span class="string">重定向输出</span></span><br><span class="line">  <span class="attr">handlers :</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">重定向输出</span></span><br><span class="line">     <span class="attr">shell:</span> <span class="string">cat</span> <span class="string">/home/test.txt</span> <span class="string">&gt;</span> <span class="string">/home/test1.txt</span></span><br></pre></td></tr></table></figure><p>然后我们对/home/test.txt进行还原，然后重新执行playbook。<br><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E9%87%8D%E6%96%B0%E6%89%A7%E8%A1%8C.png" alt="重新执行"><br>可以看出task和handler都执行了。<br>再执行一边。<br><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E9%87%8D%E6%96%B0%E6%89%A7%E8%A1%8C2.png" alt="重新执行2"><br>可以看到只有task被执行了，handler没有被执行。  </p><h2 id="Handlers进阶"><a href="#Handlers进阶" class="headerlink" title="Handlers进阶"></a>Handlers进阶</h2><p><code>notify</code>调用多个handler</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">notify :</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">testhandlers1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">testhandlers2</span></span><br></pre></td></tr></table></figure><h3 id="mate模块-mate-flush-handlers"><a href="#mate模块-mate-flush-handlers" class="headerlink" title="mate模块 (mate:flush_handlers)"></a>mate模块 (mate:flush_handlers)</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testtask1</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/</span></span><br><span class="line">      <span class="attr">notify :</span> <span class="string">testhandlers2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testtask2</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/</span></span><br><span class="line">      <span class="attr">notify :</span> <span class="string">testhandlers1</span></span><br><span class="line">  <span class="attr">handlers :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testhandlers1</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testhandlers2</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E5%A4%9A%E4%B8%AAhandler.png" alt="多个handler"><br>默认情况下handler执行的顺序与handler在playbook的handlers模块定义的顺序是相同的，与”handler被notify”的顺序无关。<strong>所有task执行完毕后，才会执行各个handler，并不是执行完某个task后，立即执行对应的handler</strong>。若要执行完task后马上执行对应handler，则需要使用mate模块。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testtask1</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/</span></span><br><span class="line">      <span class="attr">notify :</span> <span class="string">testhandlers2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">meta :</span> <span class="string">flush_handlers</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testtask2</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/</span></span><br><span class="line">      <span class="attr">notify :</span> <span class="string">testhandlers1</span></span><br><span class="line">  <span class="attr">handlers :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testhandlers1</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">testhandlers2</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/mate.png" alt="mate"><br>在testtask1和testtask2之间有一个mate任务，meta任务能够影响ansible内部运行方式，<code>meta : flush_handlers</code>表示立即执行之前的task所对应handler，mate之前有多个notify调用时，被调用的handler的执行顺序还是与handlers模块的顺序一致。  </p><h3 id="listen模块"><a href="#listen模块" class="headerlink" title="listen模块"></a>listen模块</h3><p>使用<code>listen</code>对handler进行“分组”，使用notify调用改组时将会调用该组下的成员。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">test1</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home</span></span><br><span class="line">      <span class="attr">notify :</span> <span class="string">listenTest</span></span><br><span class="line">  <span class="attr">handlers :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">handler1</span></span><br><span class="line">      <span class="attr">listen :</span> <span class="string">listenTest</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">handler2</span></span><br><span class="line">      <span class="attr">listen :</span> <span class="string">listenTest</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/listen.png" alt="listen">  </p><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>playbook中的变量名以英文大小写字母开头，中间可以包含下划线和数字。<br>在Inventory文件中以<code>=</code>来为变量赋值，在playbook或者变量配置文件中以<code>:</code>来为变量赋值。  </p><h2 id="playbook变量"><a href="#playbook变量" class="headerlink" title="playbook变量"></a>playbook变量</h2><ol><li><p>运行playbook时指定额外的变量  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook test.yml -e &quot;newVar=test&quot;  #指定额外的变量</span><br><span class="line">ansible-playbook test.yml -e &quot;@newVar.yml&quot;  #指定变量配置文件</span><br></pre></td></tr></table></figure></li><li><p>playbook中定义变量<br>使用<code>vars</code>来进行定义变量。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">var1 :</span> <span class="string">test1</span></span><br><span class="line">    <span class="attr">var2 :</span> <span class="string">test2</span></span><br><span class="line">   <span class="comment">#- var1 : test1   这样定义也是可以的</span></span><br><span class="line">   <span class="comment">#- var2 : test2</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">变量测试</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">var1=&#123;&#123;var1&#125;&#125;</span>  <span class="string">var2=&#123;&#123;var2&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>debug模块的msg参数可以自定义输出；而var参数可以直接输出变量信息，且不需要使用两个括号进行引起</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts : test3</span><br><span class="line">  vars :</span><br><span class="line">   - var1 : test1</span><br><span class="line">  tasks :</span><br><span class="line">   - name : 变量测试</span><br><span class="line">     debug :</span><br><span class="line">       var :</span><br><span class="line">         var1</span><br></pre></td></tr></table></figure><p>也可以在playbook中引用变量文件  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#palybook文件</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars_files :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">vars.yml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vars.yml</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">变量文件测试</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;var1&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">var1 :</span> <span class="string">test</span></span><br></pre></td></tr></table></figure><p>在使用<code>：</code>的方式引用变量<code>&#123;&#123;var1&#125;&#125;</code>时，当<code>&#123;&#123;var1&#125;&#125;</code>处于开头位置需要加上引号，当<code>&#123;&#123;var1&#125;&#125;</code>前有字符串时则可以不加双引号。<br>除了使用<code>：</code>来进行引用变量，还可以使用<code>=</code>来引用变量，使用<code>=</code>来引用变量时可以不用考虑加不加双引号。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">var1 :</span> <span class="string">test1</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">变量测试</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="string">msg</span> <span class="string">=</span> &#123;&#123;<span class="string">var1</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>在playbook中还可以以类似”属性”的方式定义变量  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">vars :</span> </span><br><span class="line">    <span class="attr">people :</span> </span><br><span class="line">      <span class="attr">name :</span> <span class="string">xiaoming</span></span><br><span class="line">      <span class="attr">age :</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">变量测试</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">名字为&#123;&#123;people.name&#125;&#125;,年龄为&#123;&#123;people.age&#125;&#125;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="注册变量"><a href="#注册变量" class="headerlink" title="注册变量"></a>注册变量</h2><p>注册变量就是将操作的结果，包括标准输出和标准错误输出，保存到变量中。在同一个yml中操作同一台主机时，前一个play定义了register变量，后面的同一台主机中也可以调用到该register变量。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">registerTest</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">hostname</span></span><br><span class="line">      <span class="attr">register :</span> <span class="string">hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">输出注册变量信息</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;hostname&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E6%B3%A8%E5%86%8C%E5%8F%98%E9%87%8F.png" alt="注册变量"><br>这时就可以使用类似这样的方式引用详细的值  </p><h2 id="Facts（收集系统信息）"><a href="#Facts（收集系统信息）" class="headerlink" title="Facts（收集系统信息）"></a>Facts（收集系统信息）</h2><p>运行playbook之前，ansible默认会先抓取playbook指定的所有主机的系统信息，这些信息就成为facts。<br><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/playbook%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%E5%BC%80%E5%A4%B4.png" alt="playbook执行结果开头"><br>facts信息包含远程主机的CPU、IP、磁盘空间、操作系统信息等等。可以根据这些信息来判断是否进行下一步任务，或者将这些信息写入到某个配置中。<br>这些信息可以使用setup模块来获取  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -m setup</span><br></pre></td></tr></table></figure><p>对于使用不到这些信息的playbook来说收集facts的过程是可以跳过的。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">gather_facts :</span> <span class="literal">no</span></span><br></pre></td></tr></table></figure><h3 id="facts变量"><a href="#facts变量" class="headerlink" title="facts变量"></a>facts变量</h3><p>定义远程主机的facts变量，需要在远程主机的<code>/etc/ansible/facts.d</code>目录下创建INI风格的xxx.fact文件。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/ansible/facts.d/test.fact文件</span></span><br><span class="line">[<span class="string">test</span>]</span><br><span class="line"><span class="string">user=test</span></span><br><span class="line"><span class="string">pwd=/etc/ansible/facts.d</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/facts%E5%8F%98%E9%87%8F.png" alt="facts变量"><br><code>filter=ansible_local</code> 表示将ansible_local（本地facts）从所有facts中过滤出来，也可以使用<code>*local</code>类似这样的通配符进行匹配。<br>setup收集的本地fact变量是从/etc/ansible/facts.d目录下的文件中收集，当我们的facts变量文件是在远程主机的其他目录下时，需要指定文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#当facts变量文件是在/tmp目录下</span><br><span class="line">ansible test3 -m setup -a &#x27;fact_path=/tmp&#x27;</span><br></pre></td></tr></table></figure><h2 id="通过set-fact定义变量"><a href="#通过set-fact定义变量" class="headerlink" title="通过set_fact定义变量"></a>通过set_fact定义变量</h2><p>可以使用set_fact模块在tesk中定义变量。在同一个yml中操作同一台主机时，前一个play定义了set_fact变量，后面的同一台主机中也可以调用到该set_fact变量。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">set_fact测试</span></span><br><span class="line">      <span class="attr">set_fact :</span> </span><br><span class="line">        <span class="attr">test_var :</span> <span class="string">&quot;testvar&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">测试输出</span> </span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;test_var&#125;&#125;</span>&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">测试set_fact变量</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">输出上一个play中的test_var=</span> &#123;&#123;<span class="string">test_var</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/set_fact.png" alt="set_fact"></p><h2 id="提示用户输入信息并写入到变量"><a href="#提示用户输入信息并写入到变量" class="headerlink" title="提示用户输入信息并写入到变量"></a>提示用户输入信息并写入到变量</h2><p>实现交互式输入信息，并将信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars_prompt:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;your_name&quot;</span>    <span class="comment">#输入的值存入的变量</span></span><br><span class="line">      <span class="attr">prompt:</span> <span class="string">&quot;What is your name&quot;</span>   <span class="comment">#输入提示</span></span><br><span class="line">      <span class="attr">private:</span> <span class="literal">no</span>     <span class="comment">#表示显示输入</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;your_age&quot;</span></span><br><span class="line">      <span class="attr">prompt:</span> <span class="string">&quot;How old are you&quot;</span></span><br><span class="line">      <span class="attr">private:</span> <span class="literal">no</span>    </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">output</span> <span class="string">vars</span></span><br><span class="line">     <span class="attr">debug:</span></span><br><span class="line">      <span class="attr">msg:</span> <span class="string">Your</span> <span class="string">name</span> <span class="string">is</span> &#123;&#123;<span class="string">your_name</span>&#125;&#125;<span class="string">,You</span> <span class="string">are</span> &#123;&#123;<span class="string">your_age</span>&#125;&#125; <span class="string">years</span> <span class="string">old.</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/%E4%BA%A4%E4%BA%92%E8%BE%93%E5%85%A5.png" alt="交互输入"><br>这样在输入值的时候就可以看到输入的确切的值，若是不想显示则将private设置为yes(默认选项)。  </p><h2 id="内置变量"><a href="#内置变量" class="headerlink" title="内置变量"></a>内置变量</h2><h3 id="ansible-version"><a href="#ansible-version" class="headerlink" title="ansible_version"></a>ansible_version</h3><p>内置变量ansible_version可以获取到ansible的版本号  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -m debug -a &quot;msg=&#123;&#123;ansible_version&#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/ansible_version.png" alt="ansible_version">  </p><h3 id="hostvars"><a href="#hostvars" class="headerlink" title="hostvars"></a>hostvars</h3><p>hostvars可以在操作A主机时获取到B主机的信息。  </p><ul><li><p>收集facts信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test4</span></span><br><span class="line">  <span class="attr">name :</span> <span class="string">play1</span> <span class="string">hostsname</span> <span class="string">is</span> <span class="string">test4</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">name :</span> <span class="string">play2</span> <span class="string">hostsname</span> <span class="string">is</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">hostvars[&#x27;test4&#x27;].ansible_hostname:&#123;&#123;hostvars[&#x27;test4&#x27;].ansible_hostname&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/hostvars1.png" alt="hostvars1"><br>play1并没有task，但是这并不代表play1是没有用的，正是运行过play1收集了test4的facts信息，在play2中才可以使用fast4的facts信息。  </p></li><li><p>收集注册变量、主机变量、组变量<br>收集注册变量时，不需要像收集facts信息一样需要事先进行收集，同样的也可以收集在主机清单中配置的主机变量与组变量  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test4</span> </span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">shell :</span> <span class="string">&quot;echo this is test4 &quot;</span></span><br><span class="line">      <span class="attr">register :</span> <span class="string">testvar</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;hostvars.test4.testvar&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/hostvars2.png" alt="hostvars2">  </p></li><li><p>收集定义变量<br>在play中使用vars定义的变量是无法被hostvars收集的，但是可以通过set_fact进行定义，这样变量就可以像facts信息一样被收集。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test4</span> </span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">set_fact :</span> </span><br><span class="line">        <span class="attr">testvar :</span> <span class="string">testvalue</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> </span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;hostvars.test4.testvar&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/hostvars3.png" alt="hostvars3">  </p></li></ul><h3 id="inventory-hostname"><a href="#inventory-hostname" class="headerlink" title="inventory_hostname"></a>inventory_hostname</h3><p>inventory_hostname可以获取到被操作主机的主机名（并不是linux的主机名，而是在ansible管理端主机清单中的主机名）。如果配置清单中只是IP那么inventory_hostname获取到的则是IP。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#/home/ansible/hosts文件</span><br><span class="line">testtest ansible_host=192.168.27.7</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">testtest</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">输出主机清单中的主机名</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;inventory_hostname&#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">定义操作主机的linux主机名</span> </span><br><span class="line">      <span class="attr">command :</span> <span class="string">hostname</span></span><br><span class="line">      <span class="attr">register :</span> <span class="string">hostname</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">输出操作的主机的linux主机名</span></span><br><span class="line">      <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;hostname.stdout&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/inventory_hostname.png" alt="inventory_hostname">  </p><h3 id="inventory-hostname-short"><a href="#inventory-hostname-short" class="headerlink" title="inventory_hostname_short"></a>inventory_hostname_short</h3><p>与inventory_hostname类似，inventory_hostname_short返回的则是简短名称(主机清单主机名称“.”分割的第一段名称)  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#/home/ansible/hosts文件</span><br><span class="line">[test]</span><br><span class="line">test.test3 ansible_host=192.168.27.7</span><br><span class="line">192.168.27.8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test -i /home/ansible/hosts -m debug -a &quot;msg=&#123;&#123;inventory_hostname_short&#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/inventory_hostname_short.png" alt="inventory_hostname_short">  </p><h3 id="play-hosts"><a href="#play-hosts" class="headerlink" title="play_hosts"></a>play_hosts</h3><p>plsy_hosts可以获取到当前play操作的所有主机的主机列表名称。  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">name :</span> <span class="string">play1</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;play_hosts&#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span> <span class="string">test4</span></span><br><span class="line">  <span class="attr">name :</span> <span class="string">play2</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">debug :</span> </span><br><span class="line">        <span class="attr">msg :</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;play_hosts&#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/play_hosts.png" alt="play_hosts">  </p><h3 id="groups"><a href="#groups" class="headerlink" title="groups"></a>groups</h3><p>groups可以获取到主机清单中所有的组信息。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#/home/ansible/hosts文件</span><br><span class="line">test4 ansible_host=192.168.27.8</span><br><span class="line">[test]</span><br><span class="line">test3 ansible_host=192.168.27.7</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -i /home/ansible/hosts -m debug -a &#x27;msg=&quot;&#123;&#123;groups&#125;&#125;&quot;&#x27;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/groups1.png" alt="groups1"><br>当然可以获取指定组的信息。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -i /home/ansible/hosts -m debug -a &#x27;msg=&quot;&#123;&#123;groups.test&#125;&#125;&quot;&#x27;</span><br><span class="line">ansible test3 -i /home/ansible/hosts -m debug -a &#x27;msg=&quot;&#123;&#123;groups.ungrouped&#125;&#125;&quot;&#x27;  #后去未分组的主机</span><br></pre></td></tr></table></figure><h3 id="group-names"><a href="#group-names" class="headerlink" title="group_names"></a>group_names</h3><p>获取当前操作主机在主机清单中的分组名。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#/home/ansible/hosts文件</span><br><span class="line">[allhosts:children]</span><br><span class="line">test</span><br><span class="line">[test]</span><br><span class="line">test3 ansible_host=192.168.27.7</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -i /home/ansible/hosts -m debug -a &#x27;msg=&quot;&#123;&#123;group_names&#125;&#125;&quot;&#x27;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/group_names.png" alt="group_names"><br>因为test3属于test分组，而test分组又属于allhosts分组。  </p><h3 id="inventory-dir"><a href="#inventory-dir" class="headerlink" title="inventory_dir"></a>inventory_dir</h3><p>该变量可以获取到使用的inventory文件的位置。<br><img src="/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/inventory_dir.png" alt="inventory_dir">  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/12/ansible/5-playbook%E6%8B%93%E5%B1%95/ansible.jpg&quot; alt=&quot;ansible&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="ansible" scheme="http://example.com/categories/ansible/"/>
    
    
    <category term="playbook" scheme="http://example.com/tags/playbook/"/>
    
  </entry>
  
  <entry>
    <title>4-playbook快速入门</title>
    <link href="http://example.com/2021/08/04/ansible/4-playbook/"/>
    <id>http://example.com/2021/08/04/ansible/4-playbook/</id>
    <published>2021-08-04T06:49:49.000Z</published>
    <updated>2022-05-24T06:22:56.639Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/04/ansible/4-playbook/ansible.jpg" alt="ansible">  </p><span id="more"></span><p>ansible的任务配置文件是playbook，可以称为是“剧本”，playbook中包含一系列任务，每个任务被称为是“play、戏剧”。<br>学习playbook需要先学习 <a href="/2022/03/24/YAML/YAML%E5%9F%BA%E7%A1%80/" title="YAML基础">YAML基础</a>。  </p><h1 id="playbook语法特性"><a href="#playbook语法特性" class="headerlink" title="playbook语法特性"></a>playbook语法特性</h1><ol><li>需要以<code>---</code>开始，并顶行首写  </li><li>次行开始正常写playbook的内容，建议首先将该playbook的作用标明  </li><li>使用<code>#</code>表示注释  </li><li>缩进必须要进行注意，同级别的缩进格数是一样的，不能使用Tab进行缩进  </li><li>区分大小写  </li></ol><h1 id="shell与playbook的转换"><a href="#shell与playbook的转换" class="headerlink" title="shell与playbook的转换"></a>shell与playbook的转换</h1><p>ansible可以将shell脚本或者命令轻松的转换为playbook。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch /home/playbook-test.txt</span><br><span class="line">echo &quot;playbook 学习&quot; &gt; /home/playbook-test.txt</span><br></pre></td></tr></table></figure><p>简单的转换为playbook文件。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---     # 开始字符，文件顶行写</span><br><span class="line">- hosts: test3  #指定远程操作的主机</span><br><span class="line">  tasks: </span><br><span class="line">    - name: &quot;创建/home/playbook-test.txt文件&quot;     #为task数组的对象指定一个name</span><br><span class="line">      command: touch /home/playbook-test.txt     #使用command模块来运行标准shell命令</span><br><span class="line">    - name: &quot;在/home/playbook-test.txt文件中输入playbook 学习&quot;</span><br><span class="line">      shell: echo &quot;playbook 学习&quot; &gt; /home/playbook-test.txt   #因为用到了重定向，所以使用shell模块</span><br></pre></td></tr></table></figure><p>还可以使用ansible的模块进行编写playbook文件。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---     # 开始字符，文件顶行写</span><br><span class="line">- hosts: test3  #指定远程操作的主机</span><br><span class="line">  remote_user: root #可以指定在进行远程操作时使用哪个用户进行操作,相当于sudo: yes</span><br><span class="line">  tasks: </span><br><span class="line">    - name: &quot;创建/home/playbook-test.txt文件&quot;     #为task数组的对象指定一个name</span><br><span class="line">      file:</span><br><span class="line">        path: /home/playbook-test.txt</span><br><span class="line">        state: touch </span><br><span class="line">    - name: &quot;在/home/playbook-test.txt文件中输入&#x27;playbook 学习&#x27;&quot;</span><br><span class="line">      lineinfile: </span><br><span class="line">        path: /home/playbook-test.txt</span><br><span class="line">        line: &quot;playbook 学习&quot;</span><br></pre></td></tr></table></figure><p>每个task的name都会在playbook执行时展示执行情况，虽然在playbook中不添加name也可以，但是还是建议加上，以便于问题的排查。<br><img src="/2021/08/04/ansible/4-playbook/playbook1.png">  </p><h2 id="playbook与shell的区别"><a href="#playbook与shell的区别" class="headerlink" title="playbook与shell的区别"></a>playbook与shell的区别</h2><p>因为ansible有着“幂等性”的特性，所以执行一个playbook时，当ansible会发现系统现有的状态与playbook定义的状态是相同时，就会跳过该操作，所以当再次执行playbook时，执行速度会非常的快；但是shell脚本重复重复进行操作时，会将所有的步骤在执行一遍。  </p><h1 id="playbook中多个paly"><a href="#playbook中多个paly" class="headerlink" title="playbook中多个paly"></a>playbook中多个paly</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">test1</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts :</span> <span class="string">test3</span></span><br><span class="line">  <span class="attr">tasks :</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name :</span> <span class="string">test2</span></span><br><span class="line">      <span class="attr">command :</span> <span class="string">ls</span> <span class="string">/home/yyg</span></span><br></pre></td></tr></table></figure><p>这样一个palybook中就包含了两个paly</p><h1 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h1><p>remote_user: root 　　    #在远程主机上以哪个用户身份执行<br>become: yes                     #是否允许身份切换<br>become_method: sudo   #切换用户身份的方式，有sudo、su、pbrun等方式，默认为sudo<br>become_user: root          #切换成什么用户身份，默认为root<br>以上选项不仅可用于全局，也可用于各task中。<br>如果需要指定切换用户身份时的密码，可在执行ansible-playbook时使用选项<code>--ask-become-pass</code>或者<code>-K</code></p><h1 id="ansible-playbook-执行技巧"><a href="#ansible-playbook-执行技巧" class="headerlink" title="ansible-playbook 执行技巧"></a>ansible-playbook 执行技巧</h1><h2 id="限定执行范围"><a href="#限定执行范围" class="headerlink" title="限定执行范围"></a>限定执行范围</h2><ul><li>limit<br>指定操作的主机范围可以在playbook中通过<code>hosts</code>进行限定<br>也可以在ansible-playbook命令来指定主机。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook XXX.yml -limit test3  #通过这种方式执行，及时playbook中是hosts: test3,test4,test5，也只会对test3进行操作</span><br></pre></td></tr></table></figure></li><li>–list-hosts<br>该选项可以知道playbook会操作用在那些主机上，并不会执行playbook文件。<br><img src="/2021/08/04/ansible/4-playbook/--list-hosts.png" alt="--list-hosts">  </li></ul><h2 id="用户与权限设置"><a href="#用户与权限设置" class="headerlink" title="用户与权限设置"></a>用户与权限设置</h2><ul><li><p>–remote-user<br>在playbook中，如果hosts字段下没有定义users，那么将会使用你在Inventory文件中定义的用户，如果Inventory文件中也没有定义用户，则会使用当前系统用户身份来ssh远程。<br>可以在ansible-playbook中使用–remote-user选项来指定用户。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook XXX.yml --remote-user=yyg</span><br></pre></td></tr></table></figure></li><li><p>–ask-sudo-pass  </p></li><li><p>-ask-sudo-pass在需要输入ssh密码的情况下交互式的输入密码  </p></li><li><p>–sudo<br>使用–sudo选项，可以强制所有play都使用sudo用户，同时使用–sudo-user选项指定sudo可以使用哪个用户的权限  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以yyg身份运行playbook，并在执行执行过程中交互式输入密码</span><br><span class="line">ansible-playbook XXX.yml --sudo --sudo-user=yyg -ask-sudo-pass</span><br></pre></td></tr></table></figure></li></ul><h2 id="其他常用选项"><a href="#其他常用选项" class="headerlink" title="其他常用选项"></a>其他常用选项</h2><ul><li>–inventory=PATH   -i ：指定inventory文件  </li><li>-v：输出详细信息  </li><li>–fork=NUM ：执行并发数  </li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/04/ansible/4-playbook/ansible.jpg&quot; alt=&quot;ansible&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="ansible" scheme="http://example.com/categories/ansible/"/>
    
    
    <category term="playbook" scheme="http://example.com/tags/playbook/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/08/02/Linux/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-08-01T16:22:23.000Z</published>
    <updated>2022-05-24T04:50:46.742Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="正则表达式的分类"><a href="#正则表达式的分类" class="headerlink" title="正则表达式的分类"></a>正则表达式的分类</h2><ol><li>基本的正则表达式（Basic Regular Expression 又叫Basic RegEx 简称BREs）  </li><li>扩展的正则表达式（Extended Regular Expression 又叫Extended RegEx 简称EREs）  </li><li>Perl的正则表达式（Perl Regular Expression 又叫Perl RegEx 简称PREs）  </li></ol><h2 id="基本组成部分"><a href="#基本组成部分" class="headerlink" title="基本组成部分"></a>基本组成部分</h2><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>\</td><td>转义符，将特殊字符进行转义，忽略其特殊意义</td><td>a.b匹配a.b，但不能匹配ajb，.被转义为特殊意义</td><td>\</td><td>\</td><td>\</td><td>\</td></tr><tr><td>^</td><td>匹配行首，awk中，^则是匹配字符串的开始</td><td>^tux匹配以tux开头的行</td><td>^</td><td>^</td><td>^</td><td>^</td></tr><tr><td>$</td><td>匹配行尾，awk中，$则是匹配字符串的结尾</td><td>tux$匹配以tux结尾的行</td><td>$</td><td>$</td><td>$</td><td>$</td></tr><tr><td>.</td><td>匹配除换行符\n之外的任意单个字符，awk则中可以</td><td>ab.匹配abc或bad，不可匹配abcd或abde，只能匹配单字符</td><td>.</td><td>.</td><td>.</td><td>.</td></tr><tr><td>[ ]</td><td>匹配包含在[字符]之中的任意一个字符</td><td>coo[kl]可以匹配cook或cool</td><td>[ ]</td><td>[ ]</td><td>[ ]</td><td>[ ]</td></tr><tr><td>[^]</td><td>匹配[^字符]之外的任意一个字符</td><td>123[^45]不可以匹配1234或1235，1236、1237都可以</td><td>[^]</td><td>[^]</td><td>[^]</td><td>[^]</td></tr><tr><td>[-]</td><td>匹配[]中指定范围内的任意一个字符，要写成递增</td><td>[0-9]可以匹配1、2或3等其中任意一个数字</td><td>[-]</td><td>[-]</td><td>[-]</td><td>[-]</td></tr><tr><td>?</td><td>匹配之前的项1次或者0次</td><td>colou?r可以匹配color或者colour，不能匹配colouur</td><td>不支持</td><td>?</td><td>?</td><td>?</td></tr><tr><td>+</td><td>匹配之前的项1次或者多次</td><td>sa-6+匹配sa-6、sa-666，不能匹配sa-</td><td>不支持</td><td>+</td><td>+</td><td>+</td></tr><tr><td>*</td><td>匹配之前的项0次或者多次</td><td>co* l匹配cl、col、cool、coool等</td><td>*</td><td>*</td><td>*</td><td>*</td></tr><tr><td>( )</td><td>匹配表达式，创建一个用于匹配的子串</td><td>ma(tri)?匹配max或maxtrix</td><td>不支持</td><td>( )</td><td>( )</td><td>( )</td></tr><tr><td>{n}</td><td>匹配之前的项n次，n是可以为0的正整数</td><td>[0-9]{3}匹配任意一个三位数，可以扩展为[0-9][0-9][0-9]</td><td>不支持</td><td>{n}</td><td>{n}</td><td>{n}</td></tr><tr><td>{n,}</td><td>之前的项至少需要匹配n次</td><td>[0-9]{2,}匹配任意一个两位数或更多位数</td><td>不支持</td><td>{n,}</td><td>{n,}</td><td>{n,}</td></tr><tr><td>{n,m}</td><td>指定之前的项至少匹配n次，最多匹配m次，n&lt;=m</td><td>[0-9]{2,5}匹配从两位数到五位数之间的任意一个数字</td><td>不支持</td><td>{n,m}</td><td>{n,m}</td><td>{n,m}</td></tr><tr><td>|</td><td>交替匹配|两边的任意一项</td><td>ab(c|d)匹配abc或abd</td><td>不支持</td><td>|</td><td>|</td><td>|</td></tr></tbody></table><h2 id="POSIX字符类"><a href="#POSIX字符类" class="headerlink" title="POSIX字符类"></a>POSIX字符类</h2><p>POSIX字符类是一个形如[:…:]的特殊元序列（meta sequence），他可以用于匹配特定的字符范围。  </p><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>匹配任意一个字母或数字字符</td><td>[[:alnum:]]+</td><td>[:alnum:]</td><td>[:alnum:]</td><td>[:alnum:]</td><td>[:alnum:]</td></tr><tr><td>[:alpha:]</td><td>匹配任意一个字母字符（包括大小写字母）</td><td>[[:alpha:]]{4}</td><td>[:alpha:]</td><td>[:alpha:]</td><td>[:alpha:]</td><td>[:alpha:]</td></tr><tr><td>[:blank:]</td><td>空格与制表符（横向和纵向）</td><td>[[:blank:]]*</td><td>[:blank:]</td><td>[:blank:]</td><td>[:blank:]</td><td>[:blank:]</td></tr><tr><td>[:digit:]</td><td>匹配任意一个数字字符</td><td>[[:digit:]]?</td><td>[:digit:]</td><td>[:digit:]</td><td>[:digit:]</td><td>[:digit:]</td></tr><tr><td>[:lower:]</td><td>匹配小写字母</td><td>[[:lower:]]{5,}</td><td>[:lower:]</td><td>[:lower:]</td><td>[:lower:]</td><td>[:lower:]</td></tr><tr><td>[:upper:]</td><td>匹配大写字母</td><td>([[:upper:]]+)?</td><td>[:upper:]</td><td>[:upper:]</td><td>[:upper:]</td><td>[:upper:]</td></tr><tr><td>[:punct:]</td><td>匹配标点符号</td><td>[[:punct:]]</td><td>[:punct:]</td><td>[:punct:]</td><td>[:punct:]</td><td>[:punct:]</td></tr><tr><td>[:space:]</td><td>匹配一个包括换行符、回车等在内的所有空白符</td><td>[[:space:]]+</td><td>[:space:]</td><td>[:space:]</td><td>[:space:]</td><td>[:space:]</td></tr><tr><td>[:graph:]</td><td>匹配任何一个可以看得见的且可以打印的字符</td><td>[[:graph:]]</td><td>[:graph:]</td><td>[:graph:]</td><td>[:graph:]</td><td>[:graph:]</td></tr><tr><td>[:xdigit:]</td><td>任何一个十六进制数（即：0-9，a-f，A-F）</td><td>[[:xdigit:]]+</td><td>[:xdigit:]</td><td>[:xdigit:]</td><td>[:xdigit:]</td><td>[:xdigit:]</td></tr><tr><td>[:cntrl:]</td><td>任何一个控制字符（ASCII字符集中的前32个字符)</td><td>[[:cntrl:]]</td><td>[:cntrl:]</td><td>[:cntrl:]</td><td>[:cntrl:]</td><td>[:cntrl:]</td></tr><tr><td>[:print:]</td><td>任何一个可以打印的字符</td><td>[[:print:]]</td><td>[:print:]</td><td>[:print:]</td><td>[:print:]</td><td>[:print:]</td></tr></tbody></table><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>元字符（meta character）是一种Perl风格的正则表达式，只有一部分文本处理工具支持它，并不是所有的文本处理工具都支持。  </p><table><thead><tr><th>正则表达式</th><th>描述</th><th>示例</th><th>Basic RegEx</th><th>Extended RegEx</th><th>Python RegEx</th><th>Perl regEx</th></tr></thead><tbody><tr><td>\b</td><td>单词边界</td><td>\bcool\b 匹配cool，不匹配coolant</td><td>\b</td><td>\b</td><td>\b</td><td>\b</td></tr><tr><td>\B</td><td>非单词边界</td><td>cool\B 匹配coolant，不匹配cool</td><td>\B</td><td>\B</td><td>\B</td><td>\B</td></tr><tr><td>\d</td><td>单个数字字符</td><td>b\db 匹配b2b，不匹配bcb</td><td>不支持</td><td>不支持</td><td>\d</td><td>\d</td></tr><tr><td>\D</td><td>单个非数字字符</td><td>b\Db 匹配bcb，不匹配b2b</td><td>不支持</td><td>不支持</td><td>\D</td><td>\D</td></tr><tr><td>\w</td><td>单个单词字符（字母、数字与_）</td><td>\w 匹配1或a，不匹配&amp;</td><td>\w</td><td>\w</td><td>\w</td><td>\w</td></tr><tr><td>\W</td><td>单个非单词字符</td><td>\W 匹配&amp;，不匹配1或a</td><td>\W</td><td>\W</td><td>\W</td><td>\W</td></tr><tr><td>\n</td><td>换行符</td><td>\n 匹配一个新行</td><td>不支持</td><td>不支持</td><td>\n</td><td>\n</td></tr><tr><td>\s</td><td>单个空白字符</td><td>x\sx 匹配x x，不匹配xx</td><td>不支持</td><td>不支持</td><td>\s</td><td>\s</td></tr><tr><td>\S</td><td>单个非空白字符</td><td>x\S\x 匹配xkx，不匹配xx</td><td>不支持</td><td>不支持</td><td>\S</td><td>\S</td></tr><tr><td>\r</td><td>回车</td><td>\r 匹配回车</td><td>不支持</td><td>不支持</td><td>\r</td><td>\r</td></tr><tr><td>\t</td><td>横向制表符</td><td>\t 匹配一个横向制表符</td><td>不支持</td><td>不支持</td><td>\t</td><td>\t</td></tr><tr><td>\v</td><td>垂直制表符</td><td>\v 匹配一个垂直制表符</td><td>不支持</td><td>不支持</td><td>\v</td><td>\v</td></tr><tr><td>\f</td><td>换页符</td><td>\f 匹配一个换页符</td><td>不支持</td><td>不支持</td><td>\f</td><td>\f</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习</title>
    <link href="http://example.com/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/07/31/Linux/Linux%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-07-31T06:47:19.000Z</published>
    <updated>2022-05-24T04:50:31.910Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg" alt="linux.jpg">  </p><span id="more"></span><h1 id="Linux命令查看网站"><a href="#Linux命令查看网站" class="headerlink" title="Linux命令查看网站"></a>Linux命令查看网站</h1><p><a href="https://man.linuxde.net/">Linux命令大全</a><br><a href="http://linux.51yip.com/">Linux命令手册</a><br><a href="https://www.linuxcool.com/">Linux命令大全(手册)</a>  </p><h1 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h1><h2 id="文件及目录管理命令"><a href="#文件及目录管理命令" class="headerlink" title="文件及目录管理命令"></a>文件及目录管理命令</h2><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><p><strong>作用</strong>：创建目录<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-p</td><td>递归创建多级目录</td></tr><tr><td>-m</td><td>建立目录的同时设置目录的权限</td></tr><tr><td>-z</td><td>设置安全上下文</td></tr><tr><td>-v</td><td>显示目录的创建过程</td></tr></tbody></table><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p><strong>作用</strong>：删除<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>忽略不存在的文件，不会出现警告信息</td></tr><tr><td>-i</td><td>删除前会询问用户是否操作</td></tr><tr><td>-r/R</td><td>递归删除</td></tr><tr><td>-v</td><td>显示指令的详细执行过程</td></tr></tbody></table><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><p><strong>作用</strong>：移动文件、文件名重命名<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-i</td><td>若存在同名文件，则向用户询问是否覆盖</td></tr><tr><td>-f</td><td>覆盖已有文件时，不进行任何提示</td></tr><tr><td>-b</td><td>当文件存在时，覆盖前为其创建一个备份</td></tr><tr><td>-u</td><td>当源文件比目标文件新，或者目标文件不存在时，才执行移动此操作</td></tr></tbody></table><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p><strong>作用</strong>：复制文件<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>若目标文件已存在，则会直接覆盖原文件</td></tr><tr><td>-i</td><td>若目标文件已存在，则会询问是否覆盖</td></tr><tr><td>-p</td><td>保留源文件或目录的所有属性</td></tr><tr><td>-r</td><td>递归复制文件和目录</td></tr><tr><td>-d</td><td>当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接原始文件或目录</td></tr><tr><td>-l</td><td>对源文件建立硬连接，而非复制文件</td></tr><tr><td>-s</td><td>对源文件建立符号连接，而非复制文件</td></tr><tr><td>-b</td><td>覆盖已存在的文件目标前将目标文件备份</td></tr><tr><td>-v</td><td>详细显示cp命令执行的操作过程</td></tr><tr><td>-a</td><td>等价于“dpr”选项</td></tr></tbody></table><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><p><strong>功能</strong>：1.更新文件时间标签   2.创建空文件</p><h3 id="dd"><a href="#dd" class="headerlink" title="dd"></a>dd</h3><p><strong>作用</strong>：复制文件并对原文件的内容进行转换和格式化处理<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>bs=&lt;字节数&gt;</td><td>将 ibs（输入）与 obs（输出）设成指定的字节数；</td></tr><tr><td>cbs=&lt;字节数&gt;</td><td>转换时，每次只转换指定的字节数；</td></tr><tr><td>conv=&lt;关键字&gt;</td><td>指定文件转换的方式；</td></tr><tr><td>count=&lt;区块数&gt;</td><td>仅读取指定的区块数；</td></tr><tr><td>ibs=&lt;字节数&gt;</td><td>每次读取的字节数；</td></tr><tr><td>obs=&lt;字节数&gt;</td><td>每次输出的字节数；</td></tr><tr><td>of=&lt;文件&gt;</td><td>输出到文件；如果不指定of，默认就会将stdout作为默认输出。</td></tr><tr><td>if=&lt;文件&gt;</td><td>输入文件；如果不指定if，默认就会从stdin中读取输入。</td></tr><tr><td>seek=&lt;区块数&gt;</td><td>一开始输出时，跳过指定的区块数；</td></tr><tr><td>skip=&lt;区块数&gt;</td><td>一开始读取时，跳过指定的区块数；</td></tr></tbody></table><p><strong>示例</strong>：<br>以上命令可以看出dd命令来测试内存操作速度  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> dd <span class="keyword">if</span>=/dev/zero of=test.txt bs=5M count=1   <span class="comment">#/dev/zero 是一个字符设备，会不断返回0值字节（\0）。</span></span></span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">5242880字节(5.2 MB)已复制，0.0135829 秒，386 MB/秒</span><br><span class="line"><span class="meta">$</span><span class="bash"> du -sh test.txt</span> </span><br><span class="line">5.0M  test.txt</span><br></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><p><strong>作用</strong>：探测给定文件的类型<br><strong>常用参数</strong>：  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-b</td><td>列出辨识结果时，不显示文件名称</td></tr><tr><td>-i</td><td>显示MIME类别</td></tr></tbody></table><h2 id="查找文件及目录"><a href="#查找文件及目录" class="headerlink" title="查找文件及目录"></a>查找文件及目录</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p><strong>作用</strong>：查找文件及目录<br><strong>常用参数</strong>：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-amin &lt;分钟&gt;、-atime &lt;24小时数&gt;</td><td>访问时间,用户最近一次访问时间。</td></tr><tr><td>-cmin &lt;分钟&gt;、-ctime &lt;24小时数&gt;</td><td>修改时间,文件最后一次修改时间。</td></tr><tr><td>-mmin &lt;分钟&gt;、-mtime &lt;24小时数&gt;</td><td>变化时间,文件数据元（例如权限等）最后一次修改时间。</td></tr><tr><td>-name &lt;范本样式&gt;</td><td>指定字符串作为寻找文件或目录的范本样式，可使用正则表达式进行匹配</td></tr><tr><td>-iname &lt;范本样式&gt;</td><td>此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别</td></tr><tr><td>-size &lt;文件大小&gt;</td><td>查找符合指定的文件大小的文件</td></tr><tr><td>-type &lt;文件类型&gt;</td><td>只寻找符合指定的文件类型的文件</td></tr><tr><td>-empty</td><td>寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录</td></tr></tbody></table><p><strong>示例</strong>：<br><strong>根据文件或者正则表达式进行匹配</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在/home目录下查找以.txt结尾的文件名</span></span><br><span class="line">find /home -name &quot;*.txt&quot;</span><br><span class="line">find /home -iname &quot;*.txt&quot;  #忽略大小写</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当前目录及子目录下查找所有以.txt和.pdf结尾的文件</span></span><br><span class="line">find . \( -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot; \)</span><br><span class="line">find . -name &quot;*.txt&quot; -o -name &quot;*.pdf&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 匹配文件路径或者文件</span></span><br><span class="line">find /usr/ -path &quot;*local*&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基于正则表达式匹配文件路径</span></span><br><span class="line">find . -regex &quot;.*\(\.txt\|\.pdf\)$&quot;</span><br><span class="line">find . -iregex &quot;.*\(\.txt\|\.pdf\)$&quot;</span><br></pre></td></tr></table></figure><p><strong>否定参数</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找出/home下不是以.txt结尾的文件</span></span><br><span class="line">find /home ! -name &quot;*.txt&quot;</span><br></pre></td></tr></table></figure><p><strong>根据文件类型进行搜索</strong><br><code>find . -type 类型参数</code>  </p><ul><li>f 普通文件  </li><li>l 符号连接</li><li>d 目录</li><li>c 字符设备</li><li>b 块设备</li><li>s 套接字</li><li>p 管道文件</li></ul><p><strong>根据文件时间戳进行搜索</strong><br><code>find . -type f 时间戳</code><br>UNIX/Linux文件系统每个文件都有三种时间戳：<br><strong>访问时间（-atime/天，-amin/分钟）</strong>：用户最近一次访问时间。<br><strong>修改时间（-mtime/天，-mmin/分钟）</strong>：文件最后一次修改时间。<br><strong>变化时间（-ctime/天，-cmin/分钟）</strong>：文件数据元（例如权限等）最后一次修改时间。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">搜索最近七天内被访问过的所有文件</span></span><br><span class="line">find . -type f -atime -7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索恰好在七天前被访问过的所有文件</span></span><br><span class="line">find . -type f -atime 7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索超过七天内被访问过的所有文件</span></span><br><span class="line">find . -type f -atime +7</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索访问时间超过10分钟的所有文件</span></span><br><span class="line">find . -type f -amin +10</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">找出比file.log修改时间更长的所有文件</span></span><br><span class="line">find . -type f -newer file.log</span><br></pre></td></tr></table></figure><p><strong>根据文件大小进行匹配</strong><br><code>find . -type f -size 文件大小单元</code><br>文件大小单元：  </p><ul><li>b —— 块（512字节）  </li><li>c —— 字节  </li><li>w —— 字（2字节）  </li><li>k —— 千字节  </li><li>M —— 兆字节  </li><li>G —— 吉字节  </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 搜索大于10KB的文件</span></span><br><span class="line">find . -type f -size +10k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 搜索小于10KB的文件</span></span><br><span class="line">find . -type f -size -10k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">搜索等于10KB的文件</span></span><br><span class="line">find . -type f -size 10k</span><br></pre></td></tr></table></figure><p><strong>删除匹配文件</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有.txt文件</span></span><br><span class="line">find . -type f -name &quot;*.txt&quot; -delete</span><br></pre></td></tr></table></figure><p><strong>借助exec选项与其他命令结合使用</strong>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 找出当前目录下所有root的文件，并把所有权更改为用户tom</span></span><br><span class="line">find .-type f -user root -exec chown tom &#123;&#125; \;    </span><br><span class="line"><span class="meta">#</span><span class="bash"> &#123;&#125; 用于与-<span class="built_in">exec</span>选项结合使用来匹配所有文件，然后会被替换为相应的文件名</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找出自己家目录下所有的.txt文件并删除</span></span><br><span class="line">find $HOME/. -name &quot;*.txt&quot; -ok rm &#123;&#125; \;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -ok和-<span class="built_in">exec</span>行为一样，不过它会给出提示，是否执行相应的操作。</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将30天前的.<span class="built_in">log</span>文件移动到old目录中</span></span><br><span class="line">find . -type f -mtime +30 -name &quot;*.log&quot; -exec cp &#123;&#125; old \;</span><br></pre></td></tr></table></figure><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><p><strong>作用</strong>：locate命令其实是find -name的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库<code>/var/lib/locatedb</code>，这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用<code>updatedb</code>命令，手动更新数据库。  </p><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h3><p><strong>作用</strong>：连接文件并打印到标准输出设备上<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n</td><td>由1开始对所有输出的行数编号</td></tr><tr><td>-A</td><td>显示不可打印字符，行尾显示“$”</td></tr></tbody></table><h3 id="head"><a href="#head" class="headerlink" title="head"></a>head</h3><p><strong>作用</strong>：用于显示文件的开头的内容，默认显示头10行。<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n &lt;数字&gt;</td><td>指定显示头部内容的行数</td></tr><tr><td>-v</td><td>显示文件名</td></tr></tbody></table><h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3><p><strong>作用</strong>：用于显示文件的尾部内容，默认显示尾10行。<br><strong>常用参数</strong>:  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-f</td><td>显示文件最新追加的内容。</td></tr><tr><td>-n &lt;数字&gt;</td><td>输出文件的尾部N（N位数字）行内容</td></tr><tr><td>-v</td><td>显示文件名</td></tr></tbody></table><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p><strong>作用</strong>：它以全屏幕的方式按页显示文本文件的内容<br><strong>按键说明</strong></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>按Space键</td><td>显示文本的下一屏内容。</td></tr><tr><td>按Enier键</td><td>只显示文本的下一行内容。</td></tr><tr><td>按斜线符/</td><td>接着输入一个模式，可以在文本中寻找下一个相匹配的模式。</td></tr><tr><td>按H键</td><td>显示帮助屏，该屏上有相关的帮助信息。</td></tr><tr><td>按B键</td><td>显示上一屏内容。</td></tr><tr><td>按Q键</td><td>退出rnore命令。</td></tr></tbody></table><h2 id="查找文件内容"><a href="#查找文件内容" class="headerlink" title="查找文件内容"></a>查找文件内容</h2><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p><strong>作用</strong>：能使用正则表达式搜索文本，并把匹配的行打印出来。<br><strong>常用参数</strong>：  </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-v</td><td>反转查找</td></tr><tr><td>-r</td><td>递归搜索</td></tr><tr><td>-n</td><td>列出所有的匹配行，显示行号</td></tr><tr><td>-E</td><td>正则表达式，与egrep 效果相同</td></tr><tr><td>-i</td><td>忽略字符大小写</td></tr><tr><td>-e</td><td>匹配多个，grep -e “a” -e “b”</td></tr><tr><td>-q</td><td>静默输出，命令运行成功返回0，失败则返回非0值</td></tr><tr><td>-A &lt; n &gt;</td><td>匹配文本之后n行</td></tr><tr><td>-B &lt; n &gt;</td><td>匹配文本之前n行</td></tr><tr><td>-C &lt; n &gt;</td><td>匹配文本前后各n行</td></tr></tbody></table><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h2><h3 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h3><p><strong>作用</strong>：xargs能够处理管道或者stdin并将其转换成特定命令的命令参数  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/08/02/cX51yi4KrLYRfJU.jpg&quot; alt=&quot;linux.jpg&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>3-ansible Ad-Hoc命令集</title>
    <link href="http://example.com/2021/07/13/ansible/3-Ad-Hoc%E5%91%BD%E4%BB%A4%E9%9B%86/"/>
    <id>http://example.com/2021/07/13/ansible/3-Ad-Hoc%E5%91%BD%E4%BB%A4%E9%9B%86/</id>
    <published>2021-07-13T13:18:33.000Z</published>
    <updated>2022-05-24T07:02:35.516Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/07/13/ansible/3-Ad-Hoc%E5%91%BD%E4%BB%A4%E9%9B%86/ansible.jpg" alt="ansible"><br>清单配置详解</p><span id="more"></span><p>ansible有两种完成任务的方式：  </p><ol><li>Ad-Hoc：也就是ansible命令，相当于linux命令  </li><li>ansible-playbook：ansible-playbook命令，相当于shell脚本  </li></ol><h1 id="Ad-Hoc用法"><a href="#Ad-Hoc用法" class="headerlink" title="Ad-Hoc用法"></a>Ad-Hoc用法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &lt;host-pattern&gt; [options]</span><br></pre></td></tr></table></figure><p><strong>[options]</strong>  </p><table><thead><tr><th align="left">选项</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left"><strong>-v</strong></td><td align="left">输出详细信息，-vvv输出更加详细的信息</td></tr><tr><td align="left"><strong>-i PATH</strong></td><td align="left">指定inventory配置文件，默认是/etc/ansible/hosts</td></tr><tr><td align="left"><strong>-f NUM</strong></td><td align="left">指定并发数，默认是使用的ansible.cfg中forks=5</td></tr><tr><td align="left"><strong>-m NAME</strong></td><td align="left">指定使用的模块名</td></tr><tr><td align="left"><strong>-M PATH</strong></td><td align="left">指定模块的存放路径</td></tr><tr><td align="left"><strong>-a ‘xxxxx’</strong></td><td align="left">模块参数</td></tr><tr><td align="left"><strong>-k ：</strong></td><td align="left">认证密码</td></tr><tr><td align="left"><strong>-K ：</strong></td><td align="left">sudo时使用的密码</td></tr><tr><td align="left"><strong>-o ：</strong></td><td align="left">标准输出至一行</td></tr><tr><td align="left"><strong>-b ：</strong></td><td align="left">相当于sudo命令</td></tr><tr><td align="left"><strong>-t PATH</strong></td><td align="left">将输出信息保存在PATH目录下，文件名为远程主机名</td></tr><tr><td align="left"><strong>-T seconds</strong></td><td align="left">设置最大超时时间，单位秒</td></tr><tr><td align="left"><strong>-B seconds</strong></td><td align="left">后台执行命令，超过指定秒后终止运行的命令</td></tr><tr><td align="left"><strong>-P seconds</strong></td><td align="left">定期返回后台任务进度</td></tr><tr><td align="left"><strong>-u USERNAME</strong></td><td align="left">指定以哪一个远程主机的用户进行远程</td></tr><tr><td align="left"><strong>-U USERNAME</strong></td><td align="left">相当于远程主机后执行sudo USERNAME</td></tr><tr><td align="left"><strong>–list-hosts</strong></td><td align="left">列出符合条件的所有主机列表</td></tr></tbody></table><p>当命令执行多台主机时，执行的主机是没有固定先后顺序的，且受并发数（默认5）限制，同一时间输出主机信息小于等于5都是正常的。  </p><ul><li><p>示例1<br>查看主机内存情况  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#command、script、shell，都可以实现远程shell命令运行</span><br><span class="line">ansible test3 -m command -a &#x27;free -m&#x27;    #command运行远程权限范围所有的shell命令</span><br><span class="line">ansible test3 -m shell -a &#x27;free -m&#x27;      #shell模块还可以执行远程主机的shell脚本文件，执行脚本时`-a`参数后跟脚本的路径</span><br><span class="line">ansible test3 -m script -a &#x27;free -m&#x27;     #script模块可以在远程主机执行主控端存储的shell脚本文件，相当于scp+shell组合，执行脚本时`-a`参数后跟脚本的路径</span><br></pre></td></tr></table></figure></li><li><p>示例2<br>使用yum安装指定软件  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -m yum -a &#x27;name=vim state=installed&#x27;</span><br></pre></td></tr></table></figure></li></ul><p><strong>name</strong>：后跟要操作的包名<br><strong>state</strong>：表示对包执行的操作，installed（安装）、latest（更新或者安装最新）、removed（卸载）  </p><ul><li>示例3<br>启动某一项服务，并设置开机启动  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -m service -a&#x27;name=xxxx state=started enabled=yes&#x27;</span><br></pre></td></tr></table></figure></li></ul><h1 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h1><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h3><p>将远程主机的文件拉取到ansible主机。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible test3 -m fetch -a&#x27;src=/etc/fstab dest=/home/test&#x27;</span><br></pre></td></tr></table></figure><p><strong>src</strong>：表示要拉取的远程主机的文件路径，只能是文件而不能是目录<br><strong>dest</strong>：表示将文件存放在ansible的路径<br>拉取到ansible主机的fstab文件路径是/home/test/test3/etc/fstab,说明在指定dest路径下会自动创一个主机的文件夹（/home/test/test3），然后在该主机文件夹下也会自动创建拉取的文件在远程主机中的路径结构以及文件。  </p><h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><p>将ansible主机上的文件拷贝到远程主机上。<br><strong>src</strong>：用于指定需要copy的文件或目录<br><strong>dest</strong>：用于指定文件将被拷贝到远程主机的哪个目录中，dest为必须参数<br><strong>content</strong>：当不使用src指定拷贝的文件时，可以使用content直接将content后的内容直接覆盖到dest的文件中国，src与content两个参数必有其一，否则会报错。<br><strong>force</strong> ：当远程主机的目标路径中已经存在同名文件，并且与ansible主机中的文件内容不同时，是否强制覆盖，可选值有yes和no，默认值为yes，表示覆盖，如果设置为no，则不会执行覆盖拷贝操作，远程主机中的文件保持不变。<br><strong>backup</strong>：当远程主机的目标路径中已经存在同名文件，并且与ansible主机中的文件内容不同时，是否对远程主机的文件进行备份，可选值有yes和no，当设置为yes时，会先备份远程主机中的文件，然后再将ansible主机中的文件拷贝到远程主机。<br><strong>owner</strong> ：指定文件拷贝到远程主机后的属主，但是远程主机上必须有对应的用户，否则会报错。<br><strong>group</strong> ：指定文件拷贝到远程主机后的属组，但是远程主机上必须有对应的组，否则会报错。<br><strong>mode</strong> ：指定文件拷贝到远程主机后的权限，如果你想将权限设置为”rw-r–r–”，则可以使用mode=0644表示，如果你想要在user对应的权限位上添加执行权限，则可以使用mode=u+x表示。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#将ansible主机中/home/yyg/test.txt复制到test3的/home/yyg下</span><br><span class="line">ansible test3 -m copy -a&#x27;src=/home/yyg/test.txt dest=/home/yyg&#x27;</span><br><span class="line"></span><br><span class="line">#在远程主机的/home/yyg/目录下生成文件test2.txt，改文件有两行第一行123第二行456</span><br><span class="line">ansible test3 -m copy -a&#x27;content=&quot;123\n456\n&quot; dest=/home/yyg/test2.txt&#x27;   #使用content时，dest必须是一个文件</span><br></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><p>对文件的基本操作：创建文件或目录、删除文件或目录、修改文件权限等<br><strong>path</strong>：指定要操作的文件或目录【必须参数】<br><strong>state</strong>：可选参数  </p><ul><li>directory：指定的path为一个目录，并创建目录；若目录存在则不进行操作  </li><li>touch：指定的path是文件，并创建文件；若存在则更新文件的时间戳  </li><li>link：指定的path是软连接  </li><li>hard：指定的path是硬连接  </li><li>absent：删除目录或者文件</li></ul><p>  <strong>src</strong>:当state是link或者hard时，还参数指向的是链接源<br>  <strong>owner</strong>:用于指定被操作文件的属主，属主对应的用户必须在远程主机中存在，否则会报错。<br>  <strong>group</strong>:用于指定被操作文件的属组，属组对应的组必须在远程主机中存在，否则会报错。<br>  <strong>mode</strong>：设置文件的权限，例如mode=777<br>  <strong>recurse</strong>：当要操作目录时，recurse=yes表示递归操作  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#在test3上创建一个/home/yyg/test.txt文件  </span><br><span class="line">ansible test3 -m file -a&#x27;path=/home/yyg/test.txt state=touch&#x27;</span><br><span class="line"></span><br><span class="line">#在test3上创建一个/home/yyg/dd 目录</span><br><span class="line">ansible test3 -m file -a&#x27;path=/home/yyg/dd state=directory&#x27;</span><br><span class="line"></span><br><span class="line">#为test3上/home/yyg/test.txt创建一个/home/yyg/test.link软连接</span><br><span class="line">ansible test3 -m file -a&#x27;path=/home/yyg/test.link state=link src=/home/yyg/test.txt&#x27;</span><br><span class="line"></span><br><span class="line">#为test3上/home/yyg/test.txt创建一个/home/yyg/test.hard软连接</span><br><span class="line">ansible test3 -m file -a&#x27;path=/home/yyg/test.hard state=hard src=/home/yyg/test.txt&#x27;</span><br><span class="line"></span><br><span class="line">#删除test3上的/home/yyg/test.hard</span><br><span class="line">ansible test3 -m file -a&#x27;path=/home/yyg/test.hard state=absent&#x27;</span><br><span class="line"></span><br><span class="line">#将test3上的/home/yyg/test.txt文件，属主为yyg、属组为yyg、权限改为777</span><br><span class="line">ansible test3 -m file -a&#x27;path=/home/yyg/test.txt owner=yyg group=yyg mode=777&#x27;</span><br></pre></td></tr></table></figure><h3 id="blockinfile"><a href="#blockinfile" class="headerlink" title="blockinfile"></a>blockinfile</h3><p>向指定的文件（默认尾部）插入文本，并自动插入标记<br><strong>path</strong>:指定操作的文件<br><strong>block</strong>:要插入的文本<br><strong>marker</strong>：自定义标记，默认会在插入的文本上行和下行插入<code># BEGIN ANSIBLE MANAGED BLOCK</code>、<code># END ANSIBLE MANAGED BLOCK</code>。当marker=marker=”{mark} 2020-04-20”，标记就会变成<code>BEGIN 2020-04-20</code>、<code>END 2020-04-20</code>，当然也可以不加{mark}<br><strong>state</strong>：默认参数为present表示更新标记的文本；当state=absent时，表示删除标记的文本<br><strong>backup</strong>:表示修改文件之前是否进行备份。<br><strong>insertbefore</strong>：可以与正则表达式一起使用，表示将文本添加在正则匹配的行后（有多行可以匹配时，以最后一个满足正则的行为准）<br><strong>insertafter</strong>：可以与正则表达式一起使用，表示将文本添加在正则匹配的行前（有多行可以匹配时，以最后一个满足正则的行为准）；当insertafter=BOF时表示将文本插入在文件开头。<br><strong>create</strong>: 操作的文件不存在时是否进行创建，默认create=no  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#向test3的/home/yyg/test.txt插入两行数字</span><br><span class="line">ansible test3 -m blockinfile -a &#x27;path=/home/yyg/test.txt block=&quot;123\n456\n&quot;&#x27;</span><br><span class="line"></span><br><span class="line">[root@test3 yyg]# more /home/yyg/test.txt </span><br><span class="line"># BEGIN ANSIBLE MANAGED BLOCK      </span><br><span class="line">123</span><br><span class="line">456</span><br><span class="line"># END ANSIBLE MANAGED BLOCK</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#向test3的/home/yyg/test.txt插入三行数字并自定义标记</span><br><span class="line">ansible test3 -m blockinfile -a &#x27;path=/home/yyg/test.txt marker=&quot;&#123;mark&#125; 2020-04-20&quot;  block=&quot;123\n456\n789\n&quot;&#x27;</span><br><span class="line"></span><br><span class="line">[root@test3 yyg]# more /home/yyg/test.txt </span><br><span class="line"># BEGIN ANSIBLE MANAGED BLOCK</span><br><span class="line">123</span><br><span class="line">456</span><br><span class="line"># END ANSIBLE MANAGED BLOCK</span><br><span class="line">BEGIN 2020-04-20</span><br><span class="line">123</span><br><span class="line">456</span><br><span class="line">789</span><br><span class="line">END 2020-04-20</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#对test3下/home/yyg/test.txt默认标记的文本进行修改</span><br><span class="line">ansible test3 -m blockinfile -a&#x27;path=/home/yyg/test.txt block=&quot;789\n456\n123\n&quot;&#x27;</span><br><span class="line">#可以查出这次的操作是针对默认标记的文本进行的修改</span><br><span class="line">[root@test3 yyg]# more /home/yyg/test.txt </span><br><span class="line"># BEGIN ANSIBLE MANAGED BLOCK</span><br><span class="line">789</span><br><span class="line">456</span><br><span class="line">123</span><br><span class="line"># END ANSIBLE MANAGED BLOCK</span><br><span class="line">BEGIN 2020-04-20</span><br><span class="line">123</span><br><span class="line">456</span><br><span class="line">789</span><br><span class="line">END 2020-04-20</span><br></pre></td></tr></table></figure><h3 id="lineinfile"><a href="#lineinfile" class="headerlink" title="lineinfile"></a>lineinfile</h3><p>确保文件中有指定的一行；替换指定的一行；删除指定文本<br><strong>path</strong>:指定要操作的文件<br><strong>line</strong>:指定要操作的文本或者替换为的文本<br><strong>state</strong>:默认是present，absent为删除指定的文本<br><strong>regexp</strong>:使用正则表达式匹配对应的行,当替换文本时，如果有多行文本都能被匹配，则只有最后面被匹配到的那行文本才会被替换;当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@test3 yyg]# more linefile </span><br><span class="line">test test 11111</span><br><span class="line"></span><br><span class="line">#确保/home/yyg/linefile有`test test`这一行</span><br><span class="line">ansible test3 -m lineinfile -a&#x27;path=/home/yyg/linefile line=&quot;test test&quot;&#x27;</span><br><span class="line"></span><br><span class="line">#若是linefile中有test test这一行则linefile文件不会有改变</span><br><span class="line">#【注意这里是匹配的整行，所以才会在文件尾加了test test】</span><br><span class="line">[root@test3 yyg]# more linefile </span><br><span class="line">test test 11111</span><br><span class="line">test test</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@test3 yyg]# more linefile1 </span><br><span class="line">1test</span><br><span class="line">2test</span><br><span class="line">3test</span><br><span class="line">3test</span><br><span class="line">4test</span><br><span class="line"></span><br><span class="line">#替换/home/yyg/linefile1中`3test`这一行为linefile</span><br><span class="line">ansible test3 -m lineinfile -a&#x27;path=/home/yyg/linefile1 regexp=&quot;^3&quot; line=&quot;linefile&quot;&#x27;</span><br><span class="line"></span><br><span class="line">#【注意只对匹配的最后一行进行替换，若没有匹配的行则会在文件尾添加 linefile 】</span><br><span class="line">#【若想要在没有匹配行时不再文件尾添加文本 则需要在lineinfile模块参数中加上backrefs=yes】</span><br><span class="line">[root@qweasdzxc yyg]# more linefile1 </span><br><span class="line">1test</span><br><span class="line">2test</span><br><span class="line">3test</span><br><span class="line">linefile</span><br><span class="line">4test</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@qweasdzxc yyg]# more linefile2</span><br><span class="line">1test</span><br><span class="line">2test</span><br><span class="line">3test123</span><br><span class="line">3test</span><br><span class="line">3test</span><br><span class="line">4test</span><br><span class="line"></span><br><span class="line">#删除test3下/home/yyg/linefile2中是&quot;3test&quot;的行</span><br><span class="line">ansible test3 -m lineinfile -a&#x27;path=/home/yyg/linefile2 line=&quot;3test&quot; state=absent&#x27;</span><br><span class="line"></span><br><span class="line">#会将所有&quot;3test&quot;行删除，3test123则不会被删除</span><br><span class="line">[root@qweasdzxc yyg]# more linefile2</span><br><span class="line">1test</span><br><span class="line">2test</span><br><span class="line">3test123</span><br><span class="line">4test</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@qweasdzxc yyg]# more linefile3</span><br><span class="line">1test</span><br><span class="line">2test</span><br><span class="line">3test123</span><br><span class="line">3test</span><br><span class="line">3test</span><br><span class="line">4test</span><br><span class="line"></span><br><span class="line">#删除test3下/home/yyg/linefile3中有&quot;3test&quot;字符的行</span><br><span class="line">ansible test3 -m lineinfile -a&#x27;path=/home/yyg/linefile3 regexp=&quot;.*3test.*&quot; state=absent&#x27;</span><br><span class="line"></span><br><span class="line">#【注意参数line和regexp的区别】</span><br><span class="line">[root@qweasdzxc yyg]# more linefile3</span><br><span class="line">1test</span><br><span class="line">2test</span><br><span class="line">4test</span><br></pre></td></tr></table></figure><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><p>在远程主机中查找符合条件的文件。<br><strong>path</strong>：必须参数，指定在那个路径下查找文件（不会在子目录中查找），可以有多个路径，路径之间用逗号隔开<br><strong>recurse</strong>：默认是no，递归查找path下的子目录时需设定为yes<br><strong>hidden</strong>：默认no，设置为yes时查找隐藏文件<br><strong>file_type</strong>：默认情况下只会查找“文件”，当需要查找其他类型时，需进行指定：any、dierctory、file、link<br><strong>patterns</strong>：指定查找的文件名，可以使用通配符。<br><strong>use_regex</strong>：当patterns需使用正则表达式时，需设置为yes<br><strong>contains</strong>：指定一个正则表达式搜索文件中的内容<br><strong>age</strong>:根据文件mtime时间进行查找，单位有秒(s)、分(m)、时(h)、天(d)、星期(w)。age=3d（mtime在3天前的文件）、age=-3d（mtime在进3天内的文件）<br><strong>age_stamp</strong>：指定搜索的是文件的什么时间atime、ctime、mtime<br><strong>size</strong>:根据文件的大小进行查找（单位t、g、m、k、b），size=3m（大于3m的文件）、size=-3m（小于等于3m的文件）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">在test3主机的/home/yyg目录中查找文件内容中包含abc字符串的文件，隐藏文件会被忽略，不会进行递归查找。</span><br><span class="line">[root@zabbix ~]# ansible test3 -m find -a&#x27;paths=/home/yyg contains=&quot;.*abc.*&quot;&#x27;</span><br><span class="line">test3 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;examined&quot;: 14, </span><br><span class="line">    &quot;files&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;atime&quot;: 1587594438.3750508, </span><br><span class="line">            &quot;ctime&quot;: 1587594438.3750508, </span><br><span class="line">            &quot;dev&quot;: 64768, </span><br><span class="line">            &quot;gid&quot;: 0, </span><br><span class="line">            &quot;gr_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;inode&quot;: 50780728, </span><br><span class="line">            &quot;isblk&quot;: false, </span><br><span class="line">            &quot;ischr&quot;: false, </span><br><span class="line">            &quot;isdir&quot;: false, </span><br><span class="line">            &quot;isfifo&quot;: false, </span><br><span class="line">            &quot;isgid&quot;: false, </span><br><span class="line">            &quot;islnk&quot;: false, </span><br><span class="line">            &quot;isreg&quot;: true, </span><br><span class="line">            &quot;issock&quot;: false, </span><br><span class="line">            &quot;isuid&quot;: false, </span><br><span class="line">            &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">            &quot;mtime&quot;: 1587594438.3750508, </span><br><span class="line">            &quot;nlink&quot;: 1, </span><br><span class="line">            &quot;path&quot;: &quot;/home/yyg/find.txt&quot;, </span><br><span class="line">            &quot;pw_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;rgrp&quot;: true, </span><br><span class="line">            &quot;roth&quot;: true, </span><br><span class="line">            &quot;rusr&quot;: true, </span><br><span class="line">            &quot;size&quot;: 8, </span><br><span class="line">            &quot;uid&quot;: 0, </span><br><span class="line">            &quot;wgrp&quot;: false, </span><br><span class="line">            &quot;woth&quot;: false, </span><br><span class="line">            &quot;wusr&quot;: true, </span><br><span class="line">            &quot;xgrp&quot;: false, </span><br><span class="line">            &quot;xoth&quot;: false, </span><br><span class="line">            &quot;xusr&quot;: false</span><br><span class="line">        &#125;</span><br><span class="line">    ], </span><br><span class="line">    &quot;matched&quot;: 1, </span><br><span class="line">    &quot;msg&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">在test3主机的/home/yyg目录以及其子目录中查找文件内容中包含abc字符串的文件，隐藏文件会被忽略。</span><br><span class="line">[root@zabbix ~]# ansible test3 -m find -a&#x27;paths=/home/yyg recurse=yes contains=&quot;.*abc.*&quot;&#x27;</span><br><span class="line">test3 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;examined&quot;: 16, </span><br><span class="line">    &quot;files&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;atime&quot;: 1587594661.6363747, </span><br><span class="line">            &quot;ctime&quot;: 1587594438.3750508, </span><br><span class="line">            &quot;dev&quot;: 64768, </span><br><span class="line">            &quot;gid&quot;: 0, </span><br><span class="line">            &quot;gr_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;inode&quot;: 50780728, </span><br><span class="line">            &quot;isblk&quot;: false, </span><br><span class="line">            &quot;ischr&quot;: false, </span><br><span class="line">            &quot;isdir&quot;: false, </span><br><span class="line">            &quot;isfifo&quot;: false, </span><br><span class="line">            &quot;isgid&quot;: false, </span><br><span class="line">            &quot;islnk&quot;: false, </span><br><span class="line">            &quot;isreg&quot;: true, </span><br><span class="line">            &quot;issock&quot;: false, </span><br><span class="line">            &quot;isuid&quot;: false, </span><br><span class="line">            &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">            &quot;mtime&quot;: 1587594438.3750508, </span><br><span class="line">            &quot;nlink&quot;: 1, </span><br><span class="line">            &quot;path&quot;: &quot;/home/yyg/find.txt&quot;, </span><br><span class="line">            &quot;pw_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;rgrp&quot;: true, </span><br><span class="line">            &quot;roth&quot;: true, </span><br><span class="line">            &quot;rusr&quot;: true, </span><br><span class="line">            &quot;size&quot;: 8, </span><br><span class="line">            &quot;uid&quot;: 0, </span><br><span class="line">            &quot;wgrp&quot;: false, </span><br><span class="line">            &quot;woth&quot;: false, </span><br><span class="line">            &quot;wusr&quot;: true, </span><br><span class="line">            &quot;xgrp&quot;: false, </span><br><span class="line">            &quot;xoth&quot;: false, </span><br><span class="line">            &quot;xusr&quot;: false</span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">            &quot;atime&quot;: 1587594824.9962718, </span><br><span class="line">            &quot;ctime&quot;: 1587594824.9962718, </span><br><span class="line">            &quot;dev&quot;: 64768, </span><br><span class="line">            &quot;gid&quot;: 0, </span><br><span class="line">            &quot;gr_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;inode&quot;: 50780729, </span><br><span class="line">            &quot;isblk&quot;: false, </span><br><span class="line">            &quot;ischr&quot;: false, </span><br><span class="line">            &quot;isdir&quot;: false, </span><br><span class="line">            &quot;isfifo&quot;: false, </span><br><span class="line">            &quot;isgid&quot;: false, </span><br><span class="line">            &quot;islnk&quot;: false, </span><br><span class="line">            &quot;isreg&quot;: true, </span><br><span class="line">            &quot;issock&quot;: false, </span><br><span class="line">            &quot;isuid&quot;: false, </span><br><span class="line">            &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">            &quot;mtime&quot;: 1587594824.9962718, </span><br><span class="line">            &quot;nlink&quot;: 1, </span><br><span class="line">            &quot;path&quot;: &quot;/home/yyg/find/find.txt&quot;, </span><br><span class="line">            &quot;pw_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;rgrp&quot;: true, </span><br><span class="line">            &quot;roth&quot;: true, </span><br><span class="line">            &quot;rusr&quot;: true, </span><br><span class="line">            &quot;size&quot;: 8, </span><br><span class="line">            &quot;uid&quot;: 0, </span><br><span class="line">            &quot;wgrp&quot;: false, </span><br><span class="line">            &quot;woth&quot;: false, </span><br><span class="line">            &quot;wusr&quot;: true, </span><br><span class="line">            &quot;xgrp&quot;: false, </span><br><span class="line">            &quot;xoth&quot;: false, </span><br><span class="line">            &quot;xusr&quot;: false</span><br><span class="line">        &#125;</span><br><span class="line">    ], </span><br><span class="line">    &quot;matched&quot;: 2, </span><br><span class="line">    &quot;msg&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">在test3主机的/home/yyg目录中查找以.sh结尾的文件，包括隐藏文件，但是不包括目录或其他文件类型，不会进行递归查找。</span><br><span class="line">[root@zabbix ~]# ansible test3 -m find -a&#x27;paths=/home/yyg patterns=&quot;*.sh&quot; hidden=yes&#x27;</span><br><span class="line">test3 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;examined&quot;: 17, </span><br><span class="line">    &quot;files&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;atime&quot;: 1587595005.4002025, </span><br><span class="line">            &quot;ctime&quot;: 1587595005.4002025, </span><br><span class="line">            &quot;dev&quot;: 64768, </span><br><span class="line">            &quot;gid&quot;: 0, </span><br><span class="line">            &quot;gr_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;inode&quot;: 50780730, </span><br><span class="line">            &quot;isblk&quot;: false, </span><br><span class="line">            &quot;ischr&quot;: false, </span><br><span class="line">            &quot;isdir&quot;: false, </span><br><span class="line">            &quot;isfifo&quot;: false, </span><br><span class="line">            &quot;isgid&quot;: false, </span><br><span class="line">            &quot;islnk&quot;: false, </span><br><span class="line">            &quot;isreg&quot;: true, </span><br><span class="line">            &quot;issock&quot;: false, </span><br><span class="line">            &quot;isuid&quot;: false, </span><br><span class="line">            &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">            &quot;mtime&quot;: 1587595005.4002025, </span><br><span class="line">            &quot;nlink&quot;: 1, </span><br><span class="line">            &quot;path&quot;: &quot;/home/yyg/find.sh&quot;, </span><br><span class="line">            &quot;pw_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;rgrp&quot;: true, </span><br><span class="line">            &quot;roth&quot;: true, </span><br><span class="line">            &quot;rusr&quot;: true, </span><br><span class="line">            &quot;size&quot;: 0, </span><br><span class="line">            &quot;uid&quot;: 0, </span><br><span class="line">            &quot;wgrp&quot;: false, </span><br><span class="line">            &quot;woth&quot;: false, </span><br><span class="line">            &quot;wusr&quot;: true, </span><br><span class="line">            &quot;xgrp&quot;: false, </span><br><span class="line">            &quot;xoth&quot;: false, </span><br><span class="line">            &quot;xusr&quot;: false</span><br><span class="line">        &#125;, </span><br><span class="line">        &#123;</span><br><span class="line">            &quot;atime&quot;: 1587595141.808884, </span><br><span class="line">            &quot;ctime&quot;: 1587595141.808884, </span><br><span class="line">            &quot;dev&quot;: 64768, </span><br><span class="line">            &quot;gid&quot;: 0, </span><br><span class="line">            &quot;gr_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;inode&quot;: 50780731, </span><br><span class="line">            &quot;isblk&quot;: false, </span><br><span class="line">            &quot;ischr&quot;: false, </span><br><span class="line">            &quot;isdir&quot;: false, </span><br><span class="line">            &quot;isfifo&quot;: false, </span><br><span class="line">            &quot;isgid&quot;: false, </span><br><span class="line">            &quot;islnk&quot;: false, </span><br><span class="line">            &quot;isreg&quot;: true, </span><br><span class="line">            &quot;issock&quot;: false, </span><br><span class="line">            &quot;isuid&quot;: false, </span><br><span class="line">            &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">            &quot;mtime&quot;: 1587595141.808884, </span><br><span class="line">            &quot;nlink&quot;: 1, </span><br><span class="line">            &quot;path&quot;: &quot;/home/yyg/.find.sh&quot;, </span><br><span class="line">            &quot;pw_name&quot;: &quot;root&quot;, </span><br><span class="line">            &quot;rgrp&quot;: true, </span><br><span class="line">            &quot;roth&quot;: true, </span><br><span class="line">            &quot;rusr&quot;: true, </span><br><span class="line">            &quot;size&quot;: 0, </span><br><span class="line">            &quot;uid&quot;: 0, </span><br><span class="line">            &quot;wgrp&quot;: false, </span><br><span class="line">            &quot;woth&quot;: false, </span><br><span class="line">            &quot;wusr&quot;: true, </span><br><span class="line">            &quot;xgrp&quot;: false, </span><br><span class="line">            &quot;xoth&quot;: false, </span><br><span class="line">            &quot;xusr&quot;: false</span><br><span class="line">        &#125;</span><br><span class="line">    ], </span><br><span class="line">    &quot;matched&quot;: 2, </span><br><span class="line">    &quot;msg&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h3><p>根据指定的正则表达式替换文件中所有匹配的内容。<br><strong>path</strong>：必须参数，指定要操作的文件<br><strong>regexp</strong>：必须参数，指定一个表达式。<br><strong>replace</strong>：指定最终替换成的字符串<br><strong>backup</strong>：修改前是否进行备份  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# ansible test3 -m replace -a&#x27;path=/home/yyg/find.txt regexp=&quot;abc&quot; replace=&quot;ABC&quot;&#x27;</span><br><span class="line">test3 | CHANGED =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;msg&quot;: &quot;1 replacements made&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="命令模块"><a href="#命令模块" class="headerlink" title="命令模块"></a>命令模块</h2><h3 id="command"><a href="#command" class="headerlink" title="command"></a>command</h3><p>在远程主机上执行命令，命令不会经过shell处理，例如指定的命令中含有重定向、管道等，这些字符就会失效。<br><strong>chdir</strong>：指定一个目录，命令会在该目录下执行<br><strong>creates</strong>：指定一个文件，当文件存在时不指定命令<br><strong>removes</strong>：指定一个文件，当文件不存在时执行命令  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test3下/home/yyg目录下有testfile，当这个文件存在时，在/home/yyg目录下执行命令ll  </span><br><span class="line">[root@zabbix ~]# ansible test3 -m command -a&#x27;chdir=/home/yyg removes=testfile ls -l&#x27;</span><br><span class="line">test3 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r-- 1 root root 0 4月  23 06:58 testfile</span><br><span class="line"></span><br><span class="line">[root@zabbix ~]# ansible test3 -m command -a&#x27;chdir=/home/yyg creates=testfile ls -l&#x27;</span><br><span class="line">test3 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">skipped, since testfile exists</span><br></pre></td></tr></table></figure><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>在远程主机上执行命令，shell模块在远程主机中执行命令时，会经过远程主机上的/bin/sh程序处理，所以可以使用管道、重定向<br><strong>chdir</strong>：指定一个目录，命令会在该目录下执行<br><strong>creates</strong>：指定一个文件，当文件存在时不指定命令<br><strong>removes</strong>：指定一个文件，当文件不存在时执行命令  </p><h3 id="script"><a href="#script" class="headerlink" title="script"></a>script</h3><p>在远程主机上执行ansible主机上的脚本，不需要手动拷贝到远程主机后再执行<br><strong>chdir</strong>：指定一个目录，命令会在该目录下执行<br><strong>creates</strong>：指定一个文件，当文件存在时不指定命令<br><strong>removes</strong>：指定一个文件，当文件不存在时执行命令  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在test3的/home/yyg 目录下执行ansible主机上的/home/script.sh</span><br><span class="line">ansible test3 -m script -a&#x27;/home/script.sh chdir=&quot;/home/yyg&quot;&#x27;</span><br></pre></td></tr></table></figure><h2 id="系统类型模块"><a href="#系统类型模块" class="headerlink" title="系统类型模块"></a>系统类型模块</h2><h3 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h3><p>相当于crontab命令。<br>【时间参数，默认情况下是*】<br><strong>minute</strong>：定时执行中的分钟<br><strong>hour</strong>：小时<br><strong>day</strong>：日<br><strong>month</strong>：月<br><strong>weekday</strong>：星期  </p><hr><p><strong>special_time</strong>：特殊时间用以替换定时的时间，reboot(重启后)、yearly(每年)、annually(每年，与yearly相同)、monthly(每月)、weekly(每周)、daily(每天)、hourly(每时)<br><strong>user</strong>：执行定时任务的用户<br><strong>job</strong>：指定定时执行的命令或者脚本<br><strong>name</strong>：指定定时任务的名称，会在注释中显示<br><strong>state</strong>：当计划任务有名称时，我们可以根据名称修改或删除对应的任务，当删除计划任务时，需要将state的值设置为absent<br><strong>disabled</strong>：可以根据任务名将定时任务取消（即注释），也要将任务的job和设定的时间写准确，否则例如，当时间写错误时，被注释的任务时间将被改为写错的时间<br><strong>backup</strong>：参数yes、no（默认），在修改定时任务时备份原定时任务清单，在/tmp目录下创建备份文件。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在test3主机上创建计划任务，任务名称为&quot;test special time&quot;，任务将在重启时执行，任务内容为输出test字符</span><br><span class="line">ansible test3 -m cron -a&#x27;special_time=reboot name=&quot;test special time&quot; job=&quot;echo test&quot;&#x27;</span><br><span class="line"></span><br><span class="line">[root@test3 yyg]# crontab -l</span><br><span class="line">#Ansible: test special time</span><br><span class="line">@reboot echo test</span><br></pre></td></tr></table></figure><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><p>管理远程主机上的服务。<br><strong>name</strong>：指定服务名<br><strong>state</strong>：要将服务设定的状态started、stopped、restarted、reloaded<br><strong>enabled</strong>：是否设置为开启启动，参数yes、no  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将test3上的firewalld服务关闭，并设置为开启不启动 </span><br><span class="line">ansible test3 -m service -a&#x27;name=firewalld state=stopped enabled=no&#x27;</span><br></pre></td></tr></table></figure><h2 id="用户、组模块"><a href="#用户、组模块" class="headerlink" title="用户、组模块"></a>用户、组模块</h2><h3 id="user"><a href="#user" class="headerlink" title="user"></a>user</h3><p>管理远程主机上的用户<br><strong>name</strong>：必须参数，指定用户名<br><strong>home</strong>：指定用户的家目录<br><strong>group</strong>：指定用户的数组<br><strong>groups</strong>：指定用户的附加组。当用户原已有附加组，需要在此基础上添加时需要配合append参数使用，否则将会将原附加组覆盖，而不是添加<br><strong>append</strong>：将groups参数提供的附加组，增添到用户的附加组中<br><strong>shell</strong>：指定用户的默认shell<br><strong>uid</strong>：指定用户的UID<br><strong>state</strong>：参数present（默认）、absent，absent表示将用户删除<br><strong>remove</strong>：当state=absent remove=yes时，表示将用户以及将用户的家目录进行删除  </p><h3 id="group"><a href="#group" class="headerlink" title="group"></a>group</h3><p>管理远程主机上的组<br><strong>name</strong>：必须参数，指定组<br><strong>state</strong>：present，absent，absent表示将组删除<br><strong>gid</strong>：用于指定组的gid  </p><h2 id="包管理模块"><a href="#包管理模块" class="headerlink" title="包管理模块"></a>包管理模块</h2><h3 id="yum-repository"><a href="#yum-repository" class="headerlink" title="yum_repository"></a>yum_repository</h3><p>管理远程主机上的yum仓库<br><strong>name</strong>:必须参数，用于指定要操作的唯一仓库的ID，也就是每个仓库对应的”中括号”内的仓库ID<br><strong>baseurl</strong>：用于设置yum仓库的baseurl<br><strong>description</strong>：此参数用于设置仓库的注释信息，也就是”.repo”配置文件中每个仓库对应的”name字段”对应的内容。<br><strong>file</strong>：此参数用于设置仓库的配置文件名称，即设置”.repo”配置文件的文件名前缀，在不使用此参数的情况下，默认以name参数的仓库ID作为”.repo”配置文件的文件名前缀，同一个’.repo’配置文件中可以存在多个yum源<br><strong>enabled</strong>：此参数用于设置是否激活对应的yum源，此参数默认值为yes，表示启用对应的yum源，设置为no表示不启用对应的yum源。<br><strong>gpgcheck</strong>：此参数用于设置是否开启rpm包验证功能，默认值为no，表示不启用包验证，设置为yes表示开启包验证功能。<br><strong>gpgcakey</strong>：当gpgcheck参数设置为yes时，需要使用此参数指定验证包所需的公钥<br><strong>state</strong>：默认值为present，当值设置为absent时，表示删除对应的yum源  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#使用如下命令在test3主机上设置ID为test的yum源，仓库配置文件路径为/etc/yum.repos.d/aliEpel.repo</span><br><span class="line">ansible test3 -m yum_repository -a&#x27;name=test description=test baseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/&#x27;</span><br></pre></td></tr></table></figure><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><p>在远程主机上通过yum源管理软件包<br><strong>name</strong>:必须参数，用于指定需要管理的软件包<br><strong>state</strong>:指定软件包的状态；present（默认值）、installed、latest、absent、removed，其中installed与present等效，latest表示安装yum中最新的版本，absent和removed等效，表示删除对应的软件包  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在test3上安装nginx</span><br><span class="line">ansible test3 -m yum -a&#x27;name=nginx&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/07/13/ansible/3-Ad-Hoc%E5%91%BD%E4%BB%A4%E9%9B%86/ansible.jpg&quot; alt=&quot;ansible&quot;&gt;&lt;br&gt;清单配置详解&lt;/p&gt;</summary>
    
    
    
    <category term="ansible" scheme="http://example.com/categories/ansible/"/>
    
    
    <category term="Ad-Hoc命令集" scheme="http://example.com/tags/Ad-Hoc%E5%91%BD%E4%BB%A4%E9%9B%86/"/>
    
  </entry>
  
</feed>
